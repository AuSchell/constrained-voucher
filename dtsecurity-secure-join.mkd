---
title: 6tisch Secure Join protocol
# abbrev: 6tisch-Secure-Join
docname: draft-richardson-6tisch-dtsecurity-secure-join-00

# stand_alone: true

ipr: trust200902
area: Internet
wg: 6tisch Working Group
kw: Internet-Draft
cat: info

coding: us-ascii
pi:    # can use array (if all yes) or hash here
#  - toc
#  - sortrefs
#  - symrefs
  toc: yes
  sortrefs:   # defaults to yes
  symrefs: yes

author:
      -
        ins: M. Richardson
        name: Michael Richardson
        org: Sandelman Software Works
        email: mcr+ietf@sandelman.ca


normative:
  RFC2119:
  I-D.ietf-6lo-privacy-considerations:
  RFC7228:
  I-D.ietf-anima-bootstrapping-keyinfra:
  I-D.ietf-6tisch-minimal:
  iec62591:
    target: "https://webstore.iec.ch/publication/24433"
    title: "62591:2016 Industrial networks - Wireless communication network and communication profiles - WirelessHART"
    author:
      ins: "IEC"
    date: 2016

  ieee802-1AR:
    target: "http://standards.ieee.org/findstds/standard/802.1AR-2009.html"
    title: "IEEE 802.1AR Secure Device Identifier"
    author:
      ins: "IEEE Standard"
    date: 2009
  ieee802159:
    target: "http://standards.ieee.org/findstds/standard/802.15.9-2016.html"
    title: "802.15.9-2016 - IEEE Approved Draft Recommended Practice for Transport of Key Management Protocol (KMP) Datagrams"
    author:
      ins: "IEEE Standard"
    date: 2016
  ieee802154:
    target: "http://standards.ieee.org/findstds/standard/802.15.4-2015.html"
    title: "802.15.4-2015 - IEEE Standard for Low-Rate Wireless Personal Area Networks (WPANs)"
    author:
      ins: "IEEE Standard"
    date: 2015
  cullenCiscoPhoneDeploy:
    target: "http://www.lix.polytechnique.fr/hipercom/SmartObjectSecurity/papers/CullenJennings.pdf"
    title: "Transitive Trust Enrollment for Constrained Devices"
    author:
      ins: "C. Jennings"
      org: Cisco
    date: 2012

informative:
  RFC4655:
  RFC7554:
  I-D.ietf-ace-actors:
  PFS:
    title: "Forward Secrecy"
    target: "https://en.wikipedia.org/w/index.php?title=Forward_secrecy&oldid=731318899"
    author:
      -
        name: Wikipedia
    date: 2016-08-01

  pledge:
    title: "Dictionary.com Unabridged"
    target: "http://dictionary.reference.com/browse/pledge"
    author:
      -
        name: Dictionary.com
    date: 2015

  duckling:
    title: "The resurrecting duckling: security issues for ad-hoc wireless networks"
    target: "https://www.cl.cam.ac.uk/~fms27/papers/1999-StajanoAnd-duckling.pdf"
    author:
      -
        ins: F. Stajano
        name: Frank Stajano
      -
        ins: R. Anderson
        name: Ross Anderson
    date: 1999

#  RFC5389:

--- abstract

Charter: The WG will continue working on securing the join process and making
that fit
within the constraints of high latency, low throughput and small frame sizes
that characterize IEEE802.15.4 TSCH.

--- middle

# Introduction        {#problems}

Enrollment of new nodes into LLNs present unique challenges.
The constrained nodes has no user interfaces, and even if they did,
configuring thousands of such nodes manually is undesireable from a human
resources issue, as well as the difficulty in getting consistent results.

This document is about a standard way to introduce new nodes into a 6tisch
network that does not involve any direct manipulation of the nodes themselves.
This act has been called "zero-touch" provisioning, and it does not occur by
chance, but requires coordination between the manufacturer of the node, the
service operator running the LLN, and the installers actually taking the
devices out of the shipping boxes.

In other installations (such as some factory/industrial settings, and for
some utilities), it is possible to pass devices through a "provisioning" room
of some kind where the device in factory default state may be touched once
(via a cable, or a push button, or by being placed in a faraday cage, etc.)
such that the devices can be initialized in a way specific to that
installation.  The devices are then returned to inventory, and may be
deployed at some future time.  The node is not provisioned with the
current keying material, as the network will need to be regularly rekeyed
(even the algorithms may change!), so in the one-touch provisioning case, the
goal is simply to introduce some elements into the new node (the "pledge") such
that the enrollment process will take less energy and fewer network resources.

## Terminology          {#Terminology}

In this document, the key words "MUST", "MUST NOT", "REQUIRED",
"SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
and "OPTIONAL" are to be interpreted as described in BCP 14, RFC 2119
{{!RFC2119}} and indicate requirement levels for compliant STuPiD
implementations.

The following terminology is repeated from
{{!I-D.ietf-anima-bootstrapping-keyinfra}}
so as to have a common way to speak:

drop ship
:  The physical distribution of equipment containing the   "factory default"
configuration to a final destination.  In zero-touch scenarios there is no
staging or pre-configuration during drop-ship.

imprint
:  the process where a device obtains the cryptographic key material to
identity and trust future interactions with a network. This term is taken
from Konrad Lorenz's work in biology with new ducklings: during a critical
period, the duckling would assume that anything that looks like a mother duck
is in fact their mother.  An equivalent for a device is to obtain the
fingerprint of the network's root certification authority certificate.  A
device that imprints on an attacker suffers a similar fate to a duckling that
imprints on a hungry wolf.  Securely imprinting is a primary focus of this
document. {{duckling}} anticipates this use.

enrollment
:  the process where a device presents key material to a
   network and acquires a network specific identity.  For example
   when a certificate signing request is presented to a certification
   authority and a certificate is obtained in response.

pledge
:  the prospective device, which has the identity provided to
   at the factory.  Neither the device nor the network knows if the
   device yet knows if this device belongs with this network.  This
   is definition 6, according to {{pledge}}.

Audit Token
:  A signed token from the manufacturer authorized signing
   authority indicating that the bootstrapping event has been
   successfully logged.  This has been referred to as an
   "authorization token" indicating that it authorizes bootstrapping
   to proceed.

Ownership Voucher
:  A signed voucher from the vendor vouching that a specific domain "owns"
      the new entity as defined in {{!I-D.ietf-netconf-zerotouch}}.

## Credentials

In the zero-touch scenario, every device expected to be drop shipped would
have an {{ieee802-1AR}} manufacturer installed certificate (MIC). The
private key part of the certificate would either be generated in the device,
or installed securely (and privately) as part of the manufacturer process.
{{cullenCiscoPhoneDeploy}} provides an example of process which has been active
for a good part of a decade.

The MIC would be signed by the manufacturer's CA, the public key component of
that would be included in the firmware.

### One-Touch Assumptions

In a one-touch scenario, devices would be provided with some mechanism by which
a secure association may be made in a controlled environment.  There are many
ways in which this might be done, and detailing any of them is out of scope
for this document.  But, some notion of how this might be done is important
so that the underlying assumptions can be reasoned about.

Some examples of how to do this could include:
* JTAG interface
* serial (craft) console interface
* pushes of physical buttons simulatenous to network attachment
* insecured devices operated in a Faraday cage

There are likely many other ways as well.  What is assumed is that there can
be a secure, private conversation between the Join Coordination Entity, and
the Pledge, and that the two devices can exchange some trusted bytes of
information.

### Factory provided credentials (if any)

When a manufacturer installed certificate is provided as the IDevID, it
SHOULD contain a number of fields.  {{I-D.ietf-anima-bootstrapping-keyinfra}}
provides a detailed set of requirements.

A manufacturer unique serial number MUST be provided in the serialNumber
SubjectAltName extension, and MAY be repeated in the Common Name. There are
no sequential or numeric requirements on the serialNumber, it may be any
unique value that the manufacturer wants to use.  The serialNumber SHOULD be
printed on the packaging and/or on the device in a discrete way.

### Credentials to be introduced

The goal of the bootstrap process is to introduce one or more new locally
relevant credentials:

1. a certificate signed by a local certificate authority/registrar. This is
the LDevID of {{ieee802-1AR}}.
2. alternatively, a network-wide key to be used to secure L2 traffic.
3. alternatively, a network-wide key to be used to authenticate per-peer
keying of L2 traffic using a mechanism such as provided by {{ieee802159}}.

## Network Assumptions

This document is about enrollment of constrained devices {{RFC7228}} to a
constrained network.  Constrained networks is such as {{ieee802154}}, and in
particular the time-slotted, channel hopping (tsch) mode, feature low
bandwidths, and limited opportunities to transmit.  A key feature of these
networks is that receivers are only listening at certain times.

### Security above and below IP

802.15.4 networks have three kinds of layer-2 security:

* a network key that is shared with all nodes and is used for unicast and multicast.
* a series of network keys that are shared (agreed to) between pairs of nodes (the per-peer key)
* a network key that is shared with all nodes (through a group key management system), and is used for multicast traffic only

Setting up the credentials to bootstrap one of these kinds of security,
(or directly configuring the key itself for the first case) is required.
This is the security below the IP layer.

Security is required above the IP layer: there are three aspects which the
credentials in the previous section are to be used.

* to provide for secure connection with a Path Computation Element {{RFC4655}}, or other LLC (see ({RFC7554}} section 3).

* to initiate a connection between a Resource Server (RS) and an application layer Authorization Server (AS and CAS from {{I-D.ietf-ace-actors}}).


#### Perfect Forward Secrecy

Perfert Forward Secrecy (PFS) is the property of a protocol such that complete
knowledge of the crypto state (for instance, via a memory dump) at
time X does not imply that data from a disjoint time Y can also be recovered.
({{PFS}}).

PFS is important for two reasons: one is that it offers protection against
the compromise of a node.  It does this by changing the keys in a
non-deterministic way. This second property also makes it much easier to
remove a node from the network, as any node which has not participated in
the key changing process will find itself no longer connected.

### Join network assumptions

The network which the new pledge will connect to will have to have the following properties:

* a known PANID.  The PANID 0xXXXX where XXXX is the assigned RFC# for this document is suggested.
* a minimal schedule with some Aloha time.  This is usually in the same slotframe as the Extended Beacon, but a pledge MUST listen for an unencrypted Extended Beacon to so that it can synchronize.
* a known K1 key, as described in {{I-D.ietf-6tisch-minimal}} section 10, and used for reasons similar to {{iec62591}}.




### Number and cost of round trips

### Size of packets, number of fragments

## Target end-state for join process

## Diagram of Join Process

This time sequence diagram intentionally shows additional layer-2 and layer-3
interactions, in order to put the entire process into context.

1. extended beacon


## Description of States in Join Process

# Privacy Considerations

{{I-D.ietf-6lo-privacy-considerations}} details a number of privacy
considerations important in Resource Constrained nodes.  There are two
networks and three sets of constrained nodes to consider. They are:
1. the production nodes on the production network.
2. the new pledges, which have yet to enroll, and which are on a join
network.
3. the production nodes which are also acting as proxy nodes.

## Privacy Considerations for Production network

The details of this are out of scope for this document.

## Privacy Considerations for New Pledges

New Pledges do not yet receive Router Advertisements with PIO options, and so
configure link-local addresses only based upon layer-2 addresses using the
normal SLAAC mechanisms described in {{RFC4191}}.

These link-local addresses are visible to any on-link eavesdropper (who is
synchronized to the same Join Assistant), so regardless of what is chosen
they can be seen.  This link-layer traffic is encapsulated by the Join
Assistant into IPIP packets and carried to the JCE.  The traffic SHOULD never
leave the operator's network, and no outside traffic should enter, so it
should not be possible to do any ICMP scanning as described in
{{I-D.ietf-6lo-privacy-considerations}}.

The join process described herein requires that some identifier meaningful to
the network operator be communicated to the JCE via the Neighbor
Advertisement's ARO option.  This need not be a manufacturer created EUI-64
as assigned by IEEE; it could be another value with higher entropy and less
interesting vendor/device information.  Regardless of what is chosen, it can
be used to track where the device attaches.

For most constrained device, network attachment occurs very infrequently,
often only once in their lifetime, so tracking opportunities may be rare.

Further, during the enrollment process, a DTLS connection
connection will be created.  Unless TLS1.3 is used, the device identity will
be visible to passive observers in the 802.11AR IDevID certificate that is
sent.  Even when TLS1.3 is used, an active attacker could collect the
information by simply connecting to the device; it would not have to
successful complete the negotiation either, or even attempt to
Man-In-The-Middle the device.

There is, at the same time, significant value in avoiding a link-local DAD
process by using an IEEE assigned EUI-64, and there is also significant
advantage to the operator being able to see what the vendor of the new device
is.

#### EUI-64 derived address for join time IID

It is therefore suggested that the IID used in the link-local address
used during the join process be a vendor assigned EUI-64.  After the join
process has concluded, the device SHOULD be assigned a unique randomly
generated long address, and a unique short address (not based upon the
vendor EUI-64) for use at link-layer. At that point, all layer-3 content
is encrypted by the layer-2 key.

## Privacy Considerations for Join Assistant



# Security Considerations

# IANA Considerations

# Protocol Definition

--- back

# appendix

insert appendix here

--- fluff
