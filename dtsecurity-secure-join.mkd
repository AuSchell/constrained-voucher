---
title: 6tisch Secure Join protocol
# abbrev: 6tisch-Secure-Join
docname: draft-ietf-6tisch-dtsecurity-secure-join-01

# stand_alone: true

ipr: trust200902
area: Internet
wg: 6tisch Working Group
kw: Internet-Draft
cat: info

coding: us-ascii
pi:    # can use array (if all yes) or hash here
#  - toc
#  - sortrefs
#  - symrefs
  toc: yes
  sortrefs:   # defaults to yes
  symrefs: yes

author:
      -
        ins: M. Richardson
        name: Michael Richardson
        org: Sandelman Software Works
        email: mcr+ietf@sandelman.ca


normative:
  RFC2119:
  I-D.ietf-6lo-privacy-considerations:
  RFC7228:
  I-D.ietf-anima-bootstrapping-keyinfra:
  I-D.ietf-6tisch-minimal:
  I-D.ietf-anima-grasp:
  I-D.richardson-anima-6join-discovery:
  I-D.ietf-6tisch-minimal-security:
  I-D.ietf-core-object-security:
  I-D.ietf-6tisch-terminology:
  I-D.ietf-netconf-keystore:
  I-D.ietf-core-comi:
  iec62591:
    target: "https://webstore.iec.ch/publication/24433"
    title: "62591:2016 Industrial networks - Wireless communication network and communication profiles - WirelessHART"
    author:
      ins: "IEC"
    date: 2016

  ieee802-1AR:
    target: "http://standards.ieee.org/findstds/standard/802.1AR-2009.html"
    title: "IEEE 802.1AR Secure Device Identifier"
    author:
      ins: "IEEE Standard"
    date: 2009
  ieee802159:
    target: "http://standards.ieee.org/findstds/standard/802.15.9-2016.html"
    title: "802.15.9-2016 - IEEE Approved Draft Recommended Practice for Transport of Key Management Protocol (KMP) Datagrams"
    author:
      ins: "IEEE Standard"
    date: 2016
  ieee802154:
    target: "http://standards.ieee.org/findstds/standard/802.15.4-2015.html"
    title: "802.15.4-2015 - IEEE Standard for Low-Rate Wireless Personal Area Networks (WPANs)"
    author:
      ins: "IEEE Standard"
    date: 2015
  cullenCiscoPhoneDeploy:
    target: "http://www.lix.polytechnique.fr/hipercom/SmartObjectSecurity/papers/CullenJennings.pdf"
    title: "Transitive Trust Enrollment for Constrained Devices"
    author:
      ins: "C. Jennings"
      org: Cisco
    date: 2012
  RFC7217:
  I-D.richardson-6tisch-join-enhanced-beacon:
  RFC6775:
  RFC7252:

informative:
  RFC4655:
  RFC7554:
  RFC4191:
  RFC7731:
  I-D.ietf-roll-useofrplinfo:
  I-D.ietf-ace-actors:
  ISA100:
    target:  "http://www.isa100wci.org/Documents/PDF/The-Technology-Behind-ISA100-11a-v-3_pptx"
    title: "The Technology Behind the ISA100.11a Standard "
    date: 2010-06-15
  PFS:
    title: "Forward Secrecy"
    target: "https://en.wikipedia.org/w/index.php?title=Forward_secrecy&oldid=731318899"
    author:
      -
        name: Wikipedia
    date: 2016-08-01

  pledge:
    title: "Dictionary.com Unabridged"
    target: "http://dictionary.reference.com/browse/pledge"
    author:
      -
        name: Dictionary.com
    date: 2015

  duckling:
    title: "The resurrecting duckling: security issues for ad-hoc wireless networks"
    target: "https://www.cl.cam.ac.uk/~fms27/papers/1999-StajanoAnd-duckling.pdf"
    author:
      -
        ins: F. Stajano
        name: Frank Stajano
      -
        ins: R. Anderson
        name: Ross Anderson
    date: 1999

#  RFC5389:

--- abstract

This document describes a zero-touch mechanism to enroll a new device (the "pledge")
into a IEEE802.15.4 TSCH network using the 6tisch signaling mechanisms.  The resulting
device will obtain a domain specific credential that can be used with either 802.15.9 per-host pair
keying protocols, or to obtain the network-wide key from a coordinator.  The mechanism
describe her is an augmentation to the one-touch mechanism described in {{I-D.ietf-6tisch-minimal-security}}.

--- middle

# Introduction        {#problems}

Enrollment of new nodes into LLNs present unique challenges.
The constrained nodes has no user interfaces, and even if they did,
configuring thousands of such nodes manually is undesireable from a human
resources issue, as well as the difficulty in getting consistent results.

This document is about a standard way to introduce new nodes into a 6tisch
network that does not involve any direct manipulation of the nodes themselves.
This act has been called "zero-touch" provisioning, and it does not occur by
chance, but requires coordination between the manufacturer of the node, the
service operator running the LLN, and the installers actually taking the
devices out of the shipping boxes.

The act of doing "one-touch" provisioning, where a node undergoes a site-specific
indoctrination process is described in {{I-D.ietf-6tisch-minimal-security}}.

The mechanism described here and in {{I-D.ietf-6tisch-minimal-security}} can be discovered by a new
node in a running network, so a device which has received a network-specific "one-touch"
setup, but which is located in another network, and is capable of "zero-touch" operation could
discovery this fact and operate in other mode.

Many of the zero-touch mechanisms described here are in common
with {{I-D.ietf-anima-bootstrapping-keyinfra}} and {{!I-D.ietf-netconf-zerotouch}}.
The on-the-wire pledge to join registrar protocols are different in this protocol from
those described in ANIMA, but conceptually operate identically.   It is expected that
the back-end network operator infrastructure would be able to bootstrap ANIMA-type devices
over ethernet, while also being able bootstrap 6tisch devices over 802.15.4 with few changes.

## Terminology          {#Terminology}

In this document, the key words "MUST", "MUST NOT", "REQUIRED",
"SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
and "OPTIONAL" are to be interpreted as described in BCP 14, RFC 2119
{{RFC2119}} and indicate requirement levels for compliant STuPiD
implementations.

The reader is expected to be familiar with the terms and concepts defined in
{{I-D.ietf-6tisch-terminology}}, {{RFC7252}},
{{I-D.ietf-core-object-security}}, and
{{I-D.ietf-anima-bootstrapping-keyinfra}}.  The following terms are
imported: drop ship, imprint, enrollment, pledge, join proxy, ownership
voucher, join registrar/coordinator.  The following terms are repeated here for readability,
but this document is not authoritative for their definition:

pledge
:  the prospective device, which has the identity provided to
   at the factory.  Neither the device nor the network knows if the
   device yet knows if this device belongs with this network.

Joined Node
: the prospective device, after having completing the join process, often just called a Node.

Join Proxy (JP):
:  a stateless relay that provides connectivity between the pledge
   and the join registrar/coordinator.

Join Registrar/Coordinator (JRC):
:  central entity responsible for authentication and authorization of joining nodes.

Audit Token
:  A signed token from the manufacturer authorized signing
   authority indicating that the bootstrapping event has been
   successfully logged.  This has been referred to as an
   "authorization token" indicating that it authorizes bootstrapping
   to proceed.

Ownership Voucher
:  A signed voucher from the vendor vouching that a specific domain "owns"
   the new entity as defined in {{!I-D.ietf-netconf-zerotouch}}.

MIC
:  manufacturer installed certificate. An {{ieee802-1AR}} identity.


## Credentials

In the zero-touch scenario, every device expected to be drop shipped would
have an {{ieee802-1AR}} manufacturer installed certificate (MIC). The
private key part of the certificate would either be generated in the device,
or installed securely (and privately) as part of the manufacturing process.
{{cullenCiscoPhoneDeploy}} provides an example of process which has been active
for a good part of a decade.

The MIC would be signed by the manufacturer's CA, the public key component of
that would be included in the firmware.

### One-Touch Assumptions

This document interacts with the one-touch solution described in {{I-D.ietf-6tisch-minimal-security}}.

### Factory provided credentials (if any)

When a manufacturer installed certificate is provided as the IDevID, it
SHOULD contain a number of fields.  {{I-D.ietf-anima-bootstrapping-keyinfra}}
provides a detailed set of requirements.

A manufacturer unique serial number MUST be provided in the serialNumber
SubjectAltName extension, and MAY be repeated in the Common Name. There are
no sequential or numeric requirements on the serialNumber, it may be any
unique value that the manufacturer wants to use.  The serialNumber SHOULD be
printed on the packaging and/or on the device in a discrete way so that failures
can be physically traced to the relevant device.

### Credentials to be introduced

The goal of the bootstrap process is to introduce one or more new locally
relevant credentials:

1. a certificate signed by a local certificate authority/registrar. This is
   the LDevID of {{ieee802-1AR}}.
2. alternatively, a network-wide key to be used to secure L2 traffic.
3. alternatively, a network-wide key to be used to authenticate per-peer
   keying of L2 traffic using a mechanism such as provided by {{ieee802159}}.

## Network Assumptions

This document is about enrollment of constrained devices {{RFC7228}} to a
constrained network.  Constrained networks is such as {{ieee802154}}, and in
particular the time-slotted, channel hopping (tsch) mode, feature low
bandwidths, and limited opportunities to transmit.  A key feature of these
networks is that receivers are only listening at certain times.

### Security above and below IP

802.15.4 networks have three kinds of layer-2 security:

* a network key that is shared with all nodes and is used for unicast and multicast.  The key may be used for privacy, and it may be used in some cases for authentication only (in the case of enhanced beacons).
* a series of network keys that are shared (agreed to) between pairs of nodes (the per-peer key)
* a network key that is shared with all nodes (through a group key management system), and is used for multicast traffic only, while a per-pair key is used for unicast traffic

Setting up the credentials to bootstrap one of these kinds of security,
(or directly configuring the key itself for the first case) is required.
This is the security below the IP layer.

Security is required above the IP layer: there are three aspects which the
credentials in the previous section are to be used.

* to provide for secure connection with a Path Computation Element {{RFC4655}}, or other LLC (see ({RFC7554}} section 3).

* to initiate a connection between a Resource Server (RS) and an application layer Authorization Server (AS and CAS from {{I-D.ietf-ace-actors}}).


#### Perfect Forward Secrecy

Perfert Forward Secrecy (PFS) is the property of a protocol such that complete
knowledge of the crypto state (for instance, via a memory dump) at
time X does not imply that data from a disjoint time Y can also be recovered.
({{PFS}}).

PFS is important for two reasons: one is that it offers protection against
the compromise of a node.  It does this by changing the keys in a
non-deterministic way. This second property also makes it much easier to
remove a node from the network, as any node which has not participated in
the key changing process will find itself no longer connected.

### Join network assumptions

The network which the new pledge will connect to will have to have the following properties:

* a known PANID.  The PANID 0xXXXX where XXXX is the assigned RFC# for this document is suggested.
* a minimal schedule with some Aloha time.  This is usually in the same slotframe as the Enhanced Beacon, but a pledge MUST listen for an unencrypted Enhanced Beacon to so that it can synchronize.

### Number and cost of round trips

TBD.

### Size of packets, number of fragments

## Target end-state for join process

At the end of the zero-touch join process there will be a symmetric key protected channel
between the Join Registrar/Coordinator and the pledge, now known as a Joined Node.  This
channel may be rekeyed via new exchange of asymmetric exponents (ECDH for instance), authenticated
using the domain specific credentials created during the join process.

This channel is in the form of an OSCOAP protected connection with {{I-D.ietf-core-comi}} encoded objects.
This document includes definition of a {{I-D.ietf-netconf-keystore}} compatible objects for
encoding of the relevant {{I-D.ietf-anima-bootstrapping-keyinfra}} objects.

# Join Protocol

The pledge join protocol state machine is described in {{I-D.ietf-6tisch-minimal-security}},
in section XYZ.  The pledge recognizes that it is in zero-touch configuration by the following
situation:

* no PSK has been configured for the network in which it has joined.
* the pledge has no locally defined certificate (no LDevID), only an IDevID.
* the network asserts an identity that the pledge does not recognize.

All of these conditions MUST be true.  If any of these are not true, then the pledge has either been
connected to the wrong network, or it has already been bootstrapped into a different network.

## Description of Pledge States in Join Process

# Join Assistant to Registrar protocol

In smaller one-touch scenarios the pledge may know quickly if it has found the right
network to join as it can be configured with the network-ID (see {{I-D.richardson-6tisch-join-enhanced-beacon}}) along with the key.

In zero-touch scenarios, there may be a myrid of possible networks to join, and the pledge
may know which network it should join, and for how long it should wait.  {{I-D.richardson-6tisch-join-enhanced-beacon}} provides for a mechanism where the Join Assistant may indicate to the pledge
that it should remain silence, and wait to be contacted. ("Don't call us, we'll call you")

As part of the waiting protocol described in {{I-D.ietf-6tisch-minimal-security}} section WAITING,
the pledge will do a Duplicate Address Detection as described
in {{RFC6775}}.  The pledge should include an ARO with it's EUI-64.
The status field of the ARO is extended (see (#ianaconsiderations)) to include an additional
status value ND_NS_JOIN_DECLINED.   This provides for a way for a non-malicious to either accept
or deny a new pledge.  This mechanism is not secure, and the pledge SHOULD be suspicious about
such declarations.

The pledge however, needs to refresh it's address with the Join Proxy, keeping the Neighbor
Cache on the Join Proxy current.

This section describes an optional protocol that the Join Proxy can use to make a determination
with the JRC as to eligibility of the new pledge.

XXXX

There are three aspects to the protocols that the Join Proxy uses to
communicate about its needs.  They are:

1. Discovery of Registrar
2. Notification of new pledge to Registrar
3. Passing of traffic from Pledge to Registar

## Discovery of Registrar

The address of the registrar MAY be determined by other protocols, such as
DHCP, RA or RPL extensions, or provisioned into the Join Assistant via other
configuration protocol such as 6p.

In order to support fully autonomic operations, the Join Assistant MAY use a
GRASP discovery ({{I-D.ietf-anima-grasp}}) to find the address of the
Registrar.  {{I-D.richardson-anima-6join-discovery}} describes the details of
the process.

XXX - wish to replace this something that does not use TCP.

In 6tisch networks multicast is not always available, requiring additional
protocol {{RFC7731}} effort.  Instead of doing a multicast GRASP discovery,
the Join Assistant SHOULD instead to a TCP connect to the GRASP_LISTEN_PORT
on the IP address of the DODAG root (when RPL is used as the routing protocol
for 6tisch), or the ABRO address when another protocol is used.  The Join
Assistant should then issue the appropriate M_DISCOVERY method using the
6JOIN objective.  The GRASP discovery will then reply using the same TCP
connection as per Unicast Discovery in {{I-D.ietf-anima-grasp}} section TBD.

## Notification of a new pledge to Registar

As illustrated in (#joindiagram), when the Join Assistant receives a Neighbor
Solication from a pledge, it must notify the Registar of the pledge,
indicating to it how to reach the new pledge.  The Registrar will respond
with a positive acknowledgement if the Registrar is willing/able to accept
the pledge.  The Registrar will respond with a negative acknowledgement if
the provided pledge identity (the IID in the ARO) is not one that the
Registrar recognizes as belonging to this network.

The Registrar runs an ASA which is called the 6JOIN ASA (which can be
discovered above).  This query/response is done using GRASP with the
discovered ASA process.

### IPIP Query for Registrar

The query process is described in CDDL as:

    request-6join-query = [M_REQ_NEG, session-id, "6JOIN", [IID, "6p-ipip"]]
    IID = bytes .size 8

The response from the Registrar is describe as:

    response-6join-query = [M_END, session-id, [O_ACCEPT]]

or for a negative response:

    response-6join-query = [M_END, session-id, [O_DECLINE]]

for the 6p-ipip, the Registrar will need to know where to send the IPIP
packets to. The Join Assistant will initiate the TCP connection to the
Registrar's ASA using the IPv6 address associated with the insecure interface
on which the pledge is located, i.e. using the PTEPA.

### CoAP OSCOAP query for Registrar

The query process is described in CDDL as:

    request-6join-query = [M_REQ_NEG, session-id, "6JOIN", [IID, "6p-coap"]]
    IID = bytes .size 8

The response from the Registrar is describe as:

    response-6join-query = [M_END, session-id, [O_ACCEPT]]

or for a negative response:

    response-6join-query = [M_END, session-id, [O_DECLINE]]

for the 6p-coap, the Registrar will need to know where to send the IPIP
packets to. The Join Assistant will initiate the TCP connection to the
Registrar's ASA using the IPv6 address associated with the insecure interface
on which the pledge is located, i.e. using the PTEPA.

# Definition of managed objects for zero-touch bootstrap

The following is relevant YANG for use in the bootstrap protocol.
The objects identified are identical in format to the named objects
from {{I-D.ietf-anima-bootstrap-keyinfra}}.



# Privacy Considerations

{{I-D.ietf-6lo-privacy-considerations}} details a number of privacy
considerations important in Resource Constrained nodes.  There are two
networks and three sets of constrained nodes to consider. They are:
1. the production nodes on the production network.
2. the new pledges, which have yet to enroll, and which are on a join
network.
3. the production nodes which are also acting as proxy nodes.

## Privacy Considerations for Production network

The details of this are out of scope for this document.

## Privacy Considerations for New Pledges

New Pledges do not yet receive Router Advertisements with PIO options, and so
configure link-local addresses only based upon layer-2 addresses using the
normal SLAAC mechanisms described in {{RFC4191}}.

These link-local addresses are visible to any on-link eavesdropper (who is
synchronized to the same Join Assistant), so regardless of what is chosen
they can be seen.  This link-layer traffic is encapsulated by the Join
Assistant into IPIP packets and carried to the JCE.  The traffic SHOULD never
leave the operator's network, and no outside traffic should enter, so it
should not be possible to do any ICMP scanning as described in
{{I-D.ietf-6lo-privacy-considerations}}.

The join process described herein requires that some identifier meaningful to
the network operator be communicated to the JCE via the Neighbor
Advertisement's ARO option.  This need not be a manufacturer created EUI-64
as assigned by IEEE; it could be another value with higher entropy and less
interesting vendor/device information.  Regardless of what is chosen, it can
be used to track where the device attaches.

For most constrained device, network attachment occurs very infrequently,
often only once in their lifetime, so tracking opportunities may be rare.

Further, during the enrollment process, a DTLS connection
connection will be created.  Unless TLS1.3 is used, the device identity will
be visible to passive observers in the 802.11AR IDevID certificate that is
sent.  Even when TLS1.3 is used, an active attacker could collect the
information by simply connecting to the device; it would not have to
successful complete the negotiation either, or even attempt to
Man-In-The-Middle the device.

There is, at the same time, significant value in avoiding a link-local DAD
process by using an IEEE assigned EUI-64, and there is also significant
advantage to the operator being able to see what the vendor of the new device
is.

#### EUI-64 derived address for join time IID

It is therefore suggested that the IID used in the link-local address
used during the join process be a vendor assigned EUI-64.  After the join
process has concluded, the device SHOULD be assigned a unique randomly
generated long address, and a unique short address (not based upon the
vendor EUI-64) for use at link-layer. At that point, all layer-3 content
is encrypted by the layer-2 key.

## Privacy Considerations for Join Assistant



# Security Considerations

# IANA Considerations

This document allocates one value from the subregistry "Address Registration
Option Status Values":
     ND_NS_JOIN_DECLINED  Join Assistant, JOIN DECLINED   (TBD-AA)



# Protocol Definition

# Acknwoledgements

Kristofer Pister helped with many non-IETF references.

--- back

# appendix

insert appendix here

--- fluff
