



anima Working Group                                        M. Richardson
Internet-Draft                                  Sandelman Software Works
Intended status: Standards Track                         P. van der Stok
Expires: January 4, 2020                          vanderstok consultancy
                                                           P. Kampanakis
                                                           Cisco Systems
                                                           July 03, 2019


       Constrained Voucher Artifacts for Bootstrapping Protocols
                draft-ietf-anima-constrained-voucher-04

Abstract

   This document defines a strategy to securely assign a pledge to an
   owner, using an artifact signed, directly or indirectly, by the
   pledge's manufacturer.  This artifact is known as a "voucher".

   This document builds upon the work in [RFC8366], encoding the
   resulting artifact in CBOR.  Use with two signature technologies are
   described.

   Additionally, this document explains how constrained vouchers may be
   transported as an extension to the [I-D.ietf-ace-coap-est] protocol.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 4, 2020.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.





Richardson, et al.       Expires January 4, 2020                [Page 1]

Internet-Draft             Constrained Voucher                 July 2019


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4
   3.  Requirements Language . . . . . . . . . . . . . . . . . . . .   4
   4.  Survey of Voucher Types . . . . . . . . . . . . . . . . . . .   4
   5.  Discovery and URI . . . . . . . . . . . . . . . . . . . . . .   5
   6.  Artifacts . . . . . . . . . . . . . . . . . . . . . . . . . .   7
     6.1.  Voucher Request artifact  . . . . . . . . . . . . . . . .   7
       6.1.1.  Tree Diagram  . . . . . . . . . . . . . . . . . . . .   7
       6.1.2.  SID values  . . . . . . . . . . . . . . . . . . . . .   8
       6.1.3.  YANG Module . . . . . . . . . . . . . . . . . . . . .   9
       6.1.4.  Example voucher request artifact  . . . . . . . . . .  13
     6.2.  Voucher artifact  . . . . . . . . . . . . . . . . . . . .  13
       6.2.1.  Tree Diagram  . . . . . . . . . . . . . . . . . . . .  13
       6.2.2.  SID values  . . . . . . . . . . . . . . . . . . . . .  14
       6.2.3.  YANG Module . . . . . . . . . . . . . . . . . . . . .  14
       6.2.4.  Example voucher artifacts . . . . . . . . . . . . . .  17
     6.3.  Signing voucher and voucher-request artifacts . . . . . .  18
       6.3.1.  CMS signing . . . . . . . . . . . . . . . . . . . . .  18
       6.3.2.  COSE signing  . . . . . . . . . . . . . . . . . . . .  19
   7.  Design Considerations . . . . . . . . . . . . . . . . . . . .  19
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .  19
     8.1.  Clock Sensitivity . . . . . . . . . . . . . . . . . . . .  19
     8.2.  Protect Voucher PKI in HSM  . . . . . . . . . . . . . . .  20
     8.3.  Test Domain Certificate Validity when Signing . . . . . .  20
   9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  20
     9.1.  Resource Type Registry  . . . . . . . . . . . . . . . . .  20
     9.2.  The IETF XML Registry . . . . . . . . . . . . . . . . . .  20
     9.3.  The YANG Module Names Registry  . . . . . . . . . . . . .  20
     9.4.  The RFC SID range assignment sub-registry . . . . . . . .  21
     9.5.  The SMI Security for S/MIME CMS Content Type Registry . .  21
     9.6.  Media-Type Registry . . . . . . . . . . . . . . . . . . .  21
       9.6.1.  application/voucher-cms+cbor  . . . . . . . . . . . .  21
       9.6.2.  application/voucher-cose+cbor . . . . . . . . . . . .  22
     9.7.  CoAP Content-Format Registry  . . . . . . . . . . . . . .  23
   10. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  23
   11. Changelog . . . . . . . . . . . . . . . . . . . . . . . . . .  24



Richardson, et al.       Expires January 4, 2020                [Page 2]

Internet-Draft             Constrained Voucher                 July 2019


   12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  24
     12.1.  Normative References . . . . . . . . . . . . . . . . . .  24
     12.2.  Informative References . . . . . . . . . . . . . . . . .  26
   Appendix A.  EST messages to EST-coaps  . . . . . . . . . . . . .  26
     A.1.  enrollstatus  . . . . . . . . . . . . . . . . . . . . . .  27
     A.2.  requestvoucher  . . . . . . . . . . . . . . . . . . . . .  28
       A.2.1.  signed requestvoucher . . . . . . . . . . . . . . . .  29
     A.3.  requestauditing . . . . . . . . . . . . . . . . . . . . .  30
   Appendix B.  Signed voucher-request examples  . . . . . . . . . .  32
     B.1.  CMS signed voucher-request example  . . . . . . . . . . .  32
     B.2.  CBOR-sign1 signed voucher request example . . . . . . . .  35
   Appendix C.  COSE examples  . . . . . . . . . . . . . . . . . . .  37
     C.1.  Device, Registrar and MASA keys . . . . . . . . . . . . .  37
       C.1.1.  Device IDevID certificate . . . . . . . . . . . . . .  37
       C.1.2.  Device private key  . . . . . . . . . . . . . . . . .  37
       C.1.3.  Registrar Certificate . . . . . . . . . . . . . . . .  37
       C.1.4.  Registrar private key . . . . . . . . . . . . . . . .  38
       C.1.5.  MASA Certificate  . . . . . . . . . . . . . . . . . .  38
       C.1.6.  MASA private key  . . . . . . . . . . . . . . . . . .  38
     C.2.  COSE signed requestvoucher with registrar certificate
           pinned  . . . . . . . . . . . . . . . . . . . . . . . . .  39
     C.3.  COSE signed parboiled requestvoucher  . . . . . . . . . .  40
     C.4.  COSE signed voucher . . . . . . . . . . . . . . . . . . .  41
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  42

1.  Introduction

   Enrollment of new nodes into constrained networks with constrained
   nodes present unique challenges.

   There are bandwidth and code space issues to contend.  A solution
   such as [I-D.ietf-anima-bootstrapping-keyinfra] may be too large in
   terms of code space or bandwidth required.

   This document defines a constrained version of [RFC8366].  Rather
   than serializing the YANG definition in JSON, it is serialized into
   CBOR ([RFC7049]).

   This document follows a similar, but not identical structure as
   [RFC8366].  Some sections are left out entirely.  Additional sections
   have been added concerning:

   1.  Addition of voucher-request specification as defined in
       [I-D.ietf-anima-bootstrapping-keyinfra],

   2.  Addition to [I-D.ietf-ace-coap-est] of voucher transport requests
       over coap.




Richardson, et al.       Expires January 4, 2020                [Page 3]

Internet-Draft             Constrained Voucher                 July 2019


   The CBOR definitions for this constrained voucher format are defined
   using the mechanism describe in [I-D.ietf-core-yang-cbor] using the
   SID mechanism explained in [I-D.ietf-core-sid].  As the tooling to
   convert YANG documents into an list of SID keys is still in its
   infancy, the table of SID values presented here should be considered
   normative rather than the output of the pyang tool.

   Two methods of signing the resulting CBOR object are described in
   this document:

   1.  One is CMS [RFC5652].

   2.  The other is COSE_Sign1 [RFC8152] objects.

2.  Terminology

   The following terms are defined in [RFC8366], and are used
   identically as in that document: artifact, imprint, domain, Join
   Registrar/Coordinator (JRC), Manufacturer Authorized Signing
   Authority (MASA), pledge, Trust of First Use (TOFU), and Voucher.

3.  Requirements Language

   In this document, the key words "MUST", "MUST NOT", "REQUIRED",
   "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
   and "OPTIONAL" are to be interpreted as described in BCP 14, RFC 2119
   [RFC2119] and indicate requirement levels for compliant STuPiD
   implementations.

4.  Survey of Voucher Types

   [RFC8366] provides for vouchers that assert proximity, that
   authenticate the registrar and that include different amounts of
   anti-replay protection.

   This document does not make any extensions to the types of vouchers.

   Time based vouchers are included in this definition, but given that
   constrained devices are extremely unlikely to know the correct time,
   their use is very unlikely.  Most users of these constrained vouchers
   will be online and will use live nonces to provide anti-replay
   protection.

   [RFC8366] defined only the voucher artifact, and not the Voucher
   Request artifact, which was defined in
   [I-D.ietf-anima-bootstrapping-keyinfra].





Richardson, et al.       Expires January 4, 2020                [Page 4]

Internet-Draft             Constrained Voucher                 July 2019


   This document defines both a constrained voucher and a constrained
   voucher-request.  They are presented in the order voucher-request,
   followed by voucher response as this is the time order that they
   occur.

   This document defines both CMS-signed voucher requests and responses,
   and COSE signed voucher requests and responses.  The use of CMS
   signatures implies the use of PKIX format certificates.  The pinned-
   domain-cert present in such a voucher, is the certificate of the
   Registrar.

   The constrained voucher and constrained voucher request MUST be
   signed.

   The use of the two signing formats permit the use of both PKIX format
   certificates, and also raw public keys (RPK).  When RPKs are used,
   the voucher produced by the MASA pins the raw public key of the
   Registrar: the pinned-domain-subject-public-key-info in such a
   voucher, is the raw public key of the Registrar.  This is described
   in the YANG definition for the constrained voucher.

5.  Discovery and URI

   This section describes the BRSKI extensions to EST-coaps
   [I-D.ietf-ace-coap-est] to transport the voucher between registrar,
   proxy and pledge over CoAP.  The extensions are targeted to low-
   resource networks with small packets.  Saving header space is
   important and the EST-coaps URI is shorter than the EST URI.

   The presence and location of (path to) the management data are
   discovered by sending a GET request to "/.well-known/core" including
   a resource type (RT) parameter with the value "ace.est" [RFC6690].
   Upon success, the return payload will contain the root resource of
   the EST resources.  It is up to the implementation to choose its root
   resource; throughout this document the example root resource /est is
   used.

   The EST-coaps server URIs differ from the EST URI by replacing the
   scheme https by coaps and by specifying shorter resource path names:

     coaps://www.example.com/est/short-name

   Figure 5 in section 3.2.2 of [RFC7030] enumerates the operations and
   corresponding paths which are supported by EST.  Table 1 provides the
   mapping from the BRSKI extension URI path to the EST-coaps URI path.






Richardson, et al.       Expires January 4, 2020                [Page 5]

Internet-Draft             Constrained Voucher                 July 2019


                     +------------------+-----------+
                     | BRSKI            | EST-coaps |
                     +------------------+-----------+
                     | /requestvoucher  | /rv       |
                     |                  |           |
                     | /voucher-status  | /vs       |
                     |                  |           |
                     | /enrollstatus    | /es       |
                     |                  |           |
                     | /requestauditlog | /ra       |
                     +------------------+-----------+

                   Table 1: BRSKI path to EST-coaps path

   /requestvoucher and /enrollstatus are needed between pledge and
   Registrar.

   When discovering the root path for the EST resources, the server MAY
   return the full resource paths and the used content types.  This is
   useful when multiple content types are specified for EST-coaps
   server.  For example, the following more complete response is
   possible.

     REQ: GET /.well-known/core?rt=ace.est*

     RES: 2.05 Content
     </est>; rt="ace.est"
     </est/rv>; rt="ace.est/rv";ct=TBD2 TBD3
     </est/vs>; rt="ace.est/vs";ct=50 60
     </est/es>; rt="ace.est/es";ct=50 60
     </est/ra>; rt="ace.est/ra";ct=TBD2 TBD3

   The return of the content-types allows the client to choose the most
   appropriate one from multiple content types.

   Port numbers, not returned in the example, are assumed to be the
   default numbers 5683 and 5684 for coap and coaps respectively
   (sections 12.6 and 12.7 of [RFC7252].  Discoverable port numbers MAY
   be returned in the <href> of the payload.

   ct=TBD2 stands for Content-Format "application/voucher-cms+cbor, and
   ct=TBD3 stands for Content-Format "application/voucher-cose+cbor".

   Content-Formats TBD2 and TBD3 are defined in this document.

   The Content-Format ("application/json") 50 MAY be supported.
   Content-Formats ("application/cbor") 60, TBD2, and TBD3 MUST be
   supported.



Richardson, et al.       Expires January 4, 2020                [Page 6]

Internet-Draft             Constrained Voucher                 July 2019


6.  Artifacts

   This section describes the abstract (tree) definition as explained in
   [I-D.ietf-netmod-yang-tree-diagrams] first.  This provides a high-
   level view of the contents of each artifact.

   Then the assigned SID values are presented.  These have been assigned
   using the rules in [I-D.ietf-core-sid], with an allocation that was
   made via the http://comi.space service.

6.1.  Voucher Request artifact

6.1.1.  Tree Diagram

   The following diagram is largely a duplicate of the contents of
   [RFC8366], with the addition of proximity-registrar-subject-public-
   key-info, proximity-registrar-cert, and prior-signed-voucher-request.

   prior-signed-voucher-request is only used between the Registrar and
   the MASA.  proximity-registrar-subject-public-key-info replaces
   proximity-registrar-cert for the extremely constrained cases.






























Richardson, et al.       Expires January 4, 2020                [Page 7]

Internet-Draft             Constrained Voucher                 July 2019


   module: ietf-constrained-voucher-request

     grouping voucher-request-constrained-grouping
       +-- voucher
          +-- created-on?
          |       yang:date-and-time
          +-- expires-on?
          |       yang:date-and-time
          +-- assertion
          |       enumeration
          +-- serial-number
          |       string
          +-- idevid-issuer?
          |       binary
          +-- pinned-domain-cert?
          |       binary
          +-- domain-cert-revocation-checks?
          |       boolean
          +-- nonce?
          |       binary
          +-- last-renewal-date?
          |       yang:date-and-time
          +-- proximity-registrar-subject-public-key-info?
          |       binary
          +-- proximity-registrar-sha256-of-subject-public-key-info?
          |       binary
          +-- proximity-registrar-cert?
          |       binary
          +-- prior-signed-voucher-request?
                  binary

6.1.2.  SID values



















Richardson, et al.       Expires January 4, 2020                [Page 8]

Internet-Draft             Constrained Voucher                 July 2019


         SID Assigned to
   --------- --------------------------------------------------
     1001154 data /ietf-constrained-voucher-request:voucher
     1001155 data .../assertion
     1001156 data .../created-on
     1001157 data .../domain-cert-revocation-checks
     1001158 data .../expires-on
     1001159 data .../idevid-issuer
     1001160 data .../last-renewal-date
     1001161 data /ietf-constrained-voucher-request:voucher/nonce
     1001162 data .../pinned-domain-cert
     1001163 data .../prior-signed-voucher-request
     1001164 data .../proximity-registrar-cert
     1001165 data mity-registrar-sha256-of-subject-public-key-info
     1001166 data .../proximity-registrar-subject-public-key-info
     1001167 data .../serial-number


6.1.3.  YANG Module

   In the constrained-voucher-request YANG module, the voucher is
   "augmented" within the "used" grouping statement such that one
   continuous set of SID values is generated for the constrained-
   voucher-request module name, all voucher attributes, and the
   constrained-voucher-request attribute.  Two attributes of the voucher
   are "refined" to be optional.

  <CODE BEGINS> file "ietf-constrained-voucher-request@2018-09-01.yang"
  module ietf-constrained-voucher-request {
    yang-version 1.1;

    namespace
      "urn:ietf:params:xml:ns:yang:ietf-constrained-voucher-request";
    prefix "constrained";

    import ietf-restconf {
      prefix rc;
      description
        "This import statement is only present to access
         the yang-data extension defined in RFC 8040.";
      reference "RFC 8040: RESTCONF Protocol";
    }

    import ietf-voucher {
      prefix "v";
    }

    organization



Richardson, et al.       Expires January 4, 2020                [Page 9]

Internet-Draft             Constrained Voucher                 July 2019


     "IETF ANIMA Working Group";

    contact
     "WG Web:   <http://tools.ietf.org/wg/anima/>
      WG List:  <mailto:anima@ietf.org>
      Author:   Michael Richardson
                <mailto:mcr+ietf@sandelman.ca>
      Author:   Peter van der Stok
                <mailto: consultancy@vanderstok.org>
      Author:   Panos Kampanakis
                <mailto: pkampana@cisco.com>";
    description
     "This module defines the format for a voucher request,
      which is produced by a pledge to request a voucher.
      The voucher-request is sent to the potential owner's
      Registrar, which in turn sends the voucher request to
      the manufacturer or delegate (MASA).

      A voucher is then returned to the pledge, binding the
      pledge to the owner.  This is a constrained version of the
      voucher-request present in
      draft-ietf-anima-bootstrap-keyinfra.txt.

      This version provides a very restricted subset appropriate
      for very constrained devices.
      In particular, it assumes that nonce-ful operation is
      always required, that expiration dates are rather weak, as no
      clocks can be assumed, and that the Registrar is identified
      by a pinned Raw Public Key.

      The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
      'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY',
      and 'OPTIONAL' in the module text are to be interpreted as
      described in RFC 2119.";

    revision "2018-09-01" {
      description
       "Initial version";
      reference
       "RFC XXXX: Voucher Profile for Constrained Devices";
    }

    rc:yang-data voucher-request-constrained-artifact {
      // YANG data template for a voucher.
      uses voucher-request-constrained-grouping;
    }

    // Grouping defined for future usage



Richardson, et al.       Expires January 4, 2020               [Page 10]

Internet-Draft             Constrained Voucher                 July 2019


    grouping voucher-request-constrained-grouping {
      description
        "Grouping to allow reuse/extensions in future work.";

      uses v:voucher-artifact-grouping {

        refine voucher/created-on {
            mandatory  false;
        }

        refine voucher/pinned-domain-cert {
            mandatory  false;
        }


        augment "voucher" {
          description "Base the constrained voucher-request upon the
            regular one";

          leaf proximity-registrar-subject-public-key-info {
            type binary;
            description
              "The proximity-registrar-subject-public-key-info replaces
               the proximit-registrar-cert in constrained uses of
               the voucher-request.
               The proximity-registrar-subject-public-key-info is the
               Raw Public Key of the Registrar. This field is encoded
               as specified in RFC7250, section 3.
               The ECDSA algorithm MUST be supported.
               The EdDSA algorithm as specified in
               draft-ietf-tls-rfc4492bis-17 SHOULD be supported.
               Support for the DSA algorithm is not recommended.
               Support for the RSA algorithm is MAY, but due to
               size is discouraged.";
          }

          leaf proximity-registrar-sha256-of-subject-public-key-info {
            type binary;
            description
              "The proximity-registrar-sha256-of-subject-public-key-info
               is an alternative to
               proximity-registrar-subject-public-key-info.
               and pinned-domain-cert.  In many cases the
               public key of the domain has already been transmitted
               during the key agreement protocol, and it is wasteful
               to transmit the public key another two times.
               The use of a hash of public key info, at 32-bytes for
               sha256 is a significant savings compared to an RSA



Richardson, et al.       Expires January 4, 2020               [Page 11]

Internet-Draft             Constrained Voucher                 July 2019


               public key, but is only a minor savings compared to
               a 256-bit ECDSA public-key.
               Algorithm agility is provided by extensions to this
               specifications which define new leaf for other hash
               types.";
          }

          leaf proximity-registrar-cert {
            type binary;
            description
              "An X.509 v3 certificate structure as specified by
               RFC 5280,
               Section 4 encoded using the ASN.1 distinguished encoding
               rules (DER), as specified in ITU-T X.690.

               The first certificate in the Registrar TLS server
               certificate_list sequence  (see [RFC5246]) presented by
               the Registrar to the Pledge. This MUST be populated in a
               Pledge's voucher request if the proximity assertion is
               populated.";
          }

          leaf prior-signed-voucher-request {
            type binary;
            description
              "If it is necessary to change a voucher, or re-sign and
               forward a voucher that was previously provided along a
               protocol path, then the previously signed voucher
               SHOULD be included in this field.

               For example, a pledge might sign a proximity voucher,
               which an intermediate registrar then re-signs to
               make its own proximity assertion.  This is a simple
               mechanism for a chain of trusted parties to change a
               voucher, while maintaining the prior signature
               information.

               The pledge MUST ignore all prior voucher information
               when accepting a voucher for imprinting. Other
               parties MAY examine the prior signed voucher
               information for the purposes of policy decisions.
               For example this information could be useful to a
               MASA to determine that both pledge and registrar
               agree on proximity assertions. The MASA SHOULD
               remove all prior-signed-voucher-request information when
               signing a voucher for imprinting so as to minimize the
               final voucher size.";
          }



Richardson, et al.       Expires January 4, 2020               [Page 12]

Internet-Draft             Constrained Voucher                 July 2019


        }
      }
    }
  }
  <CODE ENDS>

6.1.4.  Example voucher request artifact

   Below a CBOR serialization of the constrained-voucher-request is
   shown in diagnostic CBOR notation.  The enum value of the assertion
   field is calculated to be zero by following the algorithm described
   in section 9.6.4.2 of [RFC7950].

   {
     1001154: {
       +2 : "2016-10-07T19:31:42Z", / SID= 1001156, created-on /
       +4 : "2016-10-21T19:31:42Z", / SID= 1001158, expires-on /
       +1 : 2,                      / SID= 1001155, assertion /
                                    /                "proximity" /
       +13: "JADA123456789",        / SID= 1001167, serial-number /
       +5 : h'01020D0F',            / SID= 1001159, idevid-issuer /
       +10: h'01020D0F',        / SID=1001064, proximity-registrar-cert/
       +3 : true,                   / SID= 1001157, domain-cert
                                                     -revocation-checks/
       +6 : "2017-10-07T19:31:42Z", / SID= 1001160, last-renewal-date /
       +12: h'01020D0F'             / SID= 1001166, proximity-registrar
                                            -subject-public-key-info /
     }
   }



6.2.  Voucher artifact

   The voucher's primary purpose is to securely assign a pledge to an
   owner.  The voucher informs the pledge which entity it should
   consider to be its owner.

   This document defines a voucher that is a CBOR encoded instance of
   the YANG module defined in Section 5.3 that has been signed with CMS
   or with COSE.

6.2.1.  Tree Diagram

   The following diagram is largely a duplicate of the contents of
   [RFC8366], with only the addition of pinned-domain-subject-public-
   key-info.




Richardson, et al.       Expires January 4, 2020               [Page 13]

Internet-Draft             Constrained Voucher                 July 2019


   module: ietf-constrained-voucher

     grouping voucher-constrained-grouping
       +-- voucher
          +-- created-on?
          |       yang:date-and-time
          +-- expires-on?
          |       yang:date-and-time
          +-- assertion                                   enumeration
          +-- serial-number                               string
          +-- idevid-issuer?                              binary
          +-- pinned-domain-cert?                         binary
          +-- domain-cert-revocation-checks?              boolean
          +-- nonce?                                      binary
          +-- last-renewal-date?
          |       yang:date-and-time
          +-- pinned-domain-subject-public-key-info?      binary
          +-- pinned-sha256-of-subject-public-key-info?   binary

6.2.2.  SID values


         SID Assigned to
   --------- --------------------------------------------------
     1001104 data /ietf-constrained-voucher:voucher
     1001105 data /ietf-constrained-voucher:voucher/assertion
     1001106 data /ietf-constrained-voucher:voucher/created-on
     1001107 data .../domain-cert-revocation-checks
     1001108 data /ietf-constrained-voucher:voucher/expires-on
     1001109 data /ietf-constrained-voucher:voucher/idevid-issuer
     1001110 data .../last-renewal-date
     1001111 data /ietf-constrained-voucher:voucher/nonce
     1001112 data .../pinned-domain-cert
     1001113 data .../pinned-domain-subject-public-key-info
     1001114 data .../pinned-sha256-of-subject-public-key-info
     1001115 data /ietf-constrained-voucher:voucher/serial-number


6.2.3.  YANG Module

   In the constraine-voucher YANG module, the voucher is "augmented"
   within the "used" grouping statement such that one continuous set of
   SID values is generated for the constrained-voucher module name, all
   voucher attributes, and the constrained-voucher attribute.  Two
   attributes of the voucher are "refined" to be optional.

<CODE BEGINS> file "ietf-constrained-voucher@2018-09-01.yang"
module ietf-constrained-voucher {



Richardson, et al.       Expires January 4, 2020               [Page 14]

Internet-Draft             Constrained Voucher                 July 2019


  yang-version 1.1;

  namespace
    "urn:ietf:params:xml:ns:yang:ietf-constrained-voucher";
  prefix "constrained";

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher {
    prefix "v";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Michael Richardson
              <mailto:mcr+ietf@sandelman.ca>
    Author:   Peter van der Stok
              <mailto: consultancy@vanderstok.org>
    Author:   Panos Kampanakis
              <mailto: pkampana@cisco.com>";
description
  "This module defines the format for a voucher, which is produced
   by a pledge's manufacturer or delegate (MASA) to securely assign
   one or more pledges to an 'owner', so that the pledges may
   establis a secure connection to the owner's network
   infrastructure.

   This version provides a very restricted subset appropriate
   for very constrained devices.
   In particular, it assumes that nonce-ful operation is
   always required, that expiration dates are rather weak, as no
   clocks can be assumed, and that the Registrar is identified
   by a pinned Raw Public Key.

   The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
   'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY',
   and 'OPTIONAL' in the module text are to be interpreted as
   described in RFC 2119.";



Richardson, et al.       Expires January 4, 2020               [Page 15]

Internet-Draft             Constrained Voucher                 July 2019


  revision "2018-09-01" {
    description
     "Initial version";
    reference
     "RFC XXXX: Voucher Profile for Constrained Devices";
  }

  rc:yang-data voucher-constrained-artifact {
    // YANG data template for a voucher.
    uses voucher-constrained-grouping;
  }

  // Grouping defined for future usage
  grouping voucher-constrained-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";

    uses v:voucher-artifact-grouping {

      refine voucher/created-on {
          mandatory  false;
      }

      refine voucher/pinned-domain-cert {
          mandatory  false;
      }

      augment "voucher" {
        description "Base the constrained voucher
                                   upon the regular one";
        leaf pinned-domain-subject-public-key-info {
          type binary;
          description
            "The pinned-domain-subject-public-key-info replaces the
             pinned-domain-cert in constrained uses of
             the voucher. The pinned-domain-subject-public-key-info
             is the Raw Public Key of the Registrar.
             This field is encoded as specified in RFC7250,
             section 3.
             The ECDSA algorithm MUST be supported.
             The EdDSA algorithm as specified in
             draft-ietf-tls-rfc4492bis-17 SHOULD be supported.
             Support for the DSA algorithm is not recommended.
             Support for the RSA algorithm is a MAY.";
        }

        leaf pinned-sha256-of-subject-public-key-info {
          type binary;



Richardson, et al.       Expires January 4, 2020               [Page 16]

Internet-Draft             Constrained Voucher                 July 2019


          description
            "The pinned-hash-subject-public-key-info is a second
             alternative to pinned-domain-cert.  In many cases the
             public key of the domain has already been transmitted
             during the key agreement process, and it is wasteful
             to transmit the public key another two times.
             The use of a hash of public key info, at 32-bytes for
             sha256 is a significant savings compared to an RSA
             public key, but is only a minor savings compared to
             a 256-bit ECDSA public-key.
             Algorithm agility is provided by extensions to this
             specifications which define new leaf for other hash types";
        }
      }
    }
  }
}
<CODE ENDS>

6.2.4.  Example voucher artifacts

   Below a the CBOR serialization of the the constrained-voucher is
   shown in diagnostic CBOR notation.  The enum value of the assertion
   field is calculated to be zero by following the algorithm described
   in section 9.6.4.2 of [RFC7950].

   {
     1001104: {
       +2 : "2016-10-07T19:31:42Z", / SID = 1001106, created-on /
       +4 : "2016-10-21T19:31:42Z", / SID = 1001108, expires-on /
       +1 : 0,                      / SID = 1001105, assertion /
                                    /                "verified" /
       +11: "JADA123456789",        / SID = 1001115, serial-number /
       +5 : h'01020D0F',            / SID = 1001109, idevid-issuer /
       +8 : h'01020D0F',            / SID = 1001112, pinned-domain-cert/
       +3 : true,                   / SID = 1001107, domain-cert
                                                    -revocation-checks /
       +6 : "2017-10-07T19:31:42Z", / SID = 1001110, last-renewal-date /
       +9 : h'01020D0F'             / SID = 1001113, pinned-domain
                                              -subject-public-key-info /
     }
   }



   The signing of the example is shown in Appendix B.1.





Richardson, et al.       Expires January 4, 2020               [Page 17]

Internet-Draft             Constrained Voucher                 July 2019


6.3.  Signing voucher and voucher-request artifacts

6.3.1.  CMS signing

   The IETF evolution of PKCS#7 is CMS [RFC5652].  The CMS signed
   voucher is much like the equivalent voucher defined in [RFC8366].

   A different eContentType of TBD1 is used to indicate that the
   contents are in a different format than in [RFC8366].

   The ContentInfo structure contains a payload consisting of the CBOR
   encoded voucher.  The [I-D.ietf-core-yang-cbor] use of delta encoding
   creates a canonical ordering for the keys on the wire.  This
   canonical ordering is not important as there is no expectation that
   the content will be reproduced during the validation process.

   Normally the recipient is the pledge and the signer is the MASA.

   [I-D.ietf-anima-bootstrapping-keyinfra] supports both signed and
   unsigned voucher requests from the pledge to the JRC.  In this
   specification, voucher-request artifact MUST be signed from the
   pledge to the registrar.  From the JRC to the MASA, the voucher-
   request artifact MUST be signed by the domain owner key which is
   requesting ownership.

   The considerations of [RFC5652] section 5.1, concerning validating
   CMS objects which are really PKCS7 objects (cmsVersion=1) applies.

   The CMS structure SHOULD also contain all the certificates leading up
   to and including the signer's trust anchor certificate known to the
   recipient.  The inclusion of the trust anchor is unusual in many
   applications, but without it third parties can not accurately audit
   the transaction.

   The CMS structure MAY also contain revocation objects for any
   intermediate certificate authorities (CAs) between the voucher-issuer
   and the trust anchor known to the recipient.  However, the use of
   CRLs and other validity mechanisms is discouraged, as the pledge is
   unlikely to be able to perform online checks, and is unlikely to have
   a trusted clock source.  As described below, the use of short-lived
   vouchers and/or pledge provided nonce provides a freshness guarantee.

   [EDnote: compulsory signing algorithms are ....]

   In Appendix B.1 an example for the CMS signing of the voucher-request
   is shown.





Richardson, et al.       Expires January 4, 2020               [Page 18]

Internet-Draft             Constrained Voucher                 July 2019


6.3.2.  COSE signing

   The COSE-Sign1 structure is discussed in section 4.2 of [RFC8152].
   The CBOR object that carries the body, the signature, and the
   information about the body and signature is called the COSE_Sign1
   structure.  It is used when only one signature is used on the body.
   Support for EDdsa 256 with Ed25519 is compulsory.

   The supported COSE-sign1 object stucture is shown in Figure 1.

   COSE_Sign1(
   [
    h'a10126',         #{ "alg":  EDdsa 256 }
   {
    "crv": Ed25519,
    "kty": OKP,
    "key_ops": "verify"
   },
   h'123', #voucher-request binary content
   h'456', #voucher-request binary public signature
   ]
   )

                    Figure 1: The cose-sign1 structure.

   The [COSE-registry] specifies the integers that replace the strings
   and the mnemonics in Figure 1.  In Appendix B.2 a binary cose-sign1
   object is shown based on the voucher-request example of
   Section 6.1.4.

7.  Design Considerations

   The design considerations for the CBOR encoding of vouchers is much
   the same as for [RFC8366].

   One key difference is that the names of the leaves in the YANG does
   not have a material effect on the size of the resulting CBOR, as the
   SID translation process assigns integers to the names.

8.  Security Considerations

8.1.  Clock Sensitivity

   TBD.







Richardson, et al.       Expires January 4, 2020               [Page 19]

Internet-Draft             Constrained Voucher                 July 2019


8.2.  Protect Voucher PKI in HSM

   TBD.

8.3.  Test Domain Certificate Validity when Signing

   TBD.

9.  IANA Considerations

9.1.  Resource Type Registry

   Additions to the sub-registry "CoAP Resource Type", within the "CoRE
   parameters" registry are specified below.  These can be registered
   either in the Expert Review range (0-255) or IETF Review range
   (256-9999).

    ace.rt.rv needs registration with IANA
    ace.rt.vs needs registration with IANA
    ace.rt.es needs registration with IANA
    ace.rt.ra needs registration with IANA

9.2.  The IETF XML Registry

   This document registers two URIs in the IETF XML registry [RFC3688].
   Following the format in [RFC3688], the following registration is
   requested:

     URI: urn:ietf:params:xml:ns:yang:ietf-constrained-voucher
     Registrant Contact: The ANIMA WG of the IETF.
     XML: N/A, the requested URI is an XML namespace.

     URI: urn:ietf:params:xml:ns:yang:ietf-constrained-voucher-request
     Registrant Contact: The ANIMA WG of the IETF.
     XML: N/A, the requested URI is an XML namespace.

9.3.  The YANG Module Names Registry

   This document registers two YANG modules in the YANG Module Names
   registry [RFC6020].  Following the format defined in [RFC6020], the
   the following registration is requested:










Richardson, et al.       Expires January 4, 2020               [Page 20]

Internet-Draft             Constrained Voucher                 July 2019


     name:         ietf-constrained-voucher
     namespace:    urn:ietf:params:xml:ns:yang:ietf-constrained-voucher
     prefix:       vch
     reference:    RFC XXXX

     name:         ietf-constrained-voucher-request
     namespace:    urn:ietf:params:xml:ns:yang:ietf-constrained
                                              -voucher-request
     prefix:       vch
     reference:    RFC XXXX

9.4.  The RFC SID range assignment sub-registry

   ------------ ------ --------------------------- ------------
   Entry-point | Size | Module name               | RFC Number
   ------------ ------ --------------------------- ------------
   1001100       50     ietf-constrained-voucher    [ThisRFC]
   1001150       50     ietf-constrained-voucher    [ThisRFC}
                                    -request
   ----------- ------  --------------------------- ------------

   Warning: These SID values will change when they transfer to the range
   1000 - 59,999 allocated for SIDs in YANG modules defined in RFCs.

9.5.  The SMI Security for S/MIME CMS Content Type Registry

   This document registers an OID in the "SMI Security for S/MIME CMS
   Content Type" registry (1.2.840.113549.1.9.16.1), with the value:

     Decimal  Description                             References
     -------  --------------------------------------  ----------
     TBD1      id-ct-animaCBORVoucher                 [ThisRFC]

   EDNOTE: should a separate value be used for Voucher Requests?

9.6.  Media-Type Registry

   This section registers the 'application/voucher-cms+cbor' media type
   and the 'application/voucher-cose+cbor'in the "Media Types" registry.
   These media types are used to indicate that the content is a CBOR
   voucher either signed with a cms structure or a COSE_Sign1 structure
   [RFC8152].

9.6.1.  application/voucher-cms+cbor







Richardson, et al.       Expires January 4, 2020               [Page 21]

Internet-Draft             Constrained Voucher                 July 2019


   Type name:  application
   Subtype name:  voucher-cms+cbor
   Required parameters:  none
   Optional parameters:  none
   Encoding considerations:  CMS-signed CBOR vouchers are CBOR
     encoded.
   Security considerations:  See Security Considerations, Section
   Interoperability considerations:  The format is designed to be
     broadly interoperable.
   Published specification:  THIS RFC.
   Applications that use this media type:  ANIMA, 6tisch, and other
     zero-touch imprinting systems
   Additional information:
     Magic number(s):  None
     File extension(s):  .vch
     Macintosh file type code(s):  none
   Person & email address to contact for further information:  IETF
     ANIMA WG
   Intended usage:  LIMITED
   Restrictions on usage:  NONE
   Author:  ANIMA WG
   Change controller:  IETF
   Provisional registration? (standards tree only):  NO

9.6.2.  application/voucher-cose+cbor


























Richardson, et al.       Expires January 4, 2020               [Page 22]

Internet-Draft             Constrained Voucher                 July 2019


   Type name:  application
   Subtype name:  voucher-cose+cbor
   Required parameters:  none
   Optional parameters:  cose-type
   Encoding considerations:  COSE_Sign1 CBOR vouchers are COSE objects
                             signed with one signer.
   Security considerations:  See Security Considerations, Section
   Interoperability considerations:  The format is designed to be
     broadly interoperable.
   Published specification:  THIS RFC.
   Applications that use this media type:  ANIMA, 6tisch, and other
     zero-touch imprinting systems
   Additional information:
     Magic number(s):  None
     File extension(s):  .vch
     Macintosh file type code(s):  none
   Person & email address to contact for further information:  IETF
     ANIMA WG
   Intended usage:  LIMITED
   Restrictions on usage:  NONE
   Author:  ANIMA WG
   Change controller:  IETF
   Provisional registration? (standards tree only):  NO

9.7.  CoAP Content-Format Registry

   Additions to the sub-registry "CoAP Content-Formats", within the
   "CoRE Parameters" registry are needed for two media types.  These can
   be registered either in the Expert Review range (0-255) or IETF
   Review range (256-9999).

   Media type                    mime type    Encoding   ID  References
   ----------------------------  -----------  --------- ---- ----------
   application/voucher-cms+cbor      - -        CBOR    TBD2  [This RFC]
   application/voucher-cose+cbor "COSE-Sign1"   CBOR    TBD3  [This RFC]

10.  Acknowledgements

   We are very grateful to Jim Schaad for explaining COSE and CMS
   choices.

   Michel Veillette did extensive work on pyang to extend it to support
   the SID allocation process, and this document was among the first
   users.

   We are grateful for the suggestions done by Esko Dijk.





Richardson, et al.       Expires January 4, 2020               [Page 23]

Internet-Draft             Constrained Voucher                 July 2019


11.  Changelog

   -04 voucher and request-voucher MUST be signed examples for signed
   request are added in appendix IANA SID registration is updated SID
   values in examples are aligned signed cms examples aligned with new
   SIDs

   -03

   Examples are inverted.

   -02

   Example of requestvoucher with unsigned appllication/cbor is added
   attributes of voucher "refined" to optional
   CBOR serialization of vouchers improved
   Discovery port numbers are specified

   -01

   application/json is optional, application/cbor is compulsory
   Cms and cose mediatypes are introduced

12.  References

12.1.  Normative References

   [I-D.ietf-ace-cbor-web-token]
              Jones, M., Wahlstroem, E., Erdtman, S., and H. Tschofenig,
              "CBOR Web Token (CWT)", draft-ietf-ace-cbor-web-token-15
              (work in progress), March 2018.

   [I-D.ietf-ace-coap-est]
              Stok, P., Kampanakis, P., Richardson, M., and S. Raza,
              "EST over secure CoAP (EST-coaps)", draft-ietf-ace-coap-
              est-12 (work in progress), June 2019.

   [I-D.ietf-anima-bootstrapping-keyinfra]
              Pritikin, M., Richardson, M., Behringer, M., Bjarnason,
              S., and K. Watsen, "Bootstrapping Remote Secure Key
              Infrastructures (BRSKI)", draft-ietf-anima-bootstrapping-
              keyinfra-22 (work in progress), June 2019.

   [I-D.ietf-core-object-security]
              Selander, G., Mattsson, J., Palombini, F., and L. Seitz,
              "Object Security for Constrained RESTful Environments
              (OSCORE)", draft-ietf-core-object-security-16 (work in
              progress), March 2019.



Richardson, et al.       Expires January 4, 2020               [Page 24]

Internet-Draft             Constrained Voucher                 July 2019


   [I-D.ietf-core-sid]
              Veillette, M., Pelov, A., and I. Petrov, "YANG Schema Item
              iDentifier (SID)", draft-ietf-core-sid-06 (work in
              progress), March 2019.

   [I-D.ietf-core-yang-cbor]
              Veillette, M., Petrov, I., and A. Pelov, "CBOR Encoding of
              Data Modeled with YANG", draft-ietf-core-yang-cbor-10
              (work in progress), April 2019.

   [ieee802-1AR]
              IEEE Standard, ., "IEEE 802.1AR Secure Device Identifier",
              2009, <http://standards.ieee.org/findstds/
              standard/802.1AR-2009.html>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/info/rfc3688>.

   [RFC5652]  Housley, R., "Cryptographic Message Syntax (CMS)", STD 70,
              RFC 5652, DOI 10.17487/RFC5652, September 2009,
              <https://www.rfc-editor.org/info/rfc5652>.

   [RFC6020]  Bjorklund, M., Ed., "YANG - A Data Modeling Language for
              the Network Configuration Protocol (NETCONF)", RFC 6020,
              DOI 10.17487/RFC6020, October 2010,
              <https://www.rfc-editor.org/info/rfc6020>.

   [RFC7049]  Bormann, C. and P. Hoffman, "Concise Binary Object
              Representation (CBOR)", RFC 7049, DOI 10.17487/RFC7049,
              October 2013, <https://www.rfc-editor.org/info/rfc7049>.

   [RFC7250]  Wouters, P., Ed., Tschofenig, H., Ed., Gilmore, J.,
              Weiler, S., and T. Kivinen, "Using Raw Public Keys in
              Transport Layer Security (TLS) and Datagram Transport
              Layer Security (DTLS)", RFC 7250, DOI 10.17487/RFC7250,
              June 2014, <https://www.rfc-editor.org/info/rfc7250>.

   [RFC7252]  Shelby, Z., Hartke, K., and C. Bormann, "The Constrained
              Application Protocol (CoAP)", RFC 7252,
              DOI 10.17487/RFC7252, June 2014,
              <https://www.rfc-editor.org/info/rfc7252>.




Richardson, et al.       Expires January 4, 2020               [Page 25]

Internet-Draft             Constrained Voucher                 July 2019


   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC8152]  Schaad, J., "CBOR Object Signing and Encryption (COSE)",
              RFC 8152, DOI 10.17487/RFC8152, July 2017,
              <https://www.rfc-editor.org/info/rfc8152>.

   [RFC8366]  Watsen, K., Richardson, M., Pritikin, M., and T. Eckert,
              "A Voucher Artifact for Bootstrapping Protocols",
              RFC 8366, DOI 10.17487/RFC8366, May 2018,
              <https://www.rfc-editor.org/info/rfc8366>.

12.2.  Informative References

   [COSE-registry]
              IANA, ., "CBOR Object Signing and Encryption (COSE)
              registry", 2017,
              <https://www.iana.org/assignments/cose/cose.xhtml>.

   [duckling]
              Stajano, F. and R. Anderson, "The resurrecting duckling:
              security issues for ad-hoc wireless networks", 1999,
              <https://www.cl.cam.ac.uk/~fms27/
              papers/1999-StajanoAnd-duckling.pdf>.

   [I-D.ietf-netmod-yang-tree-diagrams]
              Bjorklund, M. and L. Berger, "YANG Tree Diagrams", draft-
              ietf-netmod-yang-tree-diagrams-06 (work in progress),
              February 2018.

   [pledge]   Dictionary.com, ., "Dictionary.com Unabridged", 2015,
              <http://dictionary.reference.com/browse/pledge>.

   [RFC6690]  Shelby, Z., "Constrained RESTful Environments (CoRE) Link
              Format", RFC 6690, DOI 10.17487/RFC6690, August 2012,
              <https://www.rfc-editor.org/info/rfc6690>.

   [RFC7030]  Pritikin, M., Ed., Yee, P., Ed., and D. Harkins, Ed.,
              "Enrollment over Secure Transport", RFC 7030,
              DOI 10.17487/RFC7030, October 2013,
              <https://www.rfc-editor.org/info/rfc7030>.

Appendix A.  EST messages to EST-coaps

   This section extends the examples from Appendix A of
   [I-D.ietf-ace-coap-est].  The CoAP headers are only worked out for
   the enrollstatus example.



Richardson, et al.       Expires January 4, 2020               [Page 26]

Internet-Draft             Constrained Voucher                 July 2019


A.1.  enrollstatus

   A coaps enrollstatus message can be :

       GET coaps://[192.0.2.1:8085]/est/es

   The corresponding coap header fields are shown below.

     Ver = 1
     T = 0 (CON)
     Code = 0x01 (0.01 is GET)
     Options
      Option  (Uri-Path)
        Option Delta = 0xb   (option nr = 11)
        Option Length = 0x3
        Option Value = "est"
      Option  (Uri-Path)
        Option Delta = 0x0   (option nr = 11)
        Option Length = 0x2
        Option Value = "es"
     Payload = [Empty]

   The Uri-Host and Uri-Port Options are omitted because they coincide
   with the transport protocol destination address and port
   respectively.

   A 2.05 Content response with an unsigned voucher status (ct=60) will
   then be:

      2.05 Content (Content-Format: application/cbor)


   With CoAP fields and payload:


















Richardson, et al.       Expires January 4, 2020               [Page 27]

Internet-Draft             Constrained Voucher                 July 2019


      Ver=1
      T=2 (ACK)
      Code = 0x45 (2.05 Content)
      Options
        Option1 (Content-Format)
        Option Delta = 0xC  (option nr 12)
        Option Length = 0x2
        Option Value = 60 (application/cbor)

        Payload (CBOR diagnostic) =
        {
        "version":"1",
        "Status": 1,   / 1 = Success, 0 = Fail  /
        "Reason":"Informative human readable message",
        "reason-context": "Additional information"
        }

        Payload (binary) =
        A46776657273696F6E6131665374617475730166526561736F6E7822
        496E666F726D61746976652068756D616E207265616461626C65206D
        6573736167656e726561736F6E2D636F6E74657874
        764164646974696F6E616C20696E666F726D6174696F6E
   ~~~

   ##voucher_status

   A coaps voucher_status message can be :


   GET coaps://[2001:db8::2:1]:61616]/est/vs ~~~~

   A 2.05 Content response with a non signed CBOR voucher (ct=60) will
   then be:

       2.05 Content (Content-Format: application/cbor)
       Payload =
       A46776657273696F6E6131665374617475730166526561736F6E7822
       496E666F726D61746976652068756D616E207265616461626C65206D
       6573736167656e726561736F6E2D636F6E74657874
       764164646974696F6E616C20696E666F726D6174696F6E


A.2.  requestvoucher

   Signed request-voucher-request payloads are sent from pledge to
   Registrar, as explained in Section 5.2 of
   [I-D.ietf-anima-bootstrapping-keyinfra].




Richardson, et al.       Expires January 4, 2020               [Page 28]

Internet-Draft             Constrained Voucher                 July 2019


A.2.1.  signed requestvoucher

   A CMS signed requestvoucher message from JRC to MASA is shown below.
   It would be CoAP POSTED to /est/rv.

       POST coaps://[2001:db8::2:1]:61616]/est/rv
       (Content-Format: application/voucher-cms+cbor)

   The payload would be in binary, but is presented in base64 in this
   document.

   MIIDugYJKoZIhvcNAQcCoIIDqzCCA6cCAQExDTALBglghkgBZQMEAgEwCwYJ
   KoZIhvcNAQcBoIICQTCCAj0wggHioAMCAQICCH52Yde1TkYyMAoGCCqGSM49
   BAMCMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEUMBIGA1UECgwLRXhh
   bXBsZSBJbmMxFjAUBgNVBAsMDWNlcnRpZmljYXRpb24xEzARBgNVBAMMCjgw
   Mi4xQVIgQ0EwIBcNMTkwMTMxMTEyOTE2WhgPOTk5OTEyMzEyMzU5NTlaMFwx
   CzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTELMAkGA1UEBwwCTEExFDASBgNV
   BAoMC2V4YW1wbGUgSW5jMQwwCgYDVQQLDANJb1QxDzANBgNVBAUTBld0MTIz
   NDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMi0IfEcJeR+OsVxI78tn9xJ
   TwKLw1HMgMA/FQv1DP+VjXVBnYGmokXf+ueQvpXPdfYC+RUmGPgWorI7Vjjl
   n9mjgYowgYcwCQYDVR0TBAIwADAdBgNVHQ4EFgQUlmANhxa/f9DnUtCsdgd3
   rWZdAqAwHwYDVR0jBBgwFoAUaNFlUflRv8gqQx0Nnwi8LSBbEWAwDgYDVR0P
   AQH/BAQDAgWgMCoGA1UdEQQjMCGgHwYIKwYBBQUHCASgEzARBgkrBgEEAbQ7
   CgEEBAECAwQwCgYIKoZIzj0EAwIDSQAwRgIhAMDYGZbSUH1pPzxI6qXulJG9
   ptshQJnZgRfGOzYTdM2GAiEAp3SYn0wyGlzyXYMqTTNqCK1n3yDxUGQhGIoK
   3m00kjYxggE/MIIBOwIBATBpMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJD
   QTEUMBIGA1UECgwLRXhhbXBsZSBJbmMxFjAUBgNVBAsMDWNlcnRpZmljYXRp
   b24xEzARBgNVBAMMCjgwMi4xQVIgQ0ECCH52Yde1TkYyMAsGCWCGSAFlAwQC
   AaBpMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8X
   DTE5MDQwODEwNDgzNlowLwYJKoZIhvcNAQkEMSIEILEdCTOLs2Zy7w3LgvSZ
   XZEadz3LbznoFBs6FMFN91RaMAoGCCqGSM49BAMCBEcwRQIgASjDsIpr0tW/
   n6dRHqvvqsqgZlHbtFnErUbWfhS0KD4CIQDDUEqc5wTmRGf0adEQVQzqmIgh
   MEgF10vqXv02gL1jLw==

   A 2.04 Changed response returning CBOR voucher signed with a cms
   structure(ct=TBD2) will then be:

       2.04 Changed (Content-Format: application/voucher-cms+cbor)













Richardson, et al.       Expires January 4, 2020               [Page 29]

Internet-Draft             Constrained Voucher                 July 2019


   MIIDuwYJKoZIhvcNAQcCoIIDrDCCA6gCAQExDTALBglghkgBZQMEAgEwCwYJ
   KoZIhvcNAQcBoIICQTCCAj0wggHioAMCAQICCH52Yde1TkYyMAoGCCqGSM49
   BAMCMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEUMBIGA1UECgwLRXhh
   bXBsZSBJbmMxFjAUBgNVBAsMDWNlcnRpZmljYXRpb24xEzARBgNVBAMMCjgw
   Mi4xQVIgQ0EwIBcNMTkwMTMxMTEyOTE2WhgPOTk5OTEyMzEyMzU5NTlaMFwx
   CzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTELMAkGA1UEBwwCTEExFDASBgNV
   BAoMC2V4YW1wbGUgSW5jMQwwCgYDVQQLDANJb1QxDzANBgNVBAUTBld0MTIz
   NDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMi0IfEcJeR+OsVxI78tn9xJ
   TwKLw1HMgMA/FQv1DP+VjXVBnYGmokXf+ueQvpXPdfYC+RUmGPgWorI7Vjjl
   n9mjgYowgYcwCQYDVR0TBAIwADAdBgNVHQ4EFgQUlmANhxa/f9DnUtCsdgd3
   rWZdAqAwHwYDVR0jBBgwFoAUaNFlUflRv8gqQx0Nnwi8LSBbEWAwDgYDVR0P
   AQH/BAQDAgWgMCoGA1UdEQQjMCGgHwYIKwYBBQUHCASgEzARBgkrBgEEAbQ7
   CgEEBAECAwQwCgYIKoZIzj0EAwIDSQAwRgIhAMDYGZbSUH1pPzxI6qXulJG9
   ptshQJnZgRfGOzYTdM2GAiEAp3SYn0wyGlzyXYMqTTNqCK1n3yDxUGQhGIoK
   3m00kjYxggFAMIIBPAIBATBpMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJD
   QTEUMBIGA1UECgwLRXhhbXBsZSBJbmMxFjAUBgNVBAsMDWNlcnRpZmljYXRp
   b24xEzARBgNVBAMMCjgwMi4xQVIgQ0ECCH52Yde1TkYyMAsGCWCGSAFlAwQC
   AaBpMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8X
   DTE5MDQwODA3MzQxMFowLwYJKoZIhvcNAQkEMSIEIP2rKa+J8LVdwYEmB2he
   uxsz05As0zoAAYkeyNqsh4fiMAoGCCqGSM49BAMCBEgwRgIhALOd2FKbe9FG
   kN4Pg7FIgF+//cQv/N+v7tDZMzGBAFN0AiEAu5BI0oQ4o0wZcrDyKoU2GbeX
   hlG/g+OgTUftYMJ32so=

A.3.  requestauditing

   A coaps requestauditing message contains the signed CBOR voucher :

























Richardson, et al.       Expires January 4, 2020               [Page 30]

Internet-Draft             Constrained Voucher                 July 2019


       POST coaps://[2001:db8::2:1]:61616]/est/ra
       (Content-Format: application/voucher-cms+cbor)
       Payload =
   308203ba06092a864886f70d010702a08203ab308203a7020101310d300b
   0609608648016503040201300b06092a864886f70d010701a08202413082
   023d308201e2a00302010202087e7661d7b54e4632300a06082a8648ce3d
   040302305d310b3009060355040613025553310b300906035504080c0243
   4131143012060355040a0c0b4578616d706c6520496e6331163014060355
   040b0c0d63657274696669636174696f6e3113301106035504030c0a3830
   322e3141522043413020170d3139303133313131323931365a180f393939
   39313233313233353935395a305c310b3009060355040613025553310b30
   0906035504080c024341310b300906035504070c024c4131143012060355
   040a0c0b6578616d706c6520496e63310c300a060355040b0c03496f5431
   0f300d060355040513065774313233343059301306072a8648ce3d020106
   082a8648ce3d03010703420004c8b421f11c25e47e3ac57123bf2d9fdc49
   4f028bc351cc80c03f150bf50cff958d75419d81a6a245dffae790be95cf
   75f602f9152618f816a2b23b5638e59fd9a3818a30818730090603551d13
   04023000301d0603551d0e0416041496600d8716bf7fd0e752d0ac760777
   ad665d02a0301f0603551d2304183016801468d16551f951bfc82a431d0d
   9f08bc2d205b1160300e0603551d0f0101ff0404030205a0302a0603551d
   1104233021a01f06082b06010505070804a013301106092b06010401b43b
   0a01040401020304300a06082a8648ce3d0403020349003046022100c0d8
   1996d2507d693f3c48eaa5ee9491bda6db214099d98117c63b361374cd86
   022100a774989f4c321a5cf25d832a4d336a08ad67df20f1506421188a0a
   de6d3492363182013f3082013b0201013069305d310b3009060355040613
   025553310b300906035504080c02434131143012060355040a0c0b457861
   6d706c6520496e6331163014060355040b0c0d6365727469666963617469
   6f6e3113301106035504030c0a3830322e31415220434102087e7661d7b5
   4e4632300b0609608648016503040201a069301806092a864886f70d0109
   03310b06092a864886f70d010701301c06092a864886f70d010905310f17
   0d3139303430383130343833365a302f06092a864886f70d010904312204
   20b11d09338bb36672ef0dcb82f4995d911a773dcb6f39e8141b3a14c14d
   f7545a300a06082a8648ce3d0403020447304502200128c3b08a6bd2d5bf
   9fa7511eabefaacaa06651dbb459c4ad46d67e14b4283e022100c3504a9c
   e704e64467f469d110550cea988821304805d74bea5efd3680bd632f

   A 2.05 Content response returning a log of the voucher (ct=60) will
   then be:













Richardson, et al.       Expires January 4, 2020               [Page 31]

Internet-Draft             Constrained Voucher                 July 2019


       2.05 Content (Content-Format: application/cbor)
       Payload =
   {
    "version":"1",
    "events":[
      {
       "date":"<date/time of the entry>",
       "domainID":"<domainID extracted from voucher-request>",
       "nonce":"<any nonce if supplied (or the exact string 'NULL')>"
       "assertion":"<the value from the voucher assertion leaf>"
       "truncated":"<the number of domainID entries truncated>"
      },
      {
       "date":"<date/time of the entry>",
       "domainID":"<anotherDomainID extracted from voucher-request>",
       "nonce":"<any nonce if supplied (or the exact string 'NULL')>"
       "assertion":"<the value from the voucher assertion leaf>"
      }
    ],
     "truncation": {
       "nonced duplicates": "<total number of entries truncated>",
       "nonceless duplicates": "<total number of entries truncated>",
       "arbitrary": "<number of domainID entries removed entirely>"
     }
   }

       [EDNOTE: Change JSON to CBOR; Serialize CBOR payload to binary]

Appendix B.  Signed voucher-request examples

B.1.  CMS signed voucher-request example

   The voucher-request example, visualized in CBOR diagnostic notation
   in Section 6.1.4 is shown as a hexadecimal dump of the binary file.

       A11A000F46C2A90274323031362D31302D30375431393A33313A34325A0
       474323031362D31302D32315431393A33313A34325A01020d6d4A414441
       313233343536373839054401020D0F0A4401020D0F03F50674323031372
       D31302D30375431393A33313A34325A0c4401020D0F

   The voucher-request example has been signed by using the WT1234
   certificate and key pair shown in Appendix C of
   [I-D.ietf-ace-coap-est].  The CMS signing of the binary voucher-
   request leads to a binary signed voucher-request, shown with a
   hexadecimal representation shown in the payload of the request part
   of Appendix A.2.1 and Appendix A.3.





Richardson, et al.       Expires January 4, 2020               [Page 32]

Internet-Draft             Constrained Voucher                 July 2019


   The breakdown of the CMS signed binary voucher-request file is
   visualized below:

   CMS_ContentInfo:
     contentType: pkcs7-signedData (1.2.840.113549.1.7.2)
     d.signedData:
       version: 1
       digestAlgorithms:
           algorithm: sha256 (2.16.840.1.101.3.4.2.1)
           parameter: <ABSENT>
       encapContentInfo:
         eContentType: pkcs7-data (1.2.840.113549.1.7.1)
         eContent: <ABSENT>
       certificates:
         d.certificate:
           cert_info:
             version: 2
             serialNumber: 9112578475118446130
             signature:
               algorithm: ecdsa-with-SHA256 (1.2.840.10045.4.3.2)
               parameter: <ABSENT>
             issuer: C=US, ST=CA, O=Example Inc, OU=certification,
                                                          CN=802.1AR CA
             validity:
               notBefore: Jan 31 11:29:16 2019 GMT
               notAfter: Dec 31 23:59:59 9999 GMT
             subject: C=US, ST=CA, L=LA, O=example Inc,
                                             OU=IoT/serialNumber=Wt1234
             key:
               algor:
                 algorithm: id-ecPublicKey (1.2.840.10045.2.1)
                 parameter: OBJECT:prime256v1 (1.2.840.10045.3.1.7)
               public_key:  (0 unused bits)
                 0000 - 04 c8 b4 21 f1 1c 25 e4-7e 3a c5 71 23 bf
                 000e - 2d 9f dc 49 4f 02 8b c3-51 cc 80 c0 3f 15
                 001c - 0b f5 0c ff 95 8d 75 41-9d 81 a6 a2 45 df
                 002a - fa e7 90 be 95 cf 75 f6-02 f9 15 26 18 f8
                 0038 - 16 a2 b2 3b 56 38 e5 9f-d9
             issuerUID: <ABSENT>
             subjectUID: <ABSENT>
             extensions:
                 object: X509v3 Basic Constraints (2.5.29.19)
                 critical: BOOL ABSENT
                 value:
                   0000 - 30
                   0002 - <SPACES/NULS>

                 object: X509v3 Subject Key Identifier (2.5.29.14)



Richardson, et al.       Expires January 4, 2020               [Page 33]

Internet-Draft             Constrained Voucher                 July 2019


                 critical: BOOL ABSENT
                 value:
                   0000 - 04 14 96 60 0d 87 16 bf-7f d0 e7 52 d0
                   000d - ac 76 07 77 ad 66 5d 02-a0

                 object: X509v3 Authority Key Identifier (2.5.29.35)
                 critical: BOOL ABSENT
                 value:
                   0000 - 30 16 80 14 68 d1 65 51-f9 51 bf c8 2a
                   000d - 43 1d 0d 9f 08 bc 2d 20-5b 11 60

                 object: X509v3 Key Usage (2.5.29.15)
                 critical: TRUE
                 value:
                   0000 - 03 02 05 a0

                 object: X509v3 Subject Alternative Name (2.5.29.17)
                 critical: BOOL ABSENT
                 value:
                   0000 - 30 21 a0 1f 06 08 2b 06-01 05 05 07 08
                   000d - 04 a0 13 30 11 06 09 2b-06 01 04 01 b4
                   001a - 3b 0a 01 04 04 01 02 03-04
           sig_alg:
             algorithm: ecdsa-with-SHA256 (1.2.840.10045.4.3.2)
             parameter: <ABSENT>
           signature:  (0 unused bits)
             0000 - 30 46 02 21 00 c0 d8 19-96 d2 50 7d 69 3f 3c
             000f - 48 ea a5 ee 94 91 bd a6-db 21 40 99 d9 81 17
             001e - c6 3b 36 13 74 cd 86 02-21 00 a7 74 98 9f 4c
             002d - 32 1a 5c f2 5d 83 2a 4d-33 6a 08 ad 67 df 20
             003c - f1 50 64 21 18 8a 0a de-6d 34 92 36
       crls:
         <EMPTY>
       signerInfos:
           version: 1
           d.issuerAndSerialNumber:
             issuer: C=US, ST=CA, O=Example Inc, OU=certification,
                                                        CN=802.1AR CA
             serialNumber: 9112578475118446130
           digestAlgorithm:
             algorithm: sha256 (2.16.840.1.101.3.4.2.1)
             parameter: <ABSENT>
           signedAttrs:
               object: contentType (1.2.840.113549.1.9.3)
               value.set:
                 OBJECT:pkcs7-data (1.2.840.113549.1.7.1)

               object: signingTime (1.2.840.113549.1.9.5)



Richardson, et al.       Expires January 4, 2020               [Page 34]

Internet-Draft             Constrained Voucher                 July 2019


               value.set:
                 UTCTIME:Jul  3 08:53:30 2019 GMT

               object: messageDigest (1.2.840.113549.1.9.4)
               value.set:
                 OCTET STRING:
                   0000 - d4 b0 5c dd c8 b4 91 28-4a 18 ca 25 9d
                   000d - be d0 60 23 cf ad a0 aa-c2 95 ac e9 3f
                   001a - 0b 4f 44 9e 25
                   0020 - <SPACES/NULS>
           signatureAlgorithm:
             algorithm: ecdsa-with-SHA256 (1.2.840.10045.4.3.2)
             parameter: <ABSENT>
           signature:
             0000 - 30 46 02 21 00 e5 e1 7f-23 c3 aa 14 9f 35 64
             000f - 1e c4 4a 0f 68 fe b0 16-3b e6 7c 06 51 af bf
             001e - 5a a0 99 59 e0 28 1f 02-21 00 b4 07 2f 7c c4
             002d - f9 26 0c 6d 47 a7 93 56-de b8 da f7 23 f0 af
             003c - 2b 59 16 cc 36 63 e7 91-89 39 df df
           unsignedAttrs:
             <EMPTY>




B.2.  CBOR-sign1 signed voucher request example

   A COSE sign1 cose object has the following structure in CDDL notation
   [RFC8152]:

   18(
   [
   / protected / h'a10127' / {
   \ alg \ 1:-8 \ EDdsa 256 \
   } / ,
   / unprotected / {
   / crv / -1: 6 \ Ed25519 \,
   / kty / 1: 1 \ OKP \,
   /key_ops / 4: 2 \ verify \
   },
   / payload / 'voucher-request binary content',
   / signature / 'voucher-request binary public signature'
   ]
   )

   The private key with length 64 that was used to generate the
   signature:




Richardson, et al.       Expires January 4, 2020               [Page 35]

Internet-Draft             Constrained Voucher                 July 2019


   10 2b 19 19 cb 2b a8 f3 3e b1 06 70 c3 d3 77 57 2f 03 ba
   be f4 1d 6f 29 f8 29 48 35 13 46 ae 62 37 71 e0 83 69 11
   83 13 14 c2 ba fd e7 c6 65 f4 3c 0d fc 01 e8 e6 75 e5 b2
   b7 e3 76 ed 97 f1 23

   The associated public key with length 32 that is used to verify the
   signature:

   84 44 de 3a b7 b5 a0 2f 20 ed e7 80 1a f0 76 d6 52 0a e5
   c8 a1 04 41 61 b2 64 57 fe 0e ae 08 4d

   The generated signature is:

   5d 2f a0 88 c5 47 fb 64 a8 0e ec 93 33 72 4c 76 f7 82 31
   33 f1 7a a8 80 4c 31 b4 b1 02 84 7b 5f 6d 2d 0d 98 ce 52
   cb 39 7b 47 cc 71 28 60 f9 30 4b 80 a1 4e 78 71 db 67 d5
   86 d2 56 02 91 a5 01

   The Cose object does not need the CBOR tag 18 when the content-format
   application/voucher-cose+cbor is specified for the payload.  The
   value of the COSE object parameters are:

   * protected: alg (1:) has value -8 for EDdsa algorithm,
   * unprotected:
            * crv (-1:) has value 6 for Ed25519 curve,
            * kty (1:) has value 1 for OKP,
            * key_ops (4:) has value 2 for verify.

   The associated CBOR diagnostic notation for the COSE object is:

       [h'a10126',
       {
        -1: 6,
        1: 1,
        4: 2
        },
       h'
       A11A000F46C2A90274323031362D31302D30375431393A33313A34325A0
       474323031362D31302D32315431393A33313A34325A01020d6d4A414441
       313233343536373839054401020D0F0A4401020D0F03F50674323031372
       D31302D30375431393A33313A34325A0c4401020D0F',
       h'
       5d2fa088c547fb64a80eec9333724c76f7823133f17aa8804c31b4b1028
       47b5f6d2d0d98ce52cb397b47cc712860f9304b80a14e7871db67d586d2
       560291a501'
       ]

   Which leads to the binary COSE object represented as hexadecimal:



Richardson, et al.       Expires January 4, 2020               [Page 36]

Internet-Draft             Constrained Voucher                 July 2019


        8443A10126A3200601010402586E
        A11A000F46C2A90274323031362D31302D30375431393A33313A34325
        A0474323031362D31302D32315431393A33313A34325A01020D6D4A41
        4441313233343536373839054401020D0F0A4401020D0F03F50674323
        031372D31302D30375431393A33313A34325A0C4401020D0F
        58405D2FA088C547FB64A80EEC9333724C76F7823133F17AA8804C
        31B4B102847B5F6D2D0D98CE52CB397B47CC712860F9304B80A14
        E7871DB67D586D2560291A501

Appendix C.  COSE examples

C.1.  Device, Registrar and MASA keys

   This first section documents the public and private keys used in the
   subsequent test vectors below.  These keys come from test code and
   are not used in any production system, and should only be used only
   to validate implementations.

C.1.1.  Device IDevID certificate

   -----BEGIN CERTIFICATE-----
   MIICFjCCAZygAwIBAgIEZaGuqTAKBggqhkjOPQQDAjBdMQ8wDQYDVQQGEwZDYW5h
   ZGExEDAOBgNVBAgMB09udGFyaW8xEjAQBgNVBAsMCVNhbmRlbG1hbjEkMCIGA1UE
   AwwbaGlnaHdheS10ZXN0LmV4YW1wbGUuY29tIENBMCAXDTE5MDUyNDE3MzYzNFoY
   DzI5OTkxMjMxMDAwMDAwWjAcMRowGAYDVQQFDBEwMC1EMC1FNS1GMi0wMC0wMjBZ
   MBMGByqGSM49AgEGCCqGSM49AwEHA0IABAOjdUOHs3zACpqHnK329DgTHNQMhB/g
   QE5BefBbE0sgcbNEm0li8RYwzrsAfYCxp9k7E1CbpielT8OWf0z+ISejgYgwgYUw
   HQYDVR0OBBYEFEWIzJaWAGQ3sLojZWRkVAgGbFatMAkGA1UdEwQCMAAwKwYDVR0R
   BCQwIqAgBgkrBgEEAYLuUgGgEwwRMDAtRDAtRTUtRjItMDAtMDIwLAYJKwYBBAGC
   7lICBB8MHWhpZ2h3YXktdGVzdC5leGFtcGxlLmNvbTo5NDQzMAoGCCqGSM49BAMC
   A2gAMGUCMQDwKygZS52YSdiBzyfS3YA0QWaQGzm4KgppkPhPp3ERaFi7F3/5zk3s
   im7M5NLf0qICMDGBx2waQrxYQhRtYYHvLqJRhik0QNQ2Wv9+99AynGs55YzAaJRm
   RLcaDcWSgpu/GA==
   -----END CERTIFICATE-----

C.1.2.  Device private key

   -----BEGIN EC PRIVATE KEY-----
   MHcCAQEEIBHNh6r8QRevRuo+tEmBJeFjQKf6bpFA/9NGoltv+9sNoAoGCCqGSM49
   AwEHoUQDQgAEA6N1Q4ezfMAKmoecrfb0OBMc1AyEH+BATkF58FsTSyBxs0SbSWLx
   FjDOuwB9gLGn2TsTUJumJ6VPw5Z/TP4hJw==
   -----END EC PRIVATE KEY-----

C.1.3.  Registrar Certificate







Richardson, et al.       Expires January 4, 2020               [Page 37]

Internet-Draft             Constrained Voucher                 July 2019


   -----BEGIN CERTIFICATE-----
   MIIB0TCCAVagAwIBAgIBAjAKBggqhkjOPQQDAzBxMRIwEAYKCZImiZPyLGQBGRYC
   Y2ExGTAXBgoJkiaJk/IsZAEZFglzYW5kZWxtYW4xQDA+BgNVBAMMNyM8U3lzdGVt
   VmFyaWFibGU6MHgwMDAwMDAwNGY5MTFhMD4gVW5zdHJ1bmcgRm91bnRhaW4gQ0Ew
   HhcNMTcxMTA3MjM0NTI4WhcNMTkxMTA3MjM0NTI4WjBDMRIwEAYKCZImiZPyLGQB
   GRYCY2ExGTAXBgoJkiaJk/IsZAEZFglzYW5kZWxtYW4xEjAQBgNVBAMMCWxvY2Fs
   aG9zdDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJZlUHI0up/l3eZf9vCBb+lI
   noEMEgc7Ro+XZCtjAI0CD1fJfJR/hIyyDmHWyYiNFbRCH9fyarfkzgX4p0zTizqj
   DTALMAkGA1UdEwQCMAAwCgYIKoZIzj0EAwMDaQAwZgIxALQMNurf8tv50lROD5DQ
   XHEOJJNW3QV2g9QEdDSk2MY+AoSrBSmGSNjh4olEOhEuLgIxAJ4nWfNw+BjbZmKi
   IiUEcTwHMhGVXaMHY/F7n39wwKcBBSOndNPqCpOELl6bq3CZqQ==
   -----END CERTIFICATE-----

C.1.4.  Registrar private key

   -----BEGIN EC PRIVATE KEY-----
   MHcCAQEEIFZodk+PC5Mu24+ra0sbOjKzan+dW5rvDAR7YuJUOC1YoAoGCCqGSM49
   AwEHoUQDQgAElmVQcjS6n+Xd5l/28IFv6UiegQwSBztGj5dkK2MAjQIPV8l8lH+E
   jLIOYdbJiI0VtEIf1/Jqt+TOBfinTNOLOg==
   -----END EC PRIVATE KEY-----

C.1.5.  MASA Certificate

   -----BEGIN CERTIFICATE-----
   MIIB3zCCAWSgAwIBAgIEG5lfVDAKBggqhkjOPQQDAjBdMQ8wDQYDVQQGEwZDYW5h
   ZGExEDAOBgNVBAgMB09udGFyaW8xEjAQBgNVBAsMCVNhbmRlbG1hbjEkMCIGA1UE
   AwwbaGlnaHdheS10ZXN0LmV4YW1wbGUuY29tIENBMB4XDTE5MDIxMjIyMjI0MVoX
   DTIxMDIxMTIyMjI0MVowXzEPMA0GA1UEBhMGQ2FuYWRhMRAwDgYDVQQIDAdPbnRh
   cmlvMRIwEAYDVQQLDAlTYW5kZWxtYW4xJjAkBgNVBAMMHWhpZ2h3YXktdGVzdC5l
   eGFtcGxlLmNvbSBNQVNBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEqgQVo0S5
   4kT4yfkbBxumdHOcHrpsqbOpMKmiMln3oB1HAW25MJV+gqi4tMFfSJ0iEwt8kszf
   WXK4rLgJS2mnpaMQMA4wDAYDVR0TAQH/BAIwADAKBggqhkjOPQQDAgNpADBmAjEA
   vVXlmw77/F6VKeOBsxU1qpMYogS+RHKyUX1NbevR1cEQOrI5e1c/xcywow7nmUa6
   AjEA9n9EfbcU+tFnatQRw0uu5vuamFb6hSEuXEhM8D/ymz+uiCCnrvly/1v5eGjP
   D0jJ
   -----END CERTIFICATE-----

C.1.6.  MASA private key

   -----BEGIN EC PRIVATE KEY-----
   MHcCAQEEIFhdd0eDdzip67kXx72K+KHGJQYJHNy8pkiLJ6CcvxMGoAoGCCqGSM49
   AwEHoUQDQgAEqgQVo0S54kT4yfkbBxumdHOcHrpsqbOpMKmiMln3oB1HAW25MJV+
   gqi4tMFfSJ0iEwt8kszfWXK4rLgJS2mnpQ==
   -----END EC PRIVATE KEY-----







Richardson, et al.       Expires January 4, 2020               [Page 38]

Internet-Draft             Constrained Voucher                 July 2019


C.2.  COSE signed requestvoucher with registrar certificate pinned

   This voucher request has been signed by the pledge, using the private
   key given above, and has been sent to the JRC over CoAPS.  This
   example uses the proximity-registrar-cert mechanism to request a
   voucher that pins the certificate of the registrar.

   This is the CBOR diagnostic format, folded to 60 characters:

   18([h'A0', {}, {1001154: {1: "proximity", 2: 1(1558719497),
   10: h'30302D44302D45352D46322D30302D3032', 7: "rIe_64PzENXdd
   32FApWcMQ", 12: h'308201E53082016BA003020102020101300A06082A
   8648CE3D040302307331123010060A0992268993F22C6401191602636131
   193017060A0992268993F22C640119160973616E64656C6D616E31423040
   06035504030C39233C53797374656D5661726961626C653A307830303030
   3536346635623730386165303E20556E737472756E6720466F756E746169
   6E204341301E170D3138313131393033313732305A170D32303131313830
   33313732305A305331123010060A0992268993F22C640119160263613119
   3017060A0992268993F22C640119160973616E64656C6D616E3122302006
   035504030C19666F756E7461696E2D746573742E6578616D706C652E636F
   6D3059301306072A8648CE3D020106082A8648CE3D03010703420004987E
   46A0D56A6F049FC278BDD34AE9339E88C10E57292A412EE26BBD104066FA
   C2212489FDC4FB165AC3787E256B7DD1777713A88A3C926C34D96A03BB4A
   ACE3A310300E300C0603551D130101FF04023000300A06082A8648CE3D04
   03020368003065023006AACD00169FC14E7C09729BBE8449E241E46FF59B
   DE30BCFD3A03BB09A4EDCAC86515C877E5C328C209E7A3015CD81D023100
   98891045999A4D6CB3442D053B16DA29906E64922D174644D9D6A80B888D
   8D493D2FCF433579C6516926DA68A2363F72'}}, h'D5E2BC22F19BDDB3B
   8D40D2C6C019A6FE5D742040B2FE70CC1286487AF21C8D3B5BBF0ECCFDAF
   97B80A96D17DF84477B08BBFA486019ED9A1329E4E7F26EBDC8'])

   This is the raw binary, encoded in base64:

   0oRBoKChGgAPRsKlAWlwcm94aW1pdHkCwRpc6CwJClEwMC1EMC1FNS1GMi0w
   MC0wMgd2ckllXzY0UHpFTlhkZDMyRkFwV2NNUQxZAekwggHlMIIBa6ADAgEC
   AgEBMAoGCCqGSM49BAMCMHMxEjAQBgoJkiaJk/IsZAEZFgJjYTEZMBcGCgmS
   JomT8ixkARkWCXNhbmRlbG1hbjFCMEAGA1UEAww5IzxTeXN0ZW1WYXJpYWJs
   ZToweDAwMDA1NjRmNWI3MDhhZTA+IFVuc3RydW5nIEZvdW50YWluIENBMB4X
   DTE4MTExOTAzMTcyMFoXDTIwMTExODAzMTcyMFowUzESMBAGCgmSJomT8ixk
   ARkWAmNhMRkwFwYKCZImiZPyLGQBGRYJc2FuZGVsbWFuMSIwIAYDVQQDDBlm
   b3VudGFpbi10ZXN0LmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0D
   AQcDQgAEmH5GoNVqbwSfwni900rpM56IwQ5XKSpBLuJrvRBAZvrCISSJ/cT7
   FlrDeH4la33Rd3cTqIo8kmw02WoDu0qs46MQMA4wDAYDVR0TAQH/BAIwADAK
   BggqhkjOPQQDAgNoADBlAjAGqs0AFp/BTnwJcpu+hEniQeRv9ZveMLz9OgO7
   CaTtyshlFch35cMowgnnowFc2B0CMQCYiRBFmZpNbLNELQU7FtopkG5kki0X
   RkTZ1qgLiI2NST0vz0M1ecZRaSbaaKI2P3JYQNXivCLxm92zuNQNLGwBmm/l
   10IECy/nDMEoZIevIcjTtbvw7M/a+XuAqW0X34RHewi7+khgGe2aEynk5/Ju
   vcg=



Richardson, et al.       Expires January 4, 2020               [Page 39]

Internet-Draft             Constrained Voucher                 July 2019


C.3.  COSE signed parboiled requestvoucher

   This voucher request has been signed by the JRC using the private key
   from Appendix C.1.4.  Contained within this voucher request is the
   pledge voucher request above.

   This is the CBOR diagnostic format, folded to 60 characters:

   18([h'A0', {}, {1001154: {1: "proximity", 2: 1(1558719499),
   10: h'30302D44302D45352D46322D30302D3032', 7: "rIe_64PzENXdd
   32FApWcMQ", 11: h'D28441A0A0A11A000F46C2A5016970726F78696D69
   747902C11A5CE82C090A5130302D44302D45352D46322D30302D30320776
   7249655F3634507A454E586464333246417057634D510C5901E9308201E5
   3082016BA003020102020101300A06082A8648CE3D040302307331123010
   060A0992268993F22C6401191602636131193017060A0992268993F22C64
   0119160973616E64656C6D616E3142304006035504030C39233C53797374
   656D5661726961626C653A3078303030303536346635623730386165303E
   20556E737472756E6720466F756E7461696E204341301E170D3138313131
   393033313732305A170D3230313131383033313732305A30533112301006
   0A0992268993F22C6401191602636131193017060A0992268993F22C6401
   19160973616E64656C6D616E3122302006035504030C19666F756E746169
   6E2D746573742E6578616D706C652E636F6D3059301306072A8648CE3D02
   0106082A8648CE3D03010703420004987E46A0D56A6F049FC278BDD34AE9
   339E88C10E57292A412EE26BBD104066FAC2212489FDC4FB165AC3787E25
   6B7DD1777713A88A3C926C34D96A03BB4AACE3A310300E300C0603551D13
   0101FF04023000300A06082A8648CE3D0403020368003065023006AACD00
   169FC14E7C09729BBE8449E241E46FF59BDE30BCFD3A03BB09A4EDCAC865
   15C877E5C328C209E7A3015CD81D02310098891045999A4D6CB3442D053B
   16DA29906E64922D174644D9D6A80B888D8D493D2FCF433579C6516926DA
   68A2363F725840D5E2BC22F19BDDB3B8D40D2C6C019A6FE5D742040B2FE7
   0CC1286487AF21C8D3B5BBF0ECCFDAF97B80A96D17DF84477B08BBFA4860
   19ED9A1329E4E7F26EBDC8'}}, h'20E084F80458B09753A4C2CE03A6806
   5E532AC46D44A6C4A9BEA399920431599728A85A8E246E29285B78B4BEEE
   7216B94EEE3CDD138BB08D4A62C4C9BB5D513'])

   This is the raw binary, encoded in base64:















Richardson, et al.       Expires January 4, 2020               [Page 40]

Internet-Draft             Constrained Voucher                 July 2019


   0oRBoKChGgAPRsKlAWlwcm94aW1pdHkCwRpc6CwLClEwMC1EMC1FNS1GMi0w
   MC0wMgd2ckllXzY0UHpFTlhkZDMyRkFwV2NNUQtZAnjShEGgoKEaAA9GwqUB
   aXByb3hpbWl0eQLBGlzoLAkKUTAwLUQwLUU1LUYyLTAwLTAyB3ZySWVfNjRQ
   ekVOWGRkMzJGQXBXY01RDFkB6TCCAeUwggFroAMCAQICAQEwCgYIKoZIzj0E
   AwIwczESMBAGCgmSJomT8ixkARkWAmNhMRkwFwYKCZImiZPyLGQBGRYJc2Fu
   ZGVsbWFuMUIwQAYDVQQDDDkjPFN5c3RlbVZhcmlhYmxlOjB4MDAwMDU2NGY1
   YjcwOGFlMD4gVW5zdHJ1bmcgRm91bnRhaW4gQ0EwHhcNMTgxMTE5MDMxNzIw
   WhcNMjAxMTE4MDMxNzIwWjBTMRIwEAYKCZImiZPyLGQBGRYCY2ExGTAXBgoJ
   kiaJk/IsZAEZFglzYW5kZWxtYW4xIjAgBgNVBAMMGWZvdW50YWluLXRlc3Qu
   ZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASYfkag1Wpv
   BJ/CeL3TSukznojBDlcpKkEu4mu9EEBm+sIhJIn9xPsWWsN4fiVrfdF3dxOo
   ijySbDTZagO7SqzjoxAwDjAMBgNVHRMBAf8EAjAAMAoGCCqGSM49BAMCA2gA
   MGUCMAaqzQAWn8FOfAlym76ESeJB5G/1m94wvP06A7sJpO3KyGUVyHflwyjC
   CeejAVzYHQIxAJiJEEWZmk1ss0QtBTsW2imQbmSSLRdGRNnWqAuIjY1JPS/P
   QzV5xlFpJtpoojY/clhA1eK8IvGb3bO41A0sbAGab+XXQgQLL+cMwShkh68h
   yNO1u/Dsz9r5e4CpbRffhEd7CLv6SGAZ7ZoTKeTn8m69yFhAIOCE+ARYsJdT
   pMLOA6aAZeUyrEbUSmxKm+o5mSBDFZlyioWo4kbikoW3i0vu5yFrlO7jzdE4
   uwjUpixMm7XVEw==

C.4.  COSE signed voucher

   The resulting voucher is created by the MASA and returned via the JRC
   to the Pledge.  It is signed by the MASA's private key Appendix C.1.6
   and can be verified by the pledge using the MASA's publie key.

   This is the CBOR diagnostic format, folded to 60 characters:

   18([h'A0', {}, {1001100: {5: "logged", 6: 1(1558719500), 14:
    "00-D0-E5-F2-00-02", 11: "rIe_64PzENXdd32FApWcMQ", 12: "MII
   B5TCCAWugAwIBAgIBATAKBggqhkjOPQQDAjBzMRIwEAYKCZImiZPyLGQBGRY
   CY2ExGTAXBgoJkiaJk/IsZAEZFglzYW5kZWxtYW4xQjBABgNVBAMMOSM8U3l
   zdGVtVmFyaWFibGU6MHgwMDAwNTY0ZjViNzA4YWUwPiBVbnN0cnVuZyBGb3V
   udGFpbiBDQTAeFw0xODExMTkwMzE3MjBaFw0yMDExMTgwMzE3MjBaMFMxEjA
   QBgoJkiaJk/IsZAEZFgJjYTEZMBcGCgmSJomT8ixkARkWCXNhbmRlbG1hbjE
   iMCAGA1UEAwwZZm91bnRhaW4tdGVzdC5leGFtcGxlLmNvbTBZMBMGByqGSM4
   9AgEGCCqGSM49AwEHA0IABJh+RqDVam8En8J4vdNK6TOeiMEOVykqQS7ia70
   QQGb6wiEkif3E+xZaw3h+JWt90Xd3E6iKPJJsNNlqA7tKrOOjEDAOMAwGA1U
   dEwEB/wQCMAAwCgYIKoZIzj0EAwIDaAAwZQIwBqrNABafwU58CXKbvoRJ4kH
   kb/Wb3jC8/ToDuwmk7crIZRXId+XDKMIJ56MBXNgdAjEAmIkQRZmaTWyzRC0
   FOxbaKZBuZJItF0ZE2daoC4iNjUk9L89DNXnGUWkm2miiNj9y"}}, h'AFB7
   E330EC20D230CB2398241757493E6E3DF38255110E9612779699AD5627BD
   DBB0B846252E69723B54B5F3F3D1378B7D1DBC84318FE1EE52AC0ACE9ED7
   DAC8'])

   This is the raw binary, encoded in base64:






Richardson, et al.       Expires January 4, 2020               [Page 41]

Internet-Draft             Constrained Voucher                 July 2019


   0oRBoKChGgAPRoylBWZsb2dnZWQGwRpc6CwMDnEwMC1EMC1FNS1GMi0wMC0w
   Mgt2ckllXzY0UHpFTlhkZDMyRkFwV2NNUQx5AoxNSUlCNVRDQ0FXdWdBd0lC
   QWdJQkFUQUtCZ2dxaGtqT1BRUURBakJ6TVJJd0VBWUtDWkltaVpQeUxHUUJH
   UllDWTJFeEdUQVhCZ29Ka2lhSmsvSXNaQUVaRmdsellXNWtaV3h0WVc0eFFq
   QkFCZ05WQkFNTU9TTThVM2x6ZEdWdFZtRnlhV0ZpYkdVNk1IZ3dNREF3TlRZ
   MFpqVmlOekE0WVdVd1BpQlZibk4wY25WdVp5QkdiM1Z1ZEdGcGJpQkRRVEFl
   RncweE9ERXhNVGt3TXpFM01qQmFGdzB5TURFeE1UZ3dNekUzTWpCYU1GTXhF
   akFRQmdvSmtpYUprL0lzWkFFWkZnSmpZVEVaTUJjR0NnbVNKb21UOGl4a0FS
   a1dDWE5oYm1SbGJHMWhiakVpTUNBR0ExVUVBd3daWm05MWJuUmhhVzR0ZEdW
   emRDNWxlR0Z0Y0d4bExtTnZiVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5
   QXdFSEEwSUFCSmgrUnFEVmFtOEVuOEo0dmROSzZUT2VpTUVPVnlrcVFTN2lh
   NzBRUUdiNndpRWtpZjNFK3haYXczaCtKV3Q5MFhkM0U2aUtQSkpzTk5scUE3
   dEtyT09qRURBT01Bd0dBMVVkRXdFQi93UUNNQUF3Q2dZSUtvWkl6ajBFQXdJ
   RGFBQXdaUUl3QnFyTkFCYWZ3VTU4Q1hLYnZvUko0a0hrYi9XYjNqQzgvVG9E
   dXdtazdjcklaUlhJZCtYREtNSUo1Nk1CWE5nZEFqRUFtSWtRUlptYVRXeXpS
   QzBGT3hiYUtaQnVaSkl0RjBaRTJkYW9DNGlOalVrOUw4OUROWG5HVVdrbTJt
   aWlOajl5WECvt+Mw7CDSMMsjmCQXV0k+bj3zglURDpYSd5aZrVYnvduwuEYl
   LmlyO1S18/PRN4t9HbyEMY/h7lKsCs6e19rI

Authors' Addresses

   Michael Richardson
   Sandelman Software Works

   Email: mcr+ietf@sandelman.ca


   Peter van der Stok
   vanderstok consultancy

   Email: consultancy@vanderstok.org


   Panos Kampanakis
   Cisco Systems

   Email: pkampana@cisco.com














Richardson, et al.       Expires January 4, 2020               [Page 42]
