<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC7049 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml">
<!ENTITY I-D.ietf-core-yang-cbor SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-yang-cbor.xml">
<!ENTITY I-D.ietf-core-sid SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-sid.xml">
<!ENTITY RFC7950 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7950.xml">
<!ENTITY RFC5652 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5652.xml">
<!ENTITY RFC8152 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8152.xml">
<!ENTITY RFC8366 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8366.xml">
<!ENTITY RFC3688 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml">
<!ENTITY RFC6020 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml">
<!ENTITY I-D.ietf-anima-bootstrapping-keyinfra SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-bootstrapping-keyinfra.xml">
<!ENTITY I-D.ietf-ace-coap-est SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ace-coap-est.xml">
<!ENTITY I-D.selander-ace-ake-authz SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.selander-ace-ake-authz.xml">
<!ENTITY I-D.ietf-netmod-yang-tree-diagrams SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-netmod-yang-tree-diagrams.xml">
<!ENTITY RFC6690 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6690.xml">
<!ENTITY RFC7030 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7030.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-constrained-voucher-08" category="std">

  <front>
    <title abbrev="Constrained Voucher">Constrained Voucher Artifacts for Bootstrapping Protocols</title>

    <author initials="M." surname="Richardson" fullname="Michael Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
      </address>
    </author>
    <author initials="P." surname="van der Stok" fullname="Peter van der Stok">
      <organization>vanderstok consultancy</organization>
      <address>
        <email>consultancy@vanderstok.org</email>
      </address>
    </author>
    <author initials="P." surname="Kampanakis" fullname="Panos Kampanakis">
      <organization>Cisco Systems</organization>
      <address>
        <email>pkampana@cisco.com</email>
      </address>
    </author>

    <date year="2020" month="October" day="06"/>

    <area>Internet</area>
    <workgroup>anima Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a strategy to securely assign a pledge to an
owner, using an artifact signed, directly or indirectly, by the
pledge’s manufacturer.  This artifact is known as a “voucher”.</t>

<t>This document builds upon the work in <xref target="RFC8366"/>, encoding
the resulting artifact in CBOR.  Use with two signature technologies are
described.</t>

<t>Additionally, this document explains how constrained vouchers may be
transported as an extension to the <xref target="I-D.ietf-ace-coap-est"/> protocol.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Enrollment of new nodes into constrained networks with constrained nodes
present unique challenges.</t>

<t>There are bandwidth and code space issues to contend.
A solution such as <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> may be too large in terms of
code space or bandwidth required.</t>

<t>This document defines a constrained version of <xref target="RFC8366"/>.
Rather than serializing the YANG definition in JSON, it is serialized into CBOR (<xref target="RFC7049"/>).</t>

<t>This document follows a similar, but not identical structure as <xref target="RFC8366"/> and supplements the brski part to <xref target="I-D.ietf-ace-coap-est"/>.</t>

<t>There are three constrained situations described in this document:
1. CMS signed CBOR encoded vouchers transported using CoAP, protected by DTLS (coaps).
2. COSE signed CBOR encoded vouchers transported using CoAP, protected by EDHOC or DTLS.
3. COSE signed CBOR encoded vouchers, integrated into the key exchange as described by <xref target="I-D.selander-ace-ake-authz"/></t>

<t>Additional sections have been added concerning:</t>

<t><list style="numbers">
  <t>Addition of voucher-request specification as defined in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>,</t>
  <t>Addition to <xref target="I-D.ietf-ace-coap-est"/> of voucher transport requests over CoAP.</t>
</list></t>

<t>The CBOR definitions for this constrained voucher format are defined using the mechanism describe in <xref target="I-D.ietf-core-yang-cbor"/> using the SID mechanism explained in <xref target="I-D.ietf-core-sid"/>.
As the tooling to convert YANG documents into an list of SID keys is still in its infancy, the table of SID values presented here should be considered normative rather than the
output of the pyang tool.</t>

<t>Two methods of signing the resulting CBOR object are described in this
document:</t>

<t><list style="numbers">
  <t>One is CMS <xref target="RFC5652"/>.</t>
  <t>The other is COSE_Sign1 <xref target="RFC8152"/> objects.</t>
</list></t>

</section>
<section anchor="Terminology" title="Terminology">

<t>The following terms are defined in <xref target="RFC8366"/>, and are used
identically as in that document: artifact, imprint, domain, Join
Registrar/Coordinator (JRC), Manufacturer Authorized Signing Authority
(MASA), pledge, Trust of First Use (TOFU), and Voucher.</t>

</section>
<section anchor="reqlang" title="Requirements Language">

<t>{::boilerplate bcp14}</t>

</section>
<section anchor="survey-of-voucher-types" title="Survey of Voucher Types">

<t><xref target="RFC8366"/> provides for vouchers that assert proximity, that authenticate the registrar  and that include different amounts of anti-replay protection.</t>

<t>This document does not make any extensions to the types of vouchers.</t>

<t>Time based vouchers are included in this definition, but given that constrained devices  are extremely unlikely to have accurate time, their use is very unlikely.
Most users of these constrained vouchers will be online and will use live nonces to provide anti-replay protection.</t>

<t><xref target="RFC8366"/> defined only the voucher artifact, and not the Voucher Request artifact, which was defined in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>This document defines both a constrained voucher and a constrained voucher-request.
They are presented in the order “voucher-request”, followed by a “voucher” response as this is the time order that they occur.</t>

<t>This document defines both CMS-signed voucher requests and responses, and COSE signed voucher requests and responses.
The use of CMS signatures implies the use of PKIX format certificates.
The pinned-domain-cert present in a voucher, is the certificate of the Registrar.</t>

<t>The constrained voucher and constrained voucher request MUST be signed.</t>

<t>The use of the two signing formats permit the use of both PKIX format certificates, and raw public keys (RPK).</t>

<t>When RPKs are used, the voucher produced by the MASA pins the raw public key of the Registrar: the pinned-domain-subject-public-key-info in a voucher, is the raw public
key of the Registrar.
This is described in the YANG definition for the constrained voucher.</t>

</section>
<section anchor="discovery-and-uri" title="Discovery and URI">

<t>This section describes the BRSKI extensions to EST-coaps <xref target="I-D.ietf-ace-coap-est"/> to transport the voucher between registrar, proxy and pledge over CoAP.
The extensions are targeted to low-resource networks with small packets.
Saving header space is important and the EST-coaps URI is shorter than the EST URI.</t>

<t>The presence and location of (path to) the management data are discovered by sending a GET request to “/.well-known/core” including a resource type (RT) parameter with the value “ace.est” <xref target="RFC6690"/>.
Upon success, the return payload will contain the root resource of the EST resources.
It is up to the implementation to choose its root resource; throughout this document the
example root resource /est is used.</t>

<t>The EST-coaps server URIs differ from the EST URI by replacing the scheme https by coaps and by specifying shorter resource path names:</t>

<figure><artwork><![CDATA[
  coaps://www.example.com/est/short-name
]]></artwork></figure>

<t>Figure 5 in section 3.2.2 of <xref target="RFC7030"/> enumerates the operations and corresponding paths which are supported by EST.
<xref target="est-uri"/> provides the mapping from the BRSKI extension URI path to the EST-coaps URI path.</t>

<texttable title="BRSKI path to EST-coaps path" anchor="est-uri">
      <ttcol align='left'>BRSKI</ttcol>
      <ttcol align='left'>EST-coaps</ttcol>
      <c>/requestvoucher</c>
      <c>/rv</c>
      <c>/voucher_status</c>
      <c>/vs</c>
      <c>/enrollstatus</c>
      <c>/es</c>
      <c>/requestauditlog</c>
      <c>/ra</c>
</texttable>

<t>/requestvoucher, /voucher_status and /enrollstatus are needed between
pledge and Registrar.</t>

<t>When discovering the root path for the EST resources, the server MAY return
the full resource paths and the used content types. This is useful when
multiple content types are specified for EST-coaps server. For example, the
following more complete response is possible.</t>

<figure><artwork><![CDATA[
  REQ: GET /.well-known/core?rt=ace.est*

  RES: 2.05 Content
  </est>; rt="ace.est"
  </est/rv>; rt="ace.est/rv";ct=TBD2 TBD3
  </est/vs>; rt="ace.est/vs";ct=50 60
  </est/es>; rt="ace.est/es";ct=50 60
  </est/ra>; rt="ace.est/ra";ct=TBD2 TBD3
]]></artwork></figure>

<t>The return of the content-types allows the client to choose the most appropriate one from multiple content types.</t>

<t>ct=TBD2 stands for Content-Format “application/voucher-cms+cbor,
and ct=TBD3 stands for Content-Format “application/voucher-cose+cbor”.</t>

<t>Content-Formats TBD2 and TBD3 are defined in this document.</t>

<t>The Content-Format (“application/json”) 50 MAY be supported.
Content-Formats (“application/cbor”) 60, TBD2, and TBD3 MUST be supported.</t>

</section>
<section anchor="artifacts" title="Artifacts">

<t>This section describes the abstract (tree) definition as explained
in <xref target="I-D.ietf-netmod-yang-tree-diagrams"/> first.  This provides a high-level
view of the contents of each artifact.</t>

<t>Then the assigned SID values are presented. These have been assigned using
the rules in <xref target="I-D.ietf-core-sid"/>, with an allocation that was made
via the http://comi.space service.</t>

<section anchor="voucher-request-artifact" title="Voucher Request artifact">

<section anchor="tree-diagram" title="Tree Diagram">

<t>The following diagram is largely a duplicate of the contents of <xref target="RFC8366"/>,
with the addition of proximity-registrar-subject-public-key-info,
proximity-registrar-cert, and prior-signed-voucher-request.</t>

<t>prior-signed-voucher-request is only used between the Registrar and the MASA.
proximity-registrar-subject-public-key-info replaces proximity-registrar-cert
for the extremely constrained cases.</t>

<figure><artwork><![CDATA[
module: ietf-constrained-voucher-request

  grouping voucher-request-constrained-grouping
    +-- voucher
       +-- created-on?
       |       yang:date-and-time
       +-- expires-on?
       |       yang:date-and-time
       +-- assertion
       |       enumeration
       +-- serial-number
       |       string
       +-- idevid-issuer?
       |       binary
       +-- pinned-domain-cert?
       |       binary
       +-- domain-cert-revocation-checks?
       |       boolean
       +-- nonce?
       |       binary
       +-- last-renewal-date?
       |       yang:date-and-time
       +-- proximity-registrar-subject-public-key-info?
       |       binary
       +-- proximity-registrar-sha256-of-subject-public-key-info?
       |       binary
       +-- proximity-registrar-cert?
       |       binary
       +-- prior-signed-voucher-request?
               binary
]]></artwork></figure>

</section>
<section anchor="sid-values" title="SID values">

<figure><artwork><![CDATA[
 SID  Assigned to: 
----- ------------------------------------------------------------------
 2500 ietf-constrained-voucher-request
 2501 /ietf-constrained-voucher-request:voucher
 2502 /ietf-constrained-voucher-request:voucher/assertion
 2503 /ietf-constrained-voucher-request:voucher/created-on
 2504 /ietf-constrained-voucher-request:voucher
                                        /domain-cert-revocation-checks
 2505 /ietf-constrained-voucher-request:voucher/expires-on
 2506 /ietf-constrained-voucher-request:voucher/idevid-issuer
 2507 /ietf-constrained-voucher-request:voucher/last-renewal-date
 2508 /ietf-constrained-voucher-request:voucher/nonce
 2509 /ietf-constrained-voucher-request:voucher/pinned-domain-cert
 2510 /ietf-constrained-voucher-request:voucher
                                          /prior-signed-voucher-request
 2511 /ietf-constrained-voucher-request:voucher/proximity-registrar-cert
 2512 /ietf-constrained-voucher-request:voucher
                 /proximity-registrar-sha256-of-subject-public-key-info
 2513 /ietf-constrained-voucher-request:voucher
                           /proximity-registrar-subject-public-key-info
 2514 /ietf-constrained-voucher-request:voucher/serial-number 

]]></artwork></figure>

</section>
<section anchor="yang-module" title="YANG Module">

<t>In the constrained-voucher-request YANG module, the voucher is “augmented” within the “used” grouping statement such that one continuous set of SID values is generated for the constrained-voucher-request module name, all voucher attributes, and the constrained-voucher-request attribute. Two attributes of the voucher are “refined” to be optional.</t>

<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-constrained-voucher-request@2019-08-01.yang"
module ietf-constrained-voucher-request {
  yang-version 1.1;

  namespace
    "urn:ietf:params:xml:ns:yang:ietf-constrained-voucher-request";
  prefix "constrained";

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher {
    prefix "v";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Michael Richardson
              <mailto:mcr+ietf@sandelman.ca>
    Author:   Peter van der Stok
              <mailto: consultancy@vanderstok.org>
    Author:   Panos Kampanakis
              <mailto: pkampana@cisco.com>";
  description
   "This module defines the format for a voucher request,
    which is produced by a pledge to request a voucher.
    The voucher-request is sent to the potential owner's
    Registrar, which in turn sends the voucher request to
    the manufacturer or delegate (MASA).

    A voucher is then returned to the pledge, binding the
    pledge to the owner.  This is a constrained version of the
    voucher-request present in
    draft-ietf-anima-bootstrap-keyinfra.txt.

    This version provides a very restricted subset appropriate
    for very constrained devices.
    In particular, it assumes that nonce-ful operation is
    always required, that expiration dates are rather weak, as no
    clocks can be assumed, and that the Registrar is identified
    by a pinned Raw Public Key.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
    'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY',
    and 'OPTIONAL' in the module text are to be interpreted as
    described in RFC 2119.";

  revision "2019-08-01" {
    description
     "Initial version";
    reference
     "RFC XXXX: Voucher Profile for Constrained Devices";
  }

  rc:yang-data voucher-request-constrained-artifact {
    // YANG data template for a voucher.
    uses voucher-request-constrained-grouping;
  }

  // Grouping defined for future usage
  grouping voucher-request-constrained-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";

    uses v:voucher-artifact-grouping {

      refine voucher/created-on {
          mandatory  false;
      }

      refine voucher/pinned-domain-cert {
          mandatory  false;
      }


      augment "voucher" {
        description "Base the constrained voucher-request upon the
          regular one";

        leaf proximity-registrar-subject-public-key-info {
          type binary;
          description
            "The proximity-registrar-subject-public-key-info replaces
 	     the proximit-registrar-cert in constrained uses of
             the voucher-request.
             The proximity-registrar-subject-public-key-info is the
             Raw Public Key of the Registrar. This field is encoded
             as specified in RFC7250, section 3.
             The ECDSA algorithm MUST be supported.
             The EdDSA algorithm as specified in
             draft-ietf-tls-rfc4492bis-17 SHOULD be supported.
             Support for the DSA algorithm is not recommended.
             Support for the RSA algorithm is MAY, but due to 
             size is discouraged.";
        }

        leaf proximity-registrar-sha256-of-subject-public-key-info {
          type binary;
          description
            "The proximity-registrar-sha256-of-subject-public-key-info
             is an alternative to 
             proximity-registrar-subject-public-key-info.
             and pinned-domain-cert.  In many cases the
             public key of the domain has already been transmitted
             during the key agreement protocol, and it is wasteful
             to transmit the public key another two times.
             The use of a hash of public key info, at 32-bytes for
             sha256 is a significant savings compared to an RSA
             public key, but is only a minor savings compared to
             a 256-bit ECDSA public-key.
             Algorithm agility is provided by extensions to this
             specifications which define new leaf for other hash
             types.";
        }

        leaf proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure as specified by
             RFC 5280,
             Section 4 encoded using the ASN.1 distinguished encoding
             rules (DER), as specified in ITU-T X.690.

             The first certificate in the Registrar TLS server
             certificate_list sequence  (see [RFC5246]) presented by
             the Registrar to the Pledge. This MUST be populated in a
             Pledge's voucher request if the proximity assertion is
             populated.";
        }

        leaf prior-signed-voucher-request {
          type binary;
          description
            "If it is necessary to change a voucher, or re-sign and
             forward a voucher that was previously provided along a
             protocol path, then the previously signed voucher
             SHOULD be included in this field.

             For example, a pledge might sign a proximity voucher,
             which an intermediate registrar then re-signs to
             make its own proximity assertion.  This is a simple
             mechanism for a chain of trusted parties to change a
             voucher, while maintaining the prior signature
             information.

             The pledge MUST ignore all prior voucher information
             when accepting a voucher for imprinting. Other
             parties MAY examine the prior signed voucher
             information for the purposes of policy decisions.
             For example this information could be useful to a
             MASA to determine that both pledge and registrar
             agree on proximity assertions. The MASA SHOULD
             remove all prior-signed-voucher-request information when
             signing a voucher for imprinting so as to minimize the
             final voucher size.";
        }
      }
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
<section anchor="example2" title="Example voucher request artifact">

<t>Below is a CBOR serialization of the constrained-voucher-request is shown in diagnostic CBOR notation. The enum value of the assertion field is calculated to be zero by following the algorithm described in section 9.6.4.2 of <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
{
  2501: {
    +2 : "2016-10-07T19:31:42Z", / SID= 2503, created-on /
    +4 : "2016-10-21T19:31:42Z", / SID= 2505, expires-on /
    +1 : 2,                      / SID= 2502, assertion /
                                 /                "proximity" /
    +13: "JADA123456789",        / SID= 2514, serial-number /
    +5 : h'01020D0F',            / SID= 2506, idevid-issuer /
    +10: h'cert.der',            / SID=2511, proximity-registrar-cert/
    +3 : true,                   / SID= 2504, domain-cert
                                                  -revocation-checks/
    +6 : "2017-10-07T19:31:42Z", / SID= 2507, last-renewal-date /
    +12: h'key_info'             / SID= 2513, proximity-registrar
                                         -subject-public-key-info /
  }
}



]]></artwork></figure>

</section>
</section>
<section anchor="voucher-artifact" title="Voucher artifact">

<t>The voucher’s primary purpose is to securely assign a pledge to an
owner.  The voucher informs the pledge which entity it should
consider to be its owner.</t>

<t>This document defines a voucher that is a CBOR encoded instance of
the YANG module defined in Section 5.3 that has been signed with CMS
or with COSE.</t>

<section anchor="tree-diagram-1" title="Tree Diagram">

<t>The following diagram is largely a duplicate of the contents of <xref target="RFC8366"/>,
with only the addition of pinned-domain-subject-public-key-info.</t>

<figure><artwork><![CDATA[
module: ietf-constrained-voucher

  grouping voucher-constrained-grouping
    +-- voucher
       +-- created-on?
       |       yang:date-and-time
       +-- expires-on?
       |       yang:date-and-time
       +-- assertion                                   enumeration
       +-- serial-number                               string
       +-- idevid-issuer?                              binary
       +-- pinned-domain-cert?                         binary
       +-- domain-cert-revocation-checks?              boolean
       +-- nonce?                                      binary
       +-- last-renewal-date?
       |       yang:date-and-time
       +-- pinned-domain-subject-public-key-info?      binary
       +-- pinned-sha256-of-subject-public-key-info?   binary
]]></artwork></figure>

</section>
<section anchor="sid-values-1" title="SID values">

<figure><artwork><![CDATA[
 SID   Assigned to:
----- ------------------------------------------------------------------
 2450 ietf-constrained-voucher 
 2451 /ietf-constrained-voucher:voucher 
 2452 /ietf-constrained-voucher:voucher/assertion
 2453 /ietf-constrained-voucher:voucher/created-on 
 2454 /ietf-constrained-voucher:voucher/domain-cert-revocation-checks 
 2455 /ietf-constrained-voucher:voucher/expires-on
 2456 /ietf-constrained-voucher:voucher/idevid-issuer
 2457 /ietf-constrained-voucher:voucher/last-renewal-date
 2458 /ietf-constrained-voucher:voucher/nonce
 2459 /ietf-constrained-voucher:voucher/pinned-domain-cert
 2460 /ietf-constrained-voucher:voucher
                            /pinned-domain-subject-public-key-info 
 2461 /ietf-constrained-voucher:voucher
                            /pinned-sha256-of-subject-public-key-info
 2462 /ietf-constrained-voucher:voucher/serial-number 

]]></artwork></figure>

</section>
<section anchor="yang-module-1" title="YANG Module">

<t>In the constrained-voucher YANG module, the voucher is “augmented” within the “used” grouping statement such that one continuous set of SID values is generated for the constrained-voucher module name, all voucher attributes, and the constrained-voucher attribute.
Two attributes of the voucher are “refined” to be optional.</t>

<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-constrained-voucher@2019-08-01.yang"
module ietf-constrained-voucher {
  yang-version 1.1;

  namespace
    "urn:ietf:params:xml:ns:yang:ietf-constrained-voucher";
  prefix "constrained";

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher {
    prefix "v";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Michael Richardson
              <mailto:mcr+ietf@sandelman.ca>
    Author:   Peter van der Stok
              <mailto: consultancy@vanderstok.org>
    Author:   Panos Kampanakis
              <mailto: pkampana@cisco.com>";
description
  "This module defines the format for a voucher, which is produced
   by a pledge's manufacturer or delegate (MASA) to securely assign
   one or more pledges to an 'owner', so that the pledges may
   establis a secure connection to the owner's network
   infrastructure.

   This version provides a very restricted subset appropriate
   for very constrained devices.
   In particular, it assumes that nonce-ful operation is
   always required, that expiration dates are rather weak, as no
   clocks can be assumed, and that the Registrar is identified
   by a pinned Raw Public Key.

   The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
   'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY',
   and 'OPTIONAL' in the module text are to be interpreted as
   described in RFC 2119.";

  revision "2019-08-01" {
    description
     "Initial version";
    reference
     "RFC XXXX: Voucher Profile for Constrained Devices";
  }

  rc:yang-data voucher-constrained-artifact {
    // YANG data template for a voucher.
    uses voucher-constrained-grouping;
  }

  // Grouping defined for future usage
  grouping voucher-constrained-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";

    uses v:voucher-artifact-grouping {

      refine voucher/created-on {
          mandatory  false;
      }

      refine voucher/pinned-domain-cert {
          mandatory  false;
      }

      augment "voucher" {
        description "Base the constrained voucher
                                   upon the regular one";
        leaf pinned-domain-subject-public-key-info {
          type binary;
          description
            "The pinned-domain-subject-public-key-info replaces the
             pinned-domain-cert in constrained uses of
             the voucher. The pinned-domain-subject-public-key-info
             is the Raw Public Key of the Registrar.
             This field is encoded as specified in RFC7250,
             section 3.
             The ECDSA algorithm MUST be supported.
             The EdDSA algorithm as specified in
             draft-ietf-tls-rfc4492bis-17 SHOULD be supported.
             Support for the DSA algorithm is not recommended.
             Support for the RSA algorithm is a MAY.";
        }

        leaf pinned-sha256-of-subject-public-key-info {
          type binary;
          description
            "The pinned-hash-subject-public-key-info is a second
             alternative to pinned-domain-cert.  In many cases the
             public key of the domain has already been transmitted
             during the key agreement process, and it is wasteful
             to transmit the public key another two times.
             The use of a hash of public key info, at 32-bytes for
             sha256 is a significant savings compared to an RSA
             public key, but is only a minor savings compared to
             a 256-bit ECDSA public-key.
             Algorithm agility is provided by extensions to this
             specifications which define new leaf for other hash types";
        }
      }
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
<section anchor="example1" title="Example voucher artifacts">

<t>Below a the CBOR serialization of the constrained-voucher is shown in diagnostic CBOR notation.
The enum value of the assertion field is calculated to be zero by following the algorithm described in section 9.6.4.2 of <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
{
  2451: {
    +2 : "2016-10-07T19:31:42Z", / SID = 2453, created-on /
    +4 : "2016-10-21T19:31:42Z", / SID = 2455, expires-on /
    +1 : 0,                      / SID = 2452, assertion /
                                 /                "verified" /
    +11: "JADA123456789",        / SID = 2462, serial-number /
    +5 : h'01020D0F',            / SID = 2456, idevid-issuer /
    +8 : h'cert.der',            / SID = 2459, pinned-domain-cert/
    +3 : true,                   / SID = 2454, domain-cert
                                                 -revocation-checks /
    +6 : "2017-10-07T19:31:42Z", / SID = 2457, last-renewal-date /
    +9 : h'key-info'             / SID = 2460, pinned-domain
                                           -subject-public-key-info /
  }
}



]]></artwork></figure>

<t>The signing of the example is shown in <xref target="cmssign"/>.</t>

</section>
</section>
<section anchor="signing-voucher-and-voucher-request-artifacts" title="Signing voucher and voucher-request artifacts">

<section anchor="cms-signing" title="CMS signing">

<t>The IETF evolution of PKCS#7 is CMS <xref target="RFC5652"/>.
The CMS signed voucher is much like the equivalent voucher defined in <xref target="RFC8366"/>.</t>

<t>A different eContentType of TBD1 is used to indicate that the contents are in a different format than in <xref target="RFC8366"/>.
The id-ct-animaJSONVoucher allocated by <xref target="RFC8366"/> indicates a voucher and voucher-request encoded in JSON, and the new value TBD1 indicates that the voucher and voucher-request are encoded in CBOR.</t>

<t>The ContentInfo structure contains a payload consisting of the CBOR encoded voucher.
The <xref target="I-D.ietf-core-yang-cbor"/> use of delta encoding creates a canonical ordering for the keys on the wire.
This canonical ordering is not important as there is no expectation that the content will be reproduced during the validation process.</t>

<t>Normally the recipient is the pledge and the signer is the MASA.</t>

<t><xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> supports both signed and unsigned voucher requests from the pledge to the JRC.
In this specification, voucher-request artifact MUST be signed from the pledge to the registrar.
From the JRC to the MASA, the voucher-request artifact MUST be signed by the domain owner key which is requesting ownership.</t>

<t>The considerations of <xref target="RFC5652"/> section 5.1, concerning validating CMS objects which are really PKCS7 objects (cmsVersion=1) applies.</t>

<t>The CMS structure SHOULD also contain all the certificates leading up to and including the signer’s trust anchor certificate known to the recipient.
The inclusion of the trust anchor is unusual in many applications, but without it third parties can not accurately audit the transaction.</t>

<t>The CMS structure MAY also contain revocation objects for any intermediate certificate authorities (CAs) between the voucher-issuer and the trust anchor known to the recipient.
However, the use of CRLs and other validity mechanisms is discouraged, as the pledge is unlikely to be able to perform online checks, and is unlikely to have a trusted clock source.
As described below, the use of short-lived vouchers and/or pledge provided nonce provides a freshness guarantee.</t>

<figure><artwork><![CDATA[
[EDnote: compulsory signing algorithms are ......]
]]></artwork></figure>

<t>In <xref target="cmssign"/> an example for the CMS signing of the voucher-request is shown.</t>

</section>
<section anchor="cose-signing" title="COSE signing">

<t>The COSE-Sign1 structure is discussed in section 4.2 of <xref target="RFC8152"/>.
The CBOR object that carries the body, the signature, and the information about the body  and signature is called the COSE_Sign1 structure.
It is used when only one signature is used on the body.
Support for ECDSA with sha256 (secp256k1 and prime256v1 curves) is compulsory.</t>

<t>The supported COSE-sign1 object stucture is shown in <xref target="fig-cose"/>.</t>

<figure title="cose-sign1 example" align="left" anchor="fig-cose"><artwork><![CDATA[
COSE_Sign1(
  [
    h'A101382E',        # { "alg": EC256K1 }
    {
      “kid” : h'789'  # hash256(public key)
    },
    h'123', #voucher-request binary content
    h'456', #voucher-request binary public signature
  ]
)
]]></artwork></figure>

<t>The <xref target="COSE-registry"/> specifies the integers that replace the strings and the mnemonics in <xref target="fig-cose"/>.
The value of the “kid” parameter is an example value.
Usually a hash of the public key is used to idientify the public key.
The public key and its hash are derived from the relevant certificate (Pledge, Registrar or MASA certificate).</t>

<t>In <xref target="cosesign"/> a binary cose-sign1 object is shown based on the voucher-request example of <xref target="example2"/>.</t>

</section>
</section>
</section>
<section anchor="design-considerations" title="Design Considerations">

<t>The design considerations for the CBOR encoding of vouchers is much the same as for <xref target="RFC8366"/>.</t>

<t>One key difference is that the names of the leaves in the YANG does not have a material effect on the size of the resulting CBOR, as the SID translation process assigns integers to the names.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<section anchor="clock-sensitivity" title="Clock Sensitivity">

<t>TBD.</t>

</section>
<section anchor="protect-voucher-pki-in-hsm" title="Protect Voucher PKI in HSM">

<t>TBD.</t>

</section>
<section anchor="test-domain-certificate-validity-when-signing" title="Test Domain Certificate Validity when Signing">

<t>TBD.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="resource-type-registry" title="Resource Type Registry">

<t>Additions to the sub-registry “CoAP Resource Type”, within the “CoRE parameters” registry are specified below.
These can be registered  either in the Expert Review range (0-255) or IETF Review range (256-9999).</t>

<figure><artwork><![CDATA[
 ace.rt.rv needs registration with IANA
 ace.rt.vs needs registration with IANA
 ace.rt.es needs registration with IANA
 ace.rt.ra needs registration with IANA
]]></artwork></figure>

</section>
<section anchor="the-ietf-xml-registry" title="The IETF XML Registry">

<t>This document registers two URIs in the IETF XML registry <xref target="RFC3688"/>.
Following the format in <xref target="RFC3688"/>, the following registration is requested:</t>

<figure><artwork><![CDATA[
  URI: urn:ietf:params:xml:ns:yang:ietf-constrained-voucher
  Registrant Contact: The ANIMA WG of the IETF.
  XML: N/A, the requested URI is an XML namespace.

  URI: urn:ietf:params:xml:ns:yang:ietf-constrained-voucher-request
  Registrant Contact: The ANIMA WG of the IETF.
  XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

</section>
<section anchor="the-yang-module-names-registry" title="The YANG Module Names Registry">

<t>This document registers two YANG modules in the YANG Module Names registry <xref target="RFC6020"/>.  Following the format defined in <xref target="RFC6020"/>, the the following registration is requested:</t>

<figure><artwork><![CDATA[
  name:         ietf-constrained-voucher
  namespace:    urn:ietf:params:xml:ns:yang:ietf-constrained-voucher
  prefix:       vch
  reference:    RFC XXXX

  name:         ietf-constrained-voucher-request
  namespace:    urn:ietf:params:xml:ns:yang:ietf-constrained
                                           -voucher-request
  prefix:       vch
  reference:    RFC XXXX
]]></artwork></figure>

</section>
<section anchor="the-rfc-sid-range-assignment-sub-registry" title="The RFC SID range assignment sub-registry">

<figure><artwork><![CDATA[
------------ ------ --------------------------- ------------
Entry-point | Size | Module name               | RFC Number
------------ ------ --------------------------- ------------
2450          50     ietf-constrained-voucher    [ThisRFC]
2500          50     ietf-constrained-voucher    [ThisRFC}
                                 -request
----------- ------  --------------------------- ------------
]]></artwork></figure>

<t>Warning: These SID values are defined in <xref target="I-D.ietf-core-sid"/>, not as an Early Allocation.</t>

</section>
<section anchor="the-smi-security-for-smime-cms-content-type-registry" title="The SMI Security for S/MIME CMS Content Type Registry">

<t>This document registers an OID in the “SMI Security for S/MIME CMS Content Type” registry (1.2.840.113549.1.9.16.1), with the value:</t>

<figure><artwork><![CDATA[
  Decimal  Description                             References
  -------  --------------------------------------  ----------
  46       id-ct-animaCBORVoucher                  [ThisRFC]
]]></artwork></figure>

<!-- per IANA #1160164 -->

</section>
<section anchor="media-type-registry" title="Media-Type Registry">

<t>This section registers the ‘application/voucher-cms+cbor’ media type and the ‘application/voucher-cose+cbor’ in the “Media Types” registry.
These media types are used to indicate that the content is a CBOR voucher either signed with a cms structure or a COSE_Sign1 structure <xref target="RFC8152"/>.</t>

<section anchor="applicationvoucher-cmscbor" title="application/voucher-cms+cbor">

<figure><artwork><![CDATA[
Type name:  application
Subtype name:  voucher-cms+cbor
Required parameters:  none
Optional parameters:  none
Encoding considerations:  CMS-signed CBOR vouchers are CBOR
  encoded.
Security considerations:  See Security Considerations, Section
Interoperability considerations:  The format is designed to be
  broadly interoperable.
Published specification:  THIS RFC.
Applications that use this media type:  ANIMA, 6tisch, and other
  zero-touch imprinting systems
Additional information:
  Magic number(s):  None
  File extension(s):  .vch
  Macintosh file type code(s):  none
Person & email address to contact for further information:  IETF
  ANIMA WG
Intended usage:  LIMITED
Restrictions on usage:  NONE
Author:  ANIMA WG
Change controller:  IETF
Provisional registration? (standards tree only):  NO
]]></artwork></figure>

</section>
<section anchor="applicationvoucher-cosecbor" title="application/voucher-cose+cbor">

<figure><artwork><![CDATA[
Type name:  application
Subtype name:  voucher-cose+cbor
Required parameters:  none
Optional parameters:  cose-type
Encoding considerations:  COSE_Sign1 CBOR vouchers are COSE objects
                          signed with one signer.
Security considerations:  See Security Considerations, Section
Interoperability considerations:  The format is designed to be
  broadly interoperable.
Published specification:  THIS RFC.
Applications that use this media type:  ANIMA, 6tisch, and other
  zero-touch imprinting systems
Additional information:
  Magic number(s):  None
  File extension(s):  .vch
  Macintosh file type code(s):  none
Person & email address to contact for further information:  IETF
  ANIMA WG
Intended usage:  LIMITED
Restrictions on usage:  NONE
Author:  ANIMA WG
Change controller:  IETF
Provisional registration? (standards tree only):  NO
]]></artwork></figure>

</section>
</section>
<section anchor="coap-content-format-registry" title="CoAP Content-Format Registry">

<t>Additions to the sub-registry “CoAP Content-Formats”, within the “CoRE
Parameters” registry are needed for two media types. These can be registered
either in the Expert Review range (0-255) or IETF Review range (256-9999).</t>

<figure><artwork><![CDATA[
Media type                    mime type    Encoding   ID  References
----------------------------  -----------  --------- ---- ----------
application/voucher-cms+cbor      - -        CBOR    TBD2  [This RFC]
application/voucher-cose+cbor "COSE-Sign1"   CBOR    TBD3  [This RFC]
]]></artwork></figure>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>We are very grateful to Jim Schaad for explaining COSE and CMS choices.
Also thanks to Jim Schaad for correctinging earlier version of the COSE Sign1 objects.</t>

<t>Michel Veillette did extensive work on pyang to extend it to support the SID allocation process, and this document was among the first users.</t>

<t>We are grateful for the suggestions done by Esko Dijk.</t>

</section>
<section anchor="changelog" title="Changelog">

<t>-08
    Examples for cose_sign1 are completed and improved.</t>

<t>-06
    New SID values assigned; regenerated examples</t>

<t>-04
    voucher and request-voucher MUST be signed
    examples for signed request are added in appendix
    IANA SID registration is updated
    SID values in examples are aligned
    signed cms examples aligned with new SIDs</t>

<t>-03</t>

<figure><artwork><![CDATA[
Examples are inverted.
]]></artwork></figure>

<t>-02</t>

<figure><artwork><![CDATA[
Example of requestvoucher with unsigned appllication/cbor is added
attributes of voucher "refined" to optional
CBOR serialization of vouchers improved
Discovery port numbers are specified
]]></artwork></figure>

<t>-01</t>

<figure><artwork><![CDATA[
application/json is optional, application/cbor is compulsory
Cms and cose mediatypes are introduced
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC7049;
&I-D.ietf-core-yang-cbor;
&I-D.ietf-core-sid;
&RFC7950;
&RFC5652;
&RFC8152;
&RFC8366;
&RFC3688;
&RFC6020;
&I-D.ietf-anima-bootstrapping-keyinfra;
&I-D.ietf-ace-coap-est;
&I-D.selander-ace-ake-authz;


    </references>

    <references title='Informative References'>

&I-D.ietf-netmod-yang-tree-diagrams;
<reference anchor="COSE-registry" target="https://www.iana.org/assignments/cose/cose.xhtml">
  <front>
    <title>CBOR Object Signing and Encryption (COSE) registry</title>
    <author initials="." surname="IANA">
      <organization></organization>
    </author>
    <date year="2017"/>
  </front>
</reference>
&RFC6690;
&RFC7030;


    </references>


<section anchor="est-messages-to-est-coaps" title="EST messages to EST-coaps">

<t>This section extends the examples from Appendix A of <xref target="I-D.ietf-ace-coap-est"/>. The CoAP headers are only worked out for the enrollstatus example.</t>

<section anchor="es" title="enrollstatus">

<t>A coaps enrollstatus message can be :</t>

<figure><artwork><![CDATA[
    GET coaps://[192.0.2.1:8085]/est/es
]]></artwork></figure>

<t>The corresponding coap header fields are shown below.</t>

<figure><artwork><![CDATA[
  Ver = 1
  T = 0 (CON)
  Code = 0x01 (0.01 is GET)
  Options
   Option  (Uri-Path)
     Option Delta = 0xb   (option nr = 11)
     Option Length = 0x3
     Option Value = "est"
   Option  (Uri-Path)
     Option Delta = 0x0   (option nr = 11)
     Option Length = 0x2
     Option Value = "es"
  Payload = [Empty]
]]></artwork></figure>

<t>The Uri-Host and Uri-Port Options are omitted because they coincide with the transport protocol destination address and port respectively.</t>

<t>A 2.05 Content response with an unsigned voucher status (ct=60) will then be:</t>

<figure><artwork><![CDATA[
   2.05 Content (Content-Format: application/cbor)
]]></artwork></figure>

<t>With CoAP fields and payload:</t>

<figure><artwork><![CDATA[
   Ver=1
   T=2 (ACK)
   Code = 0x45 (2.05 Content)
   Options
     Option1 (Content-Format)
     Option Delta = 0xC  (option nr 12)
     Option Length = 0x2
     Option Value = 60 (application/cbor)

     Payload (CBOR diagnostic) =
     {
     "version":"1",
     "Status": 1,   / 1 = Success, 0 = Fail  /
     "Reason":"Informative human readable message",
     "reason-context": "Additional information"
     }
]]></artwork></figure>

<t>The binary payload is:</t>

<figure><artwork><![CDATA[
     A46776657273696F6E6131665374617475730166526561736F6E7822
     496E666F726D61746976652068756D616E207265616461626C65206D
     6573736167656e726561736F6E2D636F6E74657874
     764164646974696F6E616C20696E666F726D6174696F6E
]]></artwork></figure>

<t>The binary payload disassembles to the above CBOR diagnostic code.</t>

</section>
<section anchor="voucherstatus" title="voucher_status">

<t>A coaps voucher_status message can be:</t>

<figure><artwork><![CDATA[
   GET coaps://[2001:db8::2:1]:61616]/est/vs
]]></artwork></figure>

<t>A 2.05 Content response with a non signed CBOR voucher status (ct=60) will then be:</t>

<figure><artwork><![CDATA[
    2.05 Content (Content-Format: application/cbor)
    Payload =
    A46776657273696F6E6131665374617475730166526561736F6E7822
    496E666F726D61746976652068756D616E207265616461626C65206D
    6573736167656e726561736F6E2D636F6E74657874
    764164646974696F6E616C20696E666F726D6174696F6E
]]></artwork></figure>

</section>
</section>
<section anchor="cms-signed-messages" title="CMS signed messages">

<t>Signed request-voucher-request payloads are sent from pledge to Registrar, as explained in Section 5.2 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<section anchor="rv" title="signed requestvoucher">

<t>A CMS signed requestvoucher message from JRC to MASA is shown below.
It would be CoAP POSTED to /est/rv.</t>

<figure><artwork><![CDATA[
    POST coaps://[2001:db8::2:1]:61616]/est/rv
    (Content-Format: application/voucher-cms+cbor)
]]></artwork></figure>

<t>The payload would be in binary, but is presented in base64 in this document.</t>

<figure><artwork><![CDATA[
MIIDugYJKoZIhvcNAQcCoIIDqzCCA6cCAQExDTALBglghkgBZQMEAgEwCwYJ
KoZIhvcNAQcBoIICQTCCAj0wggHioAMCAQICCH52Yde1TkYyMAoGCCqGSM49
BAMCMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEUMBIGA1UECgwLRXhh
bXBsZSBJbmMxFjAUBgNVBAsMDWNlcnRpZmljYXRpb24xEzARBgNVBAMMCjgw
Mi4xQVIgQ0EwIBcNMTkwMTMxMTEyOTE2WhgPOTk5OTEyMzEyMzU5NTlaMFwx
CzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTELMAkGA1UEBwwCTEExFDASBgNV
BAoMC2V4YW1wbGUgSW5jMQwwCgYDVQQLDANJb1QxDzANBgNVBAUTBld0MTIz
NDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMi0IfEcJeR+OsVxI78tn9xJ
TwKLw1HMgMA/FQv1DP+VjXVBnYGmokXf+ueQvpXPdfYC+RUmGPgWorI7Vjjl
n9mjgYowgYcwCQYDVR0TBAIwADAdBgNVHQ4EFgQUlmANhxa/f9DnUtCsdgd3
rWZdAqAwHwYDVR0jBBgwFoAUaNFlUflRv8gqQx0Nnwi8LSBbEWAwDgYDVR0P
AQH/BAQDAgWgMCoGA1UdEQQjMCGgHwYIKwYBBQUHCASgEzARBgkrBgEEAbQ7
CgEEBAECAwQwCgYIKoZIzj0EAwIDSQAwRgIhAMDYGZbSUH1pPzxI6qXulJG9
ptshQJnZgRfGOzYTdM2GAiEAp3SYn0wyGlzyXYMqTTNqCK1n3yDxUGQhGIoK
3m00kjYxggE/MIIBOwIBATBpMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJD
QTEUMBIGA1UECgwLRXhhbXBsZSBJbmMxFjAUBgNVBAsMDWNlcnRpZmljYXRp
b24xEzARBgNVBAMMCjgwMi4xQVIgQ0ECCH52Yde1TkYyMAsGCWCGSAFlAwQC
AaBpMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8X
DTE5MDQwODEwNDgzNlowLwYJKoZIhvcNAQkEMSIEILEdCTOLs2Zy7w3LgvSZ
XZEadz3LbznoFBs6FMFN91RaMAoGCCqGSM49BAMCBEcwRQIgASjDsIpr0tW/
n6dRHqvvqsqgZlHbtFnErUbWfhS0KD4CIQDDUEqc5wTmRGf0adEQVQzqmIgh
MEgF10vqXv02gL1jLw==
]]></artwork></figure>

<t>A 2.04 Changed response returning CBOR voucher signed with a cms structure(ct=TBD2) will then be:</t>

<figure><artwork><![CDATA[
    2.04 Changed (Content-Format: application/voucher-cms+cbor)
]]></artwork></figure>
<figure><artwork><![CDATA[
MIIDuwYJKoZIhvcNAQcCoIIDrDCCA6gCAQExDTALBglghkgBZQMEAgEwCwYJ
KoZIhvcNAQcBoIICQTCCAj0wggHioAMCAQICCH52Yde1TkYyMAoGCCqGSM49
BAMCMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEUMBIGA1UECgwLRXhh
bXBsZSBJbmMxFjAUBgNVBAsMDWNlcnRpZmljYXRpb24xEzARBgNVBAMMCjgw
Mi4xQVIgQ0EwIBcNMTkwMTMxMTEyOTE2WhgPOTk5OTEyMzEyMzU5NTlaMFwx
CzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTELMAkGA1UEBwwCTEExFDASBgNV
BAoMC2V4YW1wbGUgSW5jMQwwCgYDVQQLDANJb1QxDzANBgNVBAUTBld0MTIz
NDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMi0IfEcJeR+OsVxI78tn9xJ
TwKLw1HMgMA/FQv1DP+VjXVBnYGmokXf+ueQvpXPdfYC+RUmGPgWorI7Vjjl
n9mjgYowgYcwCQYDVR0TBAIwADAdBgNVHQ4EFgQUlmANhxa/f9DnUtCsdgd3
rWZdAqAwHwYDVR0jBBgwFoAUaNFlUflRv8gqQx0Nnwi8LSBbEWAwDgYDVR0P
AQH/BAQDAgWgMCoGA1UdEQQjMCGgHwYIKwYBBQUHCASgEzARBgkrBgEEAbQ7
CgEEBAECAwQwCgYIKoZIzj0EAwIDSQAwRgIhAMDYGZbSUH1pPzxI6qXulJG9
ptshQJnZgRfGOzYTdM2GAiEAp3SYn0wyGlzyXYMqTTNqCK1n3yDxUGQhGIoK
3m00kjYxggFAMIIBPAIBATBpMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJD
QTEUMBIGA1UECgwLRXhhbXBsZSBJbmMxFjAUBgNVBAsMDWNlcnRpZmljYXRp
b24xEzARBgNVBAMMCjgwMi4xQVIgQ0ECCH52Yde1TkYyMAsGCWCGSAFlAwQC
AaBpMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8X
DTE5MDQwODA3MzQxMFowLwYJKoZIhvcNAQkEMSIEIP2rKa+J8LVdwYEmB2he
uxsz05As0zoAAYkeyNqsh4fiMAoGCCqGSM49BAMCBEgwRgIhALOd2FKbe9FG
kN4Pg7FIgF+//cQv/N+v7tDZMzGBAFN0AiEAu5BI0oQ4o0wZcrDyKoU2GbeX
hlG/g+OgTUftYMJ32so=
]]></artwork></figure>

</section>
<section anchor="ra" title="requestauditing">

<t>A coaps requestauditing message contains the signed CBOR voucher :</t>

<figure><artwork><![CDATA[
    POST coaps://[2001:db8::2:1]:61616]/est/ra
    (Content-Format: application/voucher-cms+cbor)
    Payload =
TO BE FILLED
]]></artwork></figure>

<t>A 2.05 Content response returning a log of the voucher (ct=60) will then be:</t>

<figure><artwork><![CDATA[
    2.05 Content (Content-Format: application/cbor)
    Payload =
{
 "version":"1",
 "events":[
   {
    "date":"<date/time of the entry>",
    "domainID":"<domainID extracted from voucher-request>",
    "nonce":"<any nonce if supplied (or the exact string 'NULL')>"
    "assertion":"<the value from the voucher assertion leaf>"
    "truncated":"<the number of domainID entries truncated>"
   },
   {
    "date":"<date/time of the entry>",
    "domainID":"<anotherDomainID extracted from voucher-request>",
    "nonce":"<any nonce if supplied (or the exact string 'NULL')>"
    "assertion":"<the value from the voucher assertion leaf>"
   }
 ],
  "truncation": {
    "nonced duplicates": "<total number of entries truncated>",
    "nonceless duplicates": "<total number of entries truncated>",
    "arbitrary": "<number of domainID entries removed entirely>"
  }
}

    [EDNOTE: Change JSON to CBOR; Serialize CBOR payload to binary]
]]></artwork></figure>

</section>
<section anchor="cmssign" title="CMS signed voucher-request example">

<t>The voucher-request example, visualized in CBOR diagnostic notation in <xref target="example2"/> is shown as a hexadecimal dump of the binary file.</t>

<figure><artwork><![CDATA[
    a11909c5a90274323031362d31302d30375431393a33313a34325a0474323031
    362d31302d32315431393a33313a34325a01020d6d4a414441313233343536
    373839054401020d0f0a4401020d0f03f50674323031372d31302d30375431
    393a33313a34325a0c4401020d0f
]]></artwork></figure>

<t>The voucher-request example has been signed by using the WT1234 certificate and key pair shown in Appendix C of <xref target="I-D.ietf-ace-coap-est"/>.
The CMS signing of the binary voucher-request leads to a binary signed voucher-request, shown with a hexadecimal representation shown in the payload of the request part of <xref target="rv"/> and <xref target="ra"/>.</t>

<t>The breakdown of the CMS signed binary voucher-request file is visualized below:</t>

<figure><artwork><![CDATA[
CMS_ContentInfo:
  contentType: pkcs7-signedData (1.2.840.113549.1.7.2)
  d.signedData:
    version: 1
    digestAlgorithms:
        algorithm: sha256 (2.16.840.1.101.3.4.2.1)
        parameter: <ABSENT>
    encapContentInfo:
      eContentType: pkcs7-data (1.2.840.113549.1.7.1)
      eContent: <ABSENT>
    certificates:
      d.certificate:
        cert_info:
          version: 2
          serialNumber: 9112578475118446130
          signature:
            algorithm: ecdsa-with-SHA256 (1.2.840.10045.4.3.2)
            parameter: <ABSENT>
          issuer: C=US, ST=CA, O=Example Inc, OU=certification,
                                                  CN=802.1AR CA
          validity:
            notBefore: Jan 31 11:29:16 2019 GMT
            notAfter: Dec 31 23:59:59 9999 GMT
          subject: C=US, ST=CA, L=LA, O=example Inc,
                                     OU=IoT/serialNumber=Wt1234
          key:
            algor:
              algorithm: id-ecPublicKey (1.2.840.10045.2.1)
              parameter: OBJECT:prime256v1 (1.2.840.10045.3.1.7)
            public_key:  (0 unused bits)
              0000 - 04 c8 b4 21 f1 1c 25 e4-7e 3a c5 71 23 bf
              000e - 2d 9f dc 49 4f 02 8b c3-51 cc 80 c0 3f 15
              001c - 0b f5 0c ff 95 8d 75 41-9d 81 a6 a2 45 df
              002a - fa e7 90 be 95 cf 75 f6-02 f9 15 26 18 f8
              0038 - 16 a2 b2 3b 56 38 e5 9f-d9
          issuerUID: <ABSENT>
          subjectUID: <ABSENT>
          extensions:
              object: X509v3 Basic Constraints (2.5.29.19)
              critical: BOOL ABSENT
              value:
                0000 - 30
                0002 - <SPACES/NULS>

              object: X509v3 Subject Key Identifier (2.5.29.14)
              critical: BOOL ABSENT
              value:
                0000 - 04 14 96 60 0d 87 16 bf-7f d0 e7 52 d0
                000d - ac 76 07 77 ad 66 5d 02-a0

              object: X509v3 Authority Key Identifier (2.5.29.35)
              critical: BOOL ABSENT
              value:
                0000 - 30 16 80 14 68 d1 65 51-f9 51 bf c8 2a
                000d - 43 1d 0d 9f 08 bc 2d 20-5b 11 60

              object: X509v3 Key Usage (2.5.29.15)
              critical: TRUE
              value:
                0000 - 03 02 05 a0

              object: X509v3 Subject Alternative Name (2.5.29.17)
              critical: BOOL ABSENT
              value:
                0000 - 30 21 a0 1f 06 08 2b 06-01 05 05 07 08
                000d - 04 a0 13 30 11 06 09 2b-06 01 04 01 b4
                001a - 3b 0a 01 04 04 01 02 03-04
        sig_alg:
          algorithm: ecdsa-with-SHA256 (1.2.840.10045.4.3.2)
          parameter: <ABSENT>
        signature:  (0 unused bits)
          0000 - 30 46 02 21 00 c0 d8 19-96 d2 50 7d 69 3f 3c
          000f - 48 ea a5 ee 94 91 bd a6-db 21 40 99 d9 81 17
          001e - c6 3b 36 13 74 cd 86 02-21 00 a7 74 98 9f 4c
          002d - 32 1a 5c f2 5d 83 2a 4d-33 6a 08 ad 67 df 20
          003c - f1 50 64 21 18 8a 0a de-6d 34 92 36
    crls:
      <EMPTY>
    signerInfos:
        version: 1
        d.issuerAndSerialNumber:
          issuer: C=US, ST=CA, O=Example Inc, OU=certification,
                                                  CN=802.1AR CA
          serialNumber: 9112578475118446130
        digestAlgorithm:
          algorithm: sha256 (2.16.840.1.101.3.4.2.1)
          parameter: <ABSENT>
        signedAttrs:
            object: contentType (1.2.840.113549.1.9.3)
            value.set:
              OBJECT:pkcs7-data (1.2.840.113549.1.7.1)

            object: signingTime (1.2.840.113549.1.9.5)
            value.set:
              UTCTIME:Jul  3 08:53:30 2019 GMT

            object: messageDigest (1.2.840.113549.1.9.4)
            value.set:
              OCTET STRING:
                0000 - d4 b0 5c dd c8 b4 91 28-4a 18 ca 25 9d
                000d - be d0 60 23 cf ad a0 aa-c2 95 ac e9 3f
                001a - 0b 4f 44 9e 25
                0020 - <SPACES/NULS>
        signatureAlgorithm:
          algorithm: ecdsa-with-SHA256 (1.2.840.10045.4.3.2)
          parameter: <ABSENT>
        signature:
          0000 - 30 46 02 21 00 e5 e1 7f-23 c3 aa 14 9f 35 64
          000f - 1e c4 4a 0f 68 fe b0 16-3b e6 7c 06 51 af bf
          001e - 5a a0 99 59 e0 28 1f 02-21 00 b4 07 2f 7c c4
          002d - f9 26 0c 6d 47 a7 93 56-de b8 da f7 23 f0 af
          003c - 2b 59 16 cc 36 63 e7 91-89 39 df df
        unsignedAttrs:
          <EMPTY>
]]></artwork></figure>

</section>
</section>
<section anchor="cosesign" title="COSE examples">

<t>These examples are generated on a pie 4 and a PC running BASH. Keys and Certificates have been generated with openssl with the following shell script:</t>

<figure><artwork><![CDATA[
#!/bin/bash
#try-cert.sh
export dir=./brski/intermediate
export cadir=./brski
export cnfdir=./conf
export format=pem
export default_crl_days=30
sn=8

DevID=pledge.1.2.3.4
serialNumber="serialNumber=$DevID"
export hwType=1.3.6.1.4.1.6715.10.1
export hwSerialNum=01020304 
export subjectAltName="otherName:1.3.6.1.5.5.7.8.4;SEQ:hmodname"
echo  $hwType - $hwSerialNum
echo $serialNumber

# remove all files
rm -r ./brski/*
#
# initialize file structure
# root level
cd $cadir
mkdir certs crl csr newcerts private
chmod 700 private
touch index.txt
touch serial
echo 11223344556600 >serial
echo 1000 > crlnumber
# intermediate level
mkdir intermediate
cd intermediate
mkdir certs crl csr newcerts private
chmod 700 private
touch index.txt
echo 11223344556600 >serial
echo 1000 > crlnumber
cd ../..



# file structure is cleaned start filling

echo "#############################"
echo "create registrar keys and certificates "
echo "#############################"


echo "create root registrar certificate using ecdsa with sha256"
openssl ecparam -name prime256v1 -genkey \
  -noout -out $cadir/private/ca-regis.key

openssl req -new -x509 \
 -key $cadir/private/ca-regis.key \
 -out $cadir/certs/ca-regis.crt \
 -extensions v3_ca\
 -days 365 \
 -subj "/C=NL/ST=NB/L=Helmond/O=vanderstok\
"/OU=consultancy/CN=registrar.stok.nl"

# Combine authority certificate and key
echo "Combine authority certificate and key"
openssl pkcs12 -passin pass:watnietweet \
 -passout pass:watnietweet \
 -inkey $cadir/private/ca-regis.key \
 -in $cadir/certs/ca-regis.crt -export \
 -out $cadir/certs/ca-regis-comb.pfx

# converteer authority pkcs12 file to pem
echo "converteer authority pkcs12 file to pem"
openssl pkcs12 -passin pass:watnietweet -passout pass:watnietweet\
   -in $cadir/certs/ca-regis-comb.pfx \\
   -out $cadir/certs/ca-regis-comb.crt -nodes

#show certificate in registrar combined certificate
openssl  x509 -in $cadir/certs/ca-regis-comb.crt -text

#
# Certificate Authority for MASA
#
echo "#############################"
echo "create MASA keys and certificates "
echo "#############################"

echo "create root MASA certificate using ecdsa with sha 256 key"
openssl ecparam -name prime256v1 -genkey -noout \
 -out $cadir/private/ca-masa.key

openssl req -new -x509 \
 -days 365 -key $cadir/private/ca-masa.key \
 -out $cadir/certs/ca-masa.crt \
 -extensions v3_ca\
 -subj "/C=NL/ST=NB/L=Helmond/O=vanderstok/\
OU=manufacturer/CN=masa.stok.nl"

# Combine authority certificate and key
echo "Combine authority certificate and key for masa"
openssl pkcs12 -passin pass:watnietweet \
   -passout pass:watnietweet\
   -inkey $cadir/private/ca-masa.key \
   -in $cadir/certs/ca-masa.crt -export \
   -out $cadir/certs/ca-masa-comb.pfx

# converteer authority pkcs12 file to pem for masa
echo "converteer authority pkcs12 file to pem for masa"
openssl pkcs12 -passin pass:watnietweet \
   -passout pass:watnietweet\
   -in $cadir/certs/ca-masa-comb.pfx \
   -out $cadir/certs/ca-masa-comb.crt -nodes

#show certificate in pledge combined certificate
openssl  x509 -in $cadir/certs/ca-masa-comb.crt -text


#
# Certificate for Pledge derived from MASA certificate
#
echo "#############################"
echo "create pledge keys and certificates "
echo "#############################"


# Pledge derived Certificate

echo "create pledge derived certificate using ecdsa with sha256"
openssl ecparam -name prime256v1 -genkey \
 -noout -out $dir/private/pledge.key

echo "create pledge certificate request"
openssl req -nodes -new -sha256 \
  -key $dir/private/pledge.key -out $dir/csr/pledge.csr \
  -subj \
"/C=NL/ST=NB/L=Helmond/O=vanderstok/OU=manufacturing\
/CN=uuid:$DevID/$serialNumber"

# Sign pledge derived Certificate
echo "sign pledge derived certificate "
openssl ca -config $cnfdir/openssl-pledge.cnf \
 -extensions 8021ar_idevid\
 -days 365 -in $dir/csr/pledge.csr -out $dir/certs/pledge.crt 

# Add pledge key and pledge certificate to pkcs12 file
echo "Add pledge key and pledge certificate to pkcs12 file"
openssl pkcs12  -passin pass:watnietweet\
   -passout pass:watnietweet\
   -inkey $dir/private/pledge.key \
   -in $dir/certs/pledge.crt -export \
   -out $dir/certs/pledge-comb.pfx

# converteer pledge pkcs12 file to pem
echo "converteer pledge pkcs12 file to pem"
openssl pkcs12 -passin pass:watnietweet \
    -passout pass:watnietweet\
   -in $dir/certs/pledge-comb.pfx \
   -out $dir/certs/pledge-comb.crt -nodes

#show certificate in pledge-comb.crt
openssl  x509 -in $dir/certs/pledge-comb.crt -text

#show private key in pledge-comb.crt
openssl ecparam -name prime256v1 \
  -in $dir/certs/pledge-comb.crt -text
]]></artwork></figure>

<t>The xxxx-comb certificates have been generated as required by libcoap for the DTLS connection generation.</t>

<section anchor="pledge-registrar-and-masa-keys" title="Pledge, Registrar and MASA keys">

<t>This first section documents the public and private keys used in the
subsequent test vectors below.  These keys come from test code and are not used in any
production system, and should only be used only to validate implementations.</t>

<section anchor="pledge-private-key" title="Pledge private key">

<figure><artwork><![CDATA[
-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgIpP20ud7muTl460b
xFzupPkaMoaCIIIFwSOf0hvhQByhRANCAASKnIauvAtx6ZFWQniQOqvP0Zpdaudy
Ve6Vrc80AjyWRGnN3oyQ0rnr5dXynfG2xq8+cY+uGwTrAJYp9OyoZCAs
-----END PRIVATE KEY-----
Private-Key: (256 bit)
priv:
    22:93:f6:d2:e7:7b:9a:e4:e5:e3:ad:1b:c4:5c:ee:
    a4:f9:1a:32:86:82:20:82:05:c1:23:9f:d2:1b:e1:
    40:1c
pub:
    04:8a:9c:86:ae:bc:0b:71:e9:91:56:42:78:90:3a:
    ab:cf:d1:9a:5d:6a:e7:72:55:ee:95:ad:cf:34:02:
    3c:96:44:69:cd:de:8c:90:d2:b9:eb:e5:d5:f2:9d:
    f1:b6:c6:af:3e:71:8f:ae:1b:04:eb:00:96:29:f4:
    ec:a8:64:20:2c
ASN1 OID: prime256v1
NIST CURVE: P-256]]></artwork></figure>

</section>
<section anchor="jrcpriv" title="Registrar private key">

<figure><artwork><![CDATA[
-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgHCCOKLhln+l8pLnx
gWtMUm7zRY4ugkznuFimYDKbrNihRANCAARqJKniS+I00XrUfnYMlLXh3E7hFa2J
ESrUpqZLsb9o+Rd9cOkQnLSMmw3H3yZBGZ0MLb/yHtWEA4rIP0eBvhOO
-----END PRIVATE KEY-----
Private-Key: (256 bit)
priv:
    1c:20:8e:28:b8:65:9f:e9:7c:a4:b9:f1:81:6b:4c:
    52:6e:f3:45:8e:2e:82:4c:e7:b8:58:a6:60:32:9b:
    ac:d8
pub:
    04:6a:24:a9:e2:4b:e2:34:d1:7a:d4:7e:76:0c:94:
    b5:e1:dc:4e:e1:15:ad:89:11:2a:d4:a6:a6:4b:b1:
    bf:68:f9:17:7d:70:e9:10:9c:b4:8c:9b:0d:c7:df:
    26:41:19:9d:0c:2d:bf:f2:1e:d5:84:03:8a:c8:3f:
    47:81:be:13:8e
ASN1 OID: prime256v1
NIST CURVE: P-256]]></artwork></figure>

</section>
<section anchor="masapriv" title="MASA private key">

<figure><artwork><![CDATA[
-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgQODnSgB7xR/aa3Ea
JrPGz9lZhJ1aEc/56OEPiBr86SKhRANCAASB9HLsnEeyjtHrODNBANNi9khQ2gLQ
VrIie8hLgFmVdwfQw1iMPPI8WwCDeVTaDdGwr6HC6M0sO9CGRZ+JcwrL
-----END PRIVATE KEY-----
Private-Key: (256 bit)
priv:
    40:e0:e7:4a:00:7b:c5:1f:da:6b:71:1a:26:b3:c6:
    cf:d9:59:84:9d:5a:11:cf:f9:e8:e1:0f:88:1a:fc:
    e9:22
pub:
    04:81:f4:72:ec:9c:47:b2:8e:d1:eb:38:33:41:00:
    d3:62:f6:48:50:da:02:d0:56:b2:22:7b:c8:4b:80:
    59:95:77:07:d0:c3:58:8c:3c:f2:3c:5b:00:83:79:
    54:da:0d:d1:b0:af:a1:c2:e8:cd:2c:3b:d0:86:45:
    9f:89:73:0a:cb
ASN1 OID: prime256v1
NIST CURVE: P-256]]></artwork></figure>

</section>
</section>
<section anchor="pledge-registrar-and-masa-certificates" title="Pledge, Registrar and MASA certificates">

<t>Below the certificates that accompany the keys. The certificate description is followed by the hexadecimal DER of the certificate</t>

<section anchor="pledge-idevid-certificate" title="Pledge IDevID certificate">

<figure><artwork><![CDATA[
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 4822678189204992 (0x11223344556600)
        Signature Algorithm: ecdsa-with-SHA256
        Issuer: C=NL, ST=NB, L=Helmond, O=vanderstok,
                OU=manufacturer, CN=masa.stok.nl
        Validity
            Not Before: Sep  9 07:42:03 2020 GMT
            Not After : Dec 31 23:59:59 9999 GMT
        Subject: C=NL, ST=NB, L=Helmond, O=vanderstok, 
                    OU=manufacturing, 
       CN=uuid:pledge.1.2.3.4/serialNumber=pledge.1.2.3.4
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub:
                    04:8a:9c:86:ae:bc:0b:71:e9:91:56:42:78:90:3a:
                    ab:cf:d1:9a:5d:6a:e7:72:55:ee:95:ad:cf:34:02:
                    3c:96:44:69:cd:de:8c:90:d2:b9:eb:e5:d5:f2:9d:
                    f1:b6:c6:af:3e:71:8f:ae:1b:04:eb:00:96:29:f4:
                    ec:a8:64:20:2c
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            X509v3 Subject Key Identifier:
59:B1:E1:19:F4:68:53:E9:0E:7C:9F:29:D0:FB:5B:1F:AC:C3:82:49
            X509v3 Authority Key Identifier: 
                keyid:
22:BC:B8:20:D9:C5:6D:2D:5B:B3:BB:64:8B:E0:8B:A7:86:5E:CE:B4

            X509v3 Key Usage: critical
                Digital Signature, Key Encipherment
    Signature Algorithm: ecdsa-with-SHA256
         30:45:02:20:4d:fd:a8:83:78:31:d2:62:a4:e5:48:a2:e0:a7:
         3b:c5:14:e9:7e:46:13:45:bc:30:fd:1d:e5:d6:63:3e:d8:f4:
         02:21:00:a8:e5:1e:c2:79:77:90:fc:40:a8:7a:bf:b1:bd:81:
         8b:ee:d7:56:1a:04:4d:8f:c8:3d:76:5f:4d:6e:36:a2:c2

]]></artwork></figure>

<t>This is the hexadecimal representation in (request-)voucher examples referred to as pledge-cert-hex.</t>

<figure><artwork><![CDATA[
30820254308201faa003020102020711223344556600300a06082a8648ce3d04
0302306f310b3009060355040613024e4c310b300906035504080c024e423110
300e06035504070c0748656c6d6f6e6431133011060355040a0c0a76616e6465
7273746f6b31153013060355040b0c0c6d616e75666163747572657231153013
06035504030c0c6d6173612e73746f6b2e6e6c3020170d323030393039303734
3230335a180f39393939313233313233353935395a308190310b300906035504
0613024e4c310b300906035504080c024e423110300e06035504070c0748656c
6d6f6e6431133011060355040a0c0a76616e64657273746f6b31163014060355
040b0c0d6d616e75666163747572696e67311c301a06035504030c1375756964
3a706c656467652e312e322e332e34311730150603550405130e706c65646765
2e312e322e332e343059301306072a8648ce3d020106082a8648ce3d03010703
4200048a9c86aebc0b71e991564278903aabcfd19a5d6ae77255ee95adcf3402
3c964469cdde8c90d2b9ebe5d5f29df1b6c6af3e718fae1b04eb009629f4eca8
64202ca35d305b30090603551d1304023000301d0603551d0e0416041459b1e1
19f46853e90e7c9f29d0fb5b1facc38249301f0603551d2304183016801422bc
b820d9c56d2d5bb3bb648be08ba7865eceb4300e0603551d0f0101ff04040302
05a0300a06082a8648ce3d040302034800304502204dfda8837831d262a4e548
a2e0a73bc514e97e461345bc30fd1de5d6633ed8f4022100a8e51ec2797790fc
40a87abfb1bd818beed7561a044d8fc83d765f4d6e36a2c2]]></artwork></figure>

</section>
<section anchor="registrar-certificate" title="Registrar Certificate">

<figure><artwork><![CDATA[
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            39:73:74:f3:fa:81:2a:0d:37:10:3b:68:c1:84:81:c5:01:bc:7c:fe
        Signature Algorithm: ecdsa-with-SHA256
        Issuer: C=NL, ST=NB, L=Helmond, O=vanderstok,
                OU=consultancy, CN=registrar.stok.nl
        Validity
            Not Before: Sep  9 07:42:03 2020 GMT
            Not After : Sep  9 07:42:03 2021 GMT
        Subject: C=NL, ST=NB, L=Helmond, O=vanderstok, 
              OU=consultancy, CN=registrar.stok.nl
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub:
                    04:6a:24:a9:e2:4b:e2:34:d1:7a:d4:7e:76:0c:94:
                    b5:e1:dc:4e:e1:15:ad:89:11:2a:d4:a6:a6:4b:b1:
                    bf:68:f9:17:7d:70:e9:10:9c:b4:8c:9b:0d:c7:df:
                    26:41:19:9d:0c:2d:bf:f2:1e:d5:84:03:8a:c8:3f:
                    47:81:be:13:8e
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Subject Key Identifier: 
25:CD:93:71:B5:A1:5F:6D:1E:E8:C3:7A:51:13:BE:0B:8F:13:2C:C2
            X509v3 Authority Key Identifier: 
                keyid:
25:CD:93:71:B5:A1:5F:6D:1E:E8:C3:7A:51:13:BE:0B:8F:13:2C:C2

            X509v3 Basic Constraints: 
                CA:TRUE
    Signature Algorithm: ecdsa-with-SHA256
         30:46:02:21:00:a6:6d:9e:24:f9:de:08:b7:f0:cf:43:c3:c0:
         ee:57:cc:b6:60:de:ae:2e:70:cc:61:a1:a2:b3:35:35:02:5b:
         ba:02:21:00:bf:fd:74:6a:99:eb:da:01:77:fc:6c:37:95:75:
         8a:f4:a0:9f:99:8e:bc:4a:90:62:49:f0:7a:c9:65:96:dc:75

]]></artwork></figure>

<t>This the hexadecimal representation, in (request-)voucher examples referred to as regis-cert-hex</t>

<figure><artwork><![CDATA[
30820239308201dea0030201020214397374f3fa812a0d37103b68c18481c501
bc7cfe300a06082a8648ce3d0403023073310b3009060355040613024e4c310b
300906035504080c024e423110300e06035504070c0748656c6d6f6e64311330
11060355040a0c0a76616e64657273746f6b31143012060355040b0c0b636f6e
73756c74616e6379311a301806035504030c117265676973747261722e73746f
6b2e6e6c301e170d3230303930393037343230335a170d323130393039303734
3230335a3073310b3009060355040613024e4c310b300906035504080c024e42
3110300e06035504070c0748656c6d6f6e6431133011060355040a0c0a76616e
64657273746f6b31143012060355040b0c0b636f6e73756c74616e6379311a30
1806035504030c117265676973747261722e73746f6b2e6e6c3059301306072a
8648ce3d020106082a8648ce3d030107034200046a24a9e24be234d17ad47e76
0c94b5e1dc4ee115ad89112ad4a6a64bb1bf68f9177d70e9109cb48c9b0dc7df
2641199d0c2dbff21ed584038ac83f4781be138ea350304e301d0603551d0e04
16041425cd9371b5a15f6d1ee8c37a5113be0b8f132cc2301f0603551d230418
3016801425cd9371b5a15f6d1ee8c37a5113be0b8f132cc2300c0603551d1304
0530030101ff300a06082a8648ce3d0403020349003046022100a66d9e24f9de
08b7f0cf43c3c0ee57ccb660deae2e70cc61a1a2b33535025bba022100bffd74
6a99ebda0177fc6c3795758af4a09f998ebc4a906249f07ac96596dc75]]></artwork></figure>

</section>
<section anchor="masa-certificate" title="MASA Certificate">

<figure><artwork><![CDATA[
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            70:5a:34:7e:67:d2:4d:70:b0:c6:ca:60:ff:fb:75:d9:46:82:e6:0e
        Signature Algorithm: ecdsa-with-SHA256
        Issuer: C=NL, ST=NB, L=Helmond, O=vanderstok,
                OU=manufacturer, CN=masa.stok.nl
        Validity
            Not Before: Sep  9 07:42:03 2020 GMT
            Not After : Sep  9 07:42:03 2021 GMT
        Subject: C=NL, ST=NB, L=Helmond, O=vanderstok,
                  OU=manufacturer, CN=masa.stok.nl
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub:
                    04:81:f4:72:ec:9c:47:b2:8e:d1:eb:38:33:41:00:
                    d3:62:f6:48:50:da:02:d0:56:b2:22:7b:c8:4b:80:
                    59:95:77:07:d0:c3:58:8c:3c:f2:3c:5b:00:83:79:
                    54:da:0d:d1:b0:af:a1:c2:e8:cd:2c:3b:d0:86:45:
                    9f:89:73:0a:cb
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Subject Key Identifier: 
22:BC:B8:20:D9:C5:6D:2D:5B:B3:BB:64:8B:E0:8B:A7:86:5E:CE:B4
            X509v3 Authority Key Identifier: 
                keyid:
22:BC:B8:20:D9:C5:6D:2D:5B:B3:BB:64:8B:E0:8B:A7:86:5E:CE:B4

            X509v3 Basic Constraints: 
                CA:TRUE
    Signature Algorithm: ecdsa-with-SHA256
         30:45:02:20:04:ac:8d:48:62:a2:a5:04:4f:61:fd:38:83:53:
         9f:00:e7:d6:4b:4d:30:1b:84:29:d4:2d:35:58:b0:a0:0c:7d:
         02:21:00:8c:f1:f4:f9:a2:11:fe:64:46:a9:87:9f:58:ca:ea:
         da:4f:0a:42:32:c2:6a:e8:c5:9d:62:c0:67:f0:b8:44:43
]]></artwork></figure>

<t>This is the hexadecimal representation, in (request-)voucher examples referred to as masa-cert-hex.</t>

<figure><artwork><![CDATA[
30820230308201d6a0030201020214705a347e67d24d70b0c6ca60fffb75d946
82e60e300a06082a8648ce3d040302306f310b3009060355040613024e4c310b
300906035504080c024e423110300e06035504070c0748656c6d6f6e64311330
11060355040a0c0a76616e64657273746f6b31153013060355040b0c0c6d616e
7566616374757265723115301306035504030c0c6d6173612e73746f6b2e6e6c
301e170d3230303930393037343230335a170d3231303930393037343230335a
306f310b3009060355040613024e4c310b300906035504080c024e423110300e
06035504070c0748656c6d6f6e6431133011060355040a0c0a76616e64657273
746f6b31153013060355040b0c0c6d616e756661637475726572311530130603
5504030c0c6d6173612e73746f6b2e6e6c3059301306072a8648ce3d02010608
2a8648ce3d0301070342000481f472ec9c47b28ed1eb38334100d362f64850da
02d056b2227bc84b8059957707d0c3588c3cf23c5b00837954da0dd1b0afa1c2
e8cd2c3bd086459f89730acba350304e301d0603551d0e0416041422bcb820d9
c56d2d5bb3bb648be08ba7865eceb4301f0603551d2304183016801422bcb820
d9c56d2d5bb3bb648be08ba7865eceb4300c0603551d13040530030101ff300a
06082a8648ce3d0403020348003045022004ac8d4862a2a5044f61fd3883539f
00e7d64b4d301b8429d42d3558b0a00c7d0221008cf1f4f9a211fe6446a9879f
58caeada4f0a4232c26ae8c59d62c067f0b84443]]></artwork></figure>

</section>
</section>
<section anchor="cose-signed-voucher-request-from-pledge-to-registrar" title="COSE signed voucher request from pledge to Registrar">

<t>In this example the voucher request has been signed by the pledge, and has been sent to the JRC over CoAPS.  This example
uses the proximity-registrar-cert mechanism to request a voucher that
pins the certificate of the registrar.</t>

<figure><artwork><![CDATA[
    POST coaps://registrar.example.com/est/rv
    (Content-Format: application/voucher-cose+cbor)
    signed_request_voucher
]]></artwork></figure>

<t>The payload signed_request_voucher is shown as hexadecimal dump (with lf added):</t>

<figure><artwork><![CDATA[
d28444a101382ea1045820f8926f5ba385b7bccf23592b97a73c1b00bffc01023
0f647f06960870b1fd6ee5902aca11909c5a61909c77818323032302d31302d35
5431333a34363a31332d30303a30301909c97818323032322d31302d355431333
a34363a31332d30303a30301909c6021909cc5029c7bafb81a2c6160d3357d229
11f5101909d26e706c656467652e312e322e332e341909cf59023d30820239308
201dea0030201020214397374f3fa812a0d37103b68c18481c501bc7cfe300a06
082a8648ce3d0403023073310b3009060355040613024e4c310b3009060355040
80c024e423110300e06035504070c0748656c6d6f6e6431133011060355040a0c
0a76616e64657273746f6b31143012060355040b0c0b636f6e73756c74616e637
9311a301806035504030c117265676973747261722e73746f6b2e6e6c301e170d
3230303930393037343230335a170d3231303930393037343230335a3073310b3
009060355040613024e4c310b300906035504080c024e423110300e0603550407
0c0748656c6d6f6e6431133011060355040a0c0a76616e64657273746f6b31143
012060355040b0c0b636f6e73756c74616e6379311a301806035504030c117265
676973747261722e73746f6b2e6e6c3059301306072a8648ce3d020106082a864
8ce3d030107034200046a24a9e24be234d17ad47e760c94b5e1dc4ee115ad8911
2ad4a6a64bb1bf68f9177d70e9109cb48c9b0dc7df2641199d0c2dbff21ed5840
38ac83f4781be138ea350304e301d0603551d0e0416041425cd9371b5a15f6d1e
e8c37a5113be0b8f132cc2301f0603551d2304183016801425cd9371b5a15f6d1
ee8c37a5113be0b8f132cc2300c0603551d13040530030101ff300a06082a8648
ce3d0403020349003046022100a66d9e24f9de08b7f0cf43c3c0ee57ccb660dea
e2e70cc61a1a2b33535025bba022100bffd746a99ebda0177fc6c3795758af4a0
9f998ebc4a906249f07ac96596dc7558473045022100fc28be418e5f25152590e
872b4bbdbe334cd31d1ebb0a806e7a172cad5cff604022056ee414ddac438e7f5
1dda9ddf6ec6e31a78cdde6574717fe46dd3a7c60f5bb5

]]></artwork></figure>

<t>The representiation of signed_voucher_request in CBOR diagnostic format is:</t>

<figure><artwork><![CDATA[
Diagnose(signed_request_voucher) =
18([
h'A101382E',     # {"alg": -47}
{4:h'F8926F5BA385B7BCCF23592B97A73C1B00BFFC010230F647F06960870B1F
D6EE'},
h'request_voucher' 
h'3045022100FC28BE418E5F25152590E872B4BBDBE334CD31D1EBB0A806E7A17
2CAD5CFF604022056EE414DDAC438E7F51DDA9DDF6EC6E31A78CDDE6574717FE4
6DD3A7C60F5BB5'])

Diagnose(request_voucher) =
{2501: {2503: "2020-10-5T13:46:13-00:00", 
        2505: "2022-10-5T13:46:13-00:00", 
        2502: 2, 
        2508: h'29C7BAFB81A2C6160D3357D22911F510', 
        2514: "pledge.1.2.3.4", 
        2511: h'regis-cert-hex'}}, 

]]></artwork></figure>

</section>
<section anchor="cose-signed-voucher-request-from-registrar-to-masa" title="COSE signed voucher request from Registrar to MASA">

<t>In this example the voucher request has been signed by the JRC using the private key from
<xref target="jrcpriv"/>.  Contained within this voucher request is the voucher
request from the pledge to JRC.</t>

<figure><artwork><![CDATA[
    POST coaps://masa.example.com/est/rv
    (Content-Format: application/voucher-cose+cbor)
    signed_masa_request_voucher
]]></artwork></figure>

<t>The payload signed_masa_voucher_request is shown as hexadecimal dump (with lf added):</t>

<figure><artwork><![CDATA[
d28444a101382ea1045820b86ae808f79af17e5948cbda731f158d04bd091c73f
485f2409eac08ee7ddb5c5903fea11909c5a61909c77818323032302d31302d35
5431333a34363a31332d30303a30301909c97818323032322d31302d355431333
a34363a31332d30303a30301909cc5029c7bafb81a2c6160d3357d22911f51019
09d26e706c656467652e312e322e332e341909ca586b433d4e4c2c2053543d4e4
22c204c3d48656c6d6f6e642c204f3d76616e64657273746f6b2c204f553d6d61
6e75666163747572696e672c20434e3d757569643a706c656467652e312e322e3
32e342c2073657269616c4e756d6265723d706c656467652e312e322e332e3419
09ce590323d28444a101382ea1045820f8926f5ba385b7bccf23592b97a73c1b0
0bffc010230f647f06960870b1fd6ee5902aca11909c5a61909c7781832303230
2d31302d355431333a34363a31332d30303a30301909c97818323032322d31302
d355431333a34363a31332d30303a30301909c6021909cc5029c7bafb81a2c616
0d3357d22911f5101909d26e706c656467652e312e322e332e341909cf59023d3
0820239308201dea0030201020214397374f3fa812a0d37103b68c18481c501bc
7cfe300a06082a8648ce3d0403023073310b3009060355040613024e4c310b300
906035504080c024e423110300e06035504070c0748656c6d6f6e643113301106
0355040a0c0a76616e64657273746f6b31143012060355040b0c0b636f6e73756
c74616e6379311a301806035504030c117265676973747261722e73746f6b2e6e
6c301e170d3230303930393037343230335a170d3231303930393037343230335
a3073310b3009060355040613024e4c310b300906035504080c024e423110300e
06035504070c0748656c6d6f6e6431133011060355040a0c0a76616e646572737
46f6b31143012060355040b0c0b636f6e73756c74616e6379311a301806035504
030c117265676973747261722e73746f6b2e6e6c3059301306072a8648ce3d020
106082a8648ce3d030107034200046a24a9e24be234d17ad47e760c94b5e1dc4e
e115ad89112ad4a6a64bb1bf68f9177d70e9109cb48c9b0dc7df2641199d0c2db
ff21ed584038ac83f4781be138ea350304e301d0603551d0e0416041425cd9371
b5a15f6d1ee8c37a5113be0b8f132cc2301f0603551d2304183016801425cd937
1b5a15f6d1ee8c37a5113be0b8f132cc2300c0603551d13040530030101ff300a
06082a8648ce3d0403020349003046022100a66d9e24f9de08b7f0cf43c3c0ee5
7ccb660deae2e70cc61a1a2b33535025bba022100bffd746a99ebda0177fc6c37
95758af4a09f998ebc4a906249f07ac96596dc7558473045022100fc28be418e5
f25152590e872b4bbdbe334cd31d1ebb0<<a806e7a172cad5cff604022056ee41
4ddac438e7f51dda9ddf6ec6e31a78cdde6574717fe46dd3a7c60f5bb55847304
5022047b5314c72cbb2d1212e51198061167c79e1002874cd2665a5b643fa6436
3c30022100ce49ac309f760bd0e75660a7e29edee82f0251724c124150f5326b9
b2654927c
]]></artwork></figure>

<t>The representiation of signed_masa_voucher_request in CBOR diagnostic format is:</t>

<figure><artwork><![CDATA[
Diagnose(signed_masa_request_voucher) =

18([
h'A101382E',     # {"alg": -47} 
{4:h'B86AE808F79AF17E5948CBDA731F158D04BD091C73F485F2409EAC08EE7D
DB5C'}, 
h'masa_request_voucher',
h'3045022047B5314C72CBB2D1212E51198061167C79E1002874CD2665A5B643F
A64363C30022100CE49AC309F760BD0E75660A7E29EDEE82F0251724C124150F5
326B9B2654927C']) 

Diagnose(masa_request_voucher) =
{2501: 
   {2503: "2020-10-5T13:46:13-00:00", 
    2505: "2022-10-5T13:46:13-00:00", 
    2508: h'29C7BAFB81A2C6160D3357D22911F510', 
    2514: "pledge.1.2.3.4", 
    2506:h'433D4E4C2C2053543D4E422C204C3D48656C6D6F6E642C
204F3D76616E64657273746F6B2C204F553D6D616E75666163747572696E672C2
0434E3D757569643A706C656467652E312E322E332E342C2073657269616C4E75
6D6265723D706C656467652E312E322E332E34', 
    2510: h'request_voucher'}},



]]></artwork></figure>

</section>
<section anchor="cose-signed-voucher-from-masa-to-pledge-via-registrar" title="COSE signed voucher from MASA to Pledge via Registrar">

<t>The resulting voucher is created by the MASA and returned via the JRC to the
Pledge.  It is signed by the MASA’s private key <xref target="masapriv"/> and can be
verified by the pledge using the MASA’s public key contained within the MASA certificate.</t>

<t>This is the raw binary signed_voucher, encoded in hexadecimal (with lf added):</t>

<figure><artwork><![CDATA[
d28444a101382ea1045820ab59b0679fcf65d5223d4ce4266a27a9c7432702466
ff5f3648e822a64d61b145902b0a1190993a71909957818323032302d31302d35
5431333a34363a31342d30303a30301909977818323032322d31302d355431333
a34363a31342d30303a30301909940319099a5029c7bafb81a2c6160d3357d229
11f51019099e6e706c656467652e312e322e332e3419099b59023d30820239308
201dea0030201020214397374f3fa812a0d37103b68c18481c501bc7cfe300a06
082a8648ce3d0403023073310b3009060355040613024e4c310b3009060355040
80c024e423110300e06035504070c0748656c6d6f6e6431133011060355040a0c
0a76616e64657273746f6b31143012060355040b0c0b636f6e73756c74616e637
9311a301806035504030c117265676973747261722e73746f6b2e6e6c301e170d
3230303930393037343230335a170d3231303930393037343230335a3073310b3
009060355040613024e4c310b300906035504080c024e423110300e0603550407
0c0748656c6d6f6e6431133011060355040a0c0a76616e64657273746f6b31143
012060355040b0c0b636f6e73756c74616e6379311a301806035504030c117265
676973747261722e73746f6b2e6e6c3059301306072a8648ce3d020106082a864
8ce3d030107034200046a24a9e24be234d17ad47e760c94b5e1dc4ee115ad8911
2ad4a6a64bb1bf68f9177d70e9109cb48c9b0dc7df2641199d0c2dbff21ed5840
38ac83f4781be138ea350304e301d0603551d0e0416041425cd9371b5a15f6d1e
e8c37a5113be0b8f132cc2301f0603551d2304183016801425cd9371b5a15f6d1
ee8c37a5113be0b8f132cc2300c0603551d13040530030101ff300a06082a8648
ce3d0403020349003046022100a66d9e24f9de08b7f0cf43c3c0ee57ccb660dea
e2e70cc61a1a2b33535025bba022100bffd746a99ebda0177fc6c3795758af4a0
9f998ebc4a906249f07ac96596dc751909960058483046022100d07cadc5c2836
e7845d6d2e2652527386bd40258d20ab24b6bbce5515df915e9022100aba68a07
b2295c4b49d53f73ea370ca66f761ad5d8d8c11c19a2d505729285cb]]></artwork></figure>

<t>The representiation of signed_voucher in CBOR diagnostic format is:</t>

<figure><artwork><![CDATA[
Diagnose (signed_voucher) =
18([ 
h'A101382E',     # {"alg": -47}
{4: h'AB59B0679FCF65D5223D4CE4266A27A9C7432702466FF5F3648E822A64D61
B14'},
h'voucher', 
h'3046022100D07CADC5C2836E7845D6D2E2652527386BD40258D20AB24B6BBCE
5515DF915E9022100ABA68A07B2295C4B49D53F73EA370CA66F761AD5D8D8C11C
19A2D505729285CB'])

Diagnose (voucher) =

{2451: 
    {2453: "2020-10-5T13:46:14-00:00", 
     2455: "2022-10-5T13:46:14-00:00", 
     2452: 3, 
     2458: h'29C7BAFB81A2C6160D3357D22911F510', 
     2462: "pledge.1.2.3.4", 
     2459: h'regis-cert-hex', 
      2454: 0}} 
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
JZ2Al7IE3xG9YT8J+aj9Y58rLUmpGkGj/jG62CSy2qkR2l01tpXbRz/1x5yH
ip+cIR3n63+BMcFlYvdvz3W7Dbfbhkm+oR1IcYapqdo2Cui8gmVBAD2vHquZ
eyUo08Wl2jp2295DF8i9MvQkSPjkV04y7Rfm4+YnHB7dPLE2vrWsKUfS3r72
BIBu5VYwabc1fVFMq1C65jFEMPsQVpWhsFrTu/F6mlmvNwZgXuJj4pYXDU2j
OJL0+kJteu54PTJbGAWfH5pYR3tsBDFm8YliPLWFwt6KEbWN4cZS7gp4qrqM
gIage4+ohnsaLrYONbF80FSFmXpfUwE1TWIvWKjEKg+GFbb46hJD8XSOZ8Lt
PQMc97vTMRoKbje08sTMOGsqM8Xw1PAZ9CLXrSq6WZj682qePlWQ4D5rLUPc
6UOZtM1urgsSwjpLbeXS9H0aZ9516IuITNd+egATnmvagbMVLqyzIfy6nhvs
Myzjz+J0LmbYkFgJicUNDQ9c0mUj4v/w1UVYLZFgAKtuP8DdDFScs3WS5VUp
GmfoqKrZtA9rqBgFVAfpXSOa3p2enU5GJ4plMXWjjo3HkWlzfnE+YpTwlSKl
MY/5sDoChdXmMrHnv8REbspotJ3Ifxf75lYggWUalFIkPF48IqJa83y+jJoR
PltIKV+DYz8lqbkq2iKpmC9W+w1P+A62ztMpV9wT/V/B/l/B/ucTbDo9V66K
f1niqlQZvyV15VzuSl2pAzCU7qSbC4xroovGN7JYzu+dxDrL/awtnyWe+dUv
jXYBzJ9sOKjP9UXtP0QpluC7oh5xhxgq6KIBJGWG2hePQrC/KkwE9ajWBuKY
TbFKcaRWYSQ6seDjHill1+leAgh5+BYZOiFK96bg4SBgk+/DpRj7c89juqpj
CpQRRi1LJ5whrvDncUiH/4a4/YtFODfplu50MI2uP8MRJARHIW665tf46F0y
MbZy9pg6xvsW5UL8KEMQlizDU5SB1ha36oYpzESr6zP4VUD727He1TK5a+vY
gUpd6709O8DCwwjeMtZpHbrogU781w26DKZ0ij9dX19jTQNduoMGBY/YpTex
OAl/vaFsMwv+Isa7FxtHbOZU0ZhCUSo/8I6FZ52f4oIR1LrxLR07qTW61Pkc
ZMEOUNVhjK9QyEyBoi5Lw25t6mbXHunSX/2sWMhBzaUNorJRdqkSX3+D5RCr
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
J//1gy/gmI3Zi1zz34OyrwZAigAA

-->

</rfc>

